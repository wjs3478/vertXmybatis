!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=24)}([function(e,t,n){"use strict";e.exports=n(23)},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(22)},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t,n){"use strict";e.exports=function(e){return null!==e&&"object"==typeof e}},function(e,t,n){"use strict";e.exports={}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var s in n=Object(arguments[u]))o.call(n,s)&&(l[s]=n[s]);if(r){i=r(n);for(var c=0;c<i.length;c++)a.call(n,i[c])&&(l[i[c]]=n[i[c]])}}return l}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=a(n(0));a(n(1));function a(e){return e&&e.__esModule?e:{default:e}}var i=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),r(t,[{key:"componentWillReceiveProps",value:function(e){console.log("안녕 난 프롭"),this.setState({sd:e.value})}},{key:"render",value:function(){return o.default.createElement("div",{class:"col-xl-3 col-sm-6 mb-3"},o.default.createElement("div",{class:this.props.class},o.default.createElement("div",{class:"card-body"},o.default.createElement("div",{class:"card-body-icon"},o.default.createElement("i",{class:"fa fa-fw fa-comments"})),o.default.createElement("div",{id:"testmsg",class:"mr-5"},this.props.value)),o.default.createElement("a",{class:"card-footer text-white clearfix small z-1",href:"#"},o.default.createElement("span",{class:"float-left"},"View Details"),o.default.createElement("span",{class:"float-right"},o.default.createElement("i",{class:"fa fa-angle-right"})))))}}]),t}();t.default=i},function(e,t){function n(){this._defaults=[]}["use","on","once","set","query","type","accept","auth","withCredentials","sortQuery","retry","ok","redirects","timeout","buffer","serialize","parse","ca","key","pfx","cert"].forEach(function(e){n.prototype[e]=function(){return this._defaults.push({fn:e,arguments:arguments}),this}}),n.prototype._setDefaults=function(e){this._defaults.forEach(function(t){e[t.fn].apply(e,t.arguments)})},e.exports=n},function(e,t,n){"use strict";t.type=function(e){return e.split(/ *; */).shift()},t.params=function(e){return e.split(/ *; */).reduce(function(e,t){var n=t.split(/ *= */),r=n.shift(),o=n.shift();return r&&o&&(e[r]=o),e},{})},t.parseLinks=function(e){return e.split(/ *, */).reduce(function(e,t){var n=t.split(/ *; */),r=n[0].slice(1,-1);return e[n[1].split(/ *= */)[1].slice(1,-1)]=r,e},{})},t.cleanHeader=function(e,t){return delete e["content-type"],delete e["content-length"],delete e["transfer-encoding"],delete e.host,t&&(delete e.authorization,delete e.cookie),e}},function(e,t,n){"use strict";var r=n(8);function o(e){if(e)return function(e){for(var t in o.prototype)e[t]=o.prototype[t];return e}(e)}e.exports=o,o.prototype.get=function(e){return this.header[e.toLowerCase()]},o.prototype._setHeaderProperties=function(e){var t=e["content-type"]||"";this.type=r.type(t);var n=r.params(t);for(var o in n)this[o]=n[o];this.links={};try{e.link&&(this.links=r.parseLinks(e.link))}catch(e){}},o.prototype._setStatusProperties=function(e){var t=e/100|0;this.status=this.statusCode=e,this.statusType=t,this.info=1==t,this.ok=2==t,this.redirect=3==t,this.clientError=4==t,this.serverError=5==t,this.error=(4==t||5==t)&&this.toError(),this.accepted=202==e,this.noContent=204==e,this.badRequest=400==e,this.unauthorized=401==e,this.notAcceptable=406==e,this.forbidden=403==e,this.notFound=404==e}},function(e,t,n){"use strict";var r=n(3);function o(e){if(e)return function(e){for(var t in o.prototype)e[t]=o.prototype[t];return e}(e)}e.exports=o,o.prototype.clearTimeout=function(){return clearTimeout(this._timer),clearTimeout(this._responseTimeoutTimer),delete this._timer,delete this._responseTimeoutTimer,this},o.prototype.parse=function(e){return this._parser=e,this},o.prototype.responseType=function(e){return this._responseType=e,this},o.prototype.serialize=function(e){return this._serializer=e,this},o.prototype.timeout=function(e){if(!e||"object"!=typeof e)return this._timeout=e,this._responseTimeout=0,this;for(var t in e)switch(t){case"deadline":this._timeout=e.deadline;break;case"response":this._responseTimeout=e.response;break;default:console.warn("Unknown timeout option",t)}return this},o.prototype.retry=function(e,t){return 0!==arguments.length&&!0!==e||(e=1),e<=0&&(e=0),this._maxRetries=e,this._retries=0,this._retryCallback=t,this};var a=["ECONNRESET","ETIMEDOUT","EADDRINFO","ESOCKETTIMEDOUT"];o.prototype._shouldRetry=function(e,t){if(!this._maxRetries||this._retries++>=this._maxRetries)return!1;if(this._retryCallback)try{var n=this._retryCallback(e,t);if(!0===n)return!0;if(!1===n)return!1}catch(e){console.error(e)}if(t&&t.status&&t.status>=500&&501!=t.status)return!0;if(e){if(e.code&&~a.indexOf(e.code))return!0;if(e.timeout&&"ECONNABORTED"==e.code)return!0;if(e.crossDomain)return!0}return!1},o.prototype._retry=function(){return this.clearTimeout(),this.req&&(this.req=null,this.req=this.request()),this._aborted=!1,this.timedout=!1,this._end()},o.prototype.then=function(e,t){if(!this._fullfilledPromise){var n=this;this._endCalled&&console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises"),this._fullfilledPromise=new Promise(function(e,t){n.end(function(n,r){n?t(n):e(r)})})}return this._fullfilledPromise.then(e,t)},o.prototype.catch=function(e){return this.then(void 0,e)},o.prototype.use=function(e){return e(this),this},o.prototype.ok=function(e){if("function"!=typeof e)throw Error("Callback required");return this._okCallback=e,this},o.prototype._isResponseOK=function(e){return!!e&&(this._okCallback?this._okCallback(e):e.status>=200&&e.status<300)},o.prototype.get=function(e){return this._header[e.toLowerCase()]},o.prototype.getHeader=o.prototype.get,o.prototype.set=function(e,t){if(r(e)){for(var n in e)this.set(n,e[n]);return this}return this._header[e.toLowerCase()]=t,this.header[e]=t,this},o.prototype.unset=function(e){return delete this._header[e.toLowerCase()],delete this.header[e],this},o.prototype.field=function(e,t){if(null===e||void 0===e)throw new Error(".field(name, val) name can not be empty");if(this._data&&console.error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()"),r(e)){for(var n in e)this.field(n,e[n]);return this}if(Array.isArray(t)){for(var o in t)this.field(e,t[o]);return this}if(null===t||void 0===t)throw new Error(".field(name, val) val can not be empty");return"boolean"==typeof t&&(t=""+t),this._getFormData().append(e,t),this},o.prototype.abort=function(){return this._aborted?this:(this._aborted=!0,this.xhr&&this.xhr.abort(),this.req&&this.req.abort(),this.clearTimeout(),this.emit("abort"),this)},o.prototype._auth=function(e,t,n,r){switch(n.type){case"basic":this.set("Authorization","Basic "+r(e+":"+t));break;case"auto":this.username=e,this.password=t;break;case"bearer":this.set("Authorization","Bearer "+e)}return this},o.prototype.withCredentials=function(e){return void 0==e&&(e=!0),this._withCredentials=e,this},o.prototype.redirects=function(e){return this._maxRedirects=e,this},o.prototype.maxResponseSize=function(e){if("number"!=typeof e)throw TypeError("Invalid argument");return this._maxResponseSize=e,this},o.prototype.toJSON=function(){return{method:this.method,url:this.url,data:this._data,headers:this._header}},o.prototype.send=function(e){var t=r(e),n=this._header["content-type"];if(this._formData&&console.error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()"),t&&!this._data)Array.isArray(e)?this._data=[]:this._isHost(e)||(this._data={});else if(e&&this._data&&this._isHost(this._data))throw Error("Can't merge these send calls");if(t&&r(this._data))for(var o in e)this._data[o]=e[o];else"string"==typeof e?(n||this.type("form"),n=this._header["content-type"],this._data="application/x-www-form-urlencoded"==n?this._data?this._data+"&"+e:e:(this._data||"")+e):this._data=e;return!t||this._isHost(e)?this:(n||this.type("json"),this)},o.prototype.sortQuery=function(e){return this._sort=void 0===e||e,this},o.prototype._finalizeQueryString=function(){var e=this._query.join("&");if(e&&(this.url+=(this.url.indexOf("?")>=0?"&":"?")+e),this._query.length=0,this._sort){var t=this.url.indexOf("?");if(t>=0){var n=this.url.substring(t+1).split("&");"function"==typeof this._sort?n.sort(this._sort):n.sort(),this.url=this.url.substring(0,t)+"?"+n.join("&")}}},o.prototype._appendQueryString=function(){console.trace("Unsupported")},o.prototype._timeoutError=function(e,t,n){if(!this._aborted){var r=new Error(e+t+"ms exceeded");r.timeout=t,r.code="ECONNABORTED",r.errno=n,this.timedout=!0,this.abort(),this.callback(r)}},o.prototype._setTimeouts=function(){var e=this;this._timeout&&!this._timer&&(this._timer=setTimeout(function(){e._timeoutError("Timeout of ",e._timeout,"ETIME")},this._timeout)),this._responseTimeout&&!this._responseTimeoutTimer&&(this._responseTimeoutTimer=setTimeout(function(){e._timeoutError("Response timeout of ",e._responseTimeout,"ETIMEDOUT")},this._responseTimeout))}},function(e,t,n){function r(e){if(e)return function(e){for(var t in r.prototype)e[t]=r.prototype[t];return e}(e)}e.exports=r,r.prototype.on=r.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},r.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},r.prototype.off=r.prototype.removeListener=r.prototype.removeAllListeners=r.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n,r=this._callbacks["$"+e];if(!r)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var o=0;o<r.length;o++)if((n=r[o])===t||n.fn===t){r.splice(o,1);break}return this},r.prototype.emit=function(e){this._callbacks=this._callbacks||{};var t=[].slice.call(arguments,1),n=this._callbacks["$"+e];if(n)for(var r=0,o=(n=n.slice(0)).length;r<o;++r)n[r].apply(this,t);return this},r.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},r.prototype.hasListeners=function(e){return!!this.listeners(e).length}},function(e,t,n){var r;"undefined"!=typeof window?r=window:"undefined"!=typeof self?r=self:(console.warn("Using browser-only version of superagent in non-browser environment"),r=this);var o=n(11),a=n(10),i=n(3),l=n(9),u=n(7);function s(){}var c=t=e.exports=function(e,n){return"function"==typeof n?new t.Request("GET",e).end(n):1==arguments.length?new t.Request("GET",e):new t.Request(e,n)};t.Request=g,c.getXHR=function(){if(!(!r.XMLHttpRequest||r.location&&"file:"==r.location.protocol&&r.ActiveXObject))return new XMLHttpRequest;try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){}throw Error("Browser-only version of superagent could not find XHR")};var f="".trim?function(e){return e.trim()}:function(e){return e.replace(/(^\s*|\s*$)/g,"")};function p(e){if(!i(e))return e;var t=[];for(var n in e)d(t,n,e[n]);return t.join("&")}function d(e,t,n){if(null!=n)if(Array.isArray(n))n.forEach(function(n){d(e,t,n)});else if(i(n))for(var r in n)d(e,t+"["+r+"]",n[r]);else e.push(encodeURIComponent(t)+"="+encodeURIComponent(n));else null===n&&e.push(encodeURIComponent(t))}function h(e){for(var t,n,r={},o=e.split("&"),a=0,i=o.length;a<i;++a)-1==(n=(t=o[a]).indexOf("="))?r[decodeURIComponent(t)]="":r[decodeURIComponent(t.slice(0,n))]=decodeURIComponent(t.slice(n+1));return r}function m(e){return/[\/+]json($|[^-\w])/.test(e)}function y(e){this.req=e,this.xhr=this.req.xhr,this.text="HEAD"!=this.req.method&&(""===this.xhr.responseType||"text"===this.xhr.responseType)||void 0===this.xhr.responseType?this.xhr.responseText:null,this.statusText=this.req.xhr.statusText;var t=this.xhr.status;1223===t&&(t=204),this._setStatusProperties(t),this.header=this.headers=function(e){for(var t,n,r,o,a=e.split(/\r?\n/),i={},l=0,u=a.length;l<u;++l)-1!==(t=(n=a[l]).indexOf(":"))&&(r=n.slice(0,t).toLowerCase(),o=f(n.slice(t+1)),i[r]=o);return i}(this.xhr.getAllResponseHeaders()),this.header["content-type"]=this.xhr.getResponseHeader("content-type"),this._setHeaderProperties(this.header),null===this.text&&e._responseType?this.body=this.xhr.response:this.body="HEAD"!=this.req.method?this._parseBody(this.text?this.text:this.xhr.response):null}function g(e,t){var n=this;this._query=this._query||[],this.method=e,this.url=t,this.header={},this._header={},this.on("end",function(){var e,t=null,r=null;try{r=new y(n)}catch(e){return(t=new Error("Parser is unable to parse the response")).parse=!0,t.original=e,n.xhr?(t.rawResponse=void 0===n.xhr.responseType?n.xhr.responseText:n.xhr.response,t.status=n.xhr.status?n.xhr.status:null,t.statusCode=t.status):(t.rawResponse=null,t.status=null),n.callback(t)}n.emit("response",r);try{n._isResponseOK(r)||(e=new Error(r.statusText||"Unsuccessful HTTP response"))}catch(t){e=t}e?(e.original=t,e.response=r,e.status=r.status,n.callback(e,r)):n.callback(null,r)})}function v(e,t,n){var r=c("DELETE",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r}c.serializeObject=p,c.parseString=h,c.types={html:"text/html",json:"application/json",xml:"text/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"},c.serialize={"application/x-www-form-urlencoded":p,"application/json":JSON.stringify},c.parse={"application/x-www-form-urlencoded":h,"application/json":JSON.parse},l(y.prototype),y.prototype._parseBody=function(e){var t=c.parse[this.type];return this.req._parser?this.req._parser(this,e):(!t&&m(this.type)&&(t=c.parse["application/json"]),t&&e&&(e.length||e instanceof Object)?t(e):null)},y.prototype.toError=function(){var e=this.req,t=e.method,n=e.url,r="cannot "+t+" "+n+" ("+this.status+")",o=new Error(r);return o.status=this.status,o.method=t,o.url=n,o},c.Response=y,o(g.prototype),a(g.prototype),g.prototype.type=function(e){return this.set("Content-Type",c.types[e]||e),this},g.prototype.accept=function(e){return this.set("Accept",c.types[e]||e),this},g.prototype.auth=function(e,t,n){1===arguments.length&&(t=""),"object"==typeof t&&null!==t&&(n=t,t=""),n||(n={type:"function"==typeof btoa?"basic":"auto"});return this._auth(e,t,n,function(e){if("function"==typeof btoa)return btoa(e);throw new Error("Cannot use basic auth, btoa is not a function")})},g.prototype.query=function(e){return"string"!=typeof e&&(e=p(e)),e&&this._query.push(e),this},g.prototype.attach=function(e,t,n){if(t){if(this._data)throw Error("superagent can't mix .send() and .attach()");this._getFormData().append(e,t,n||t.name)}return this},g.prototype._getFormData=function(){return this._formData||(this._formData=new r.FormData),this._formData},g.prototype.callback=function(e,t){if(this._shouldRetry(e,t))return this._retry();var n=this._callback;this.clearTimeout(),e&&(this._maxRetries&&(e.retries=this._retries-1),this.emit("error",e)),n(e,t)},g.prototype.crossDomainError=function(){var e=new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");e.crossDomain=!0,e.status=this.status,e.method=this.method,e.url=this.url,this.callback(e)},g.prototype.buffer=g.prototype.ca=g.prototype.agent=function(){return console.warn("This is not supported in browser version of superagent"),this},g.prototype.pipe=g.prototype.write=function(){throw Error("Streaming is not supported in browser version of superagent")},g.prototype._isHost=function(e){return e&&"object"==typeof e&&!Array.isArray(e)&&"[object Object]"!==Object.prototype.toString.call(e)},g.prototype.end=function(e){return this._endCalled&&console.warn("Warning: .end() was called twice. This is not supported in superagent"),this._endCalled=!0,this._callback=e||s,this._finalizeQueryString(),this._end()},g.prototype._end=function(){var e=this,t=this.xhr=c.getXHR(),n=this._formData||this._data;this._setTimeouts(),t.onreadystatechange=function(){var n=t.readyState;if(n>=2&&e._responseTimeoutTimer&&clearTimeout(e._responseTimeoutTimer),4==n){var r;try{r=t.status}catch(e){r=0}if(!r){if(e.timedout||e._aborted)return;return e.crossDomainError()}e.emit("end")}};var r=function(t,n){n.total>0&&(n.percent=n.loaded/n.total*100),n.direction=t,e.emit("progress",n)};if(this.hasListeners("progress"))try{t.onprogress=r.bind(null,"download"),t.upload&&(t.upload.onprogress=r.bind(null,"upload"))}catch(e){}try{this.username&&this.password?t.open(this.method,this.url,!0,this.username,this.password):t.open(this.method,this.url,!0)}catch(e){return this.callback(e)}if(this._withCredentials&&(t.withCredentials=!0),!this._formData&&"GET"!=this.method&&"HEAD"!=this.method&&"string"!=typeof n&&!this._isHost(n)){var o=this._header["content-type"],a=this._serializer||c.serialize[o?o.split(";")[0]:""];!a&&m(o)&&(a=c.serialize["application/json"]),a&&(n=a(n))}for(var i in this.header)null!=this.header[i]&&this.header.hasOwnProperty(i)&&t.setRequestHeader(i,this.header[i]);return this._responseType&&(t.responseType=this._responseType),this.emit("request",this),t.send(void 0!==n?n:null),this},c.agent=function(){return new u},["GET","POST","OPTIONS","PATCH","PUT","DELETE"].forEach(function(e){u.prototype[e.toLowerCase()]=function(t,n){var r=new c.Request(e,t);return this._setDefaults(r),n&&r.end(n),r}}),u.prototype.del=u.prototype.delete,c.get=function(e,t,n){var r=c("GET",e);return"function"==typeof t&&(n=t,t=null),t&&r.query(t),n&&r.end(n),r},c.head=function(e,t,n){var r=c("HEAD",e);return"function"==typeof t&&(n=t,t=null),t&&r.query(t),n&&r.end(n),r},c.options=function(e,t,n){var r=c("OPTIONS",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r},c.del=v,c.delete=v,c.patch=function(e,t,n){var r=c("PATCH",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r},c.post=function(e,t,n){var r=c("POST",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r},c.put=function(e,t,n){var r=c("PUT",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=l(n(0)),a=(l(n(1)),l(n(12))),i=l(n(6));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={ass:"0",bsd:"0",csd:"0"},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),r(t,[{key:"componentWillMount",value:function(){var e=this;a.default.get("http://localhost:8080/hungry").end(function(t,n){e.loadJSON(t,n)})}},{key:"loadJSON",value:function(e,t){if(e)console.log("오류");else{console.log(t),console.log(t.text),console.log(JSON.parse(t.text));var n=JSON.parse(t.text);this.setState({ass:n[0].USER_ID,bsd:n[1].USER_ID,csd:n[2].USER_ID})}}},{key:"componentWillReceiveProps",value:function(e){console.log("안녕 난 프롭")}},{key:"render",value:function(){var e=this.state.ass,t=this.state.bsd,n=this.state.csd;return o.default.createElement("div",{class:"row"},o.default.createElement(i.default,{value:e,class:"card text-white bg-primary o-hidden h-100"}),o.default.createElement(i.default,{value:t,class:"card text-white bg-warning o-hidden h-100"}),o.default.createElement(i.default,{value:n,class:"card text-white bg-success o-hidden h-100"}),o.default.createElement(i.default,{value:"98",class:"card text-white bg-danger o-hidden h-100"}))}}]),t}();t.default=u},function(e,t,n){"use strict";e.exports=function(e){try{e.focus()}catch(e){}}},function(e,t,n){"use strict";e.exports=function(e){var t=(e?e.ownerDocument||e:document).defaultView||window;return!(!e||!("function"==typeof t.Node?e instanceof t.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}},function(e,t,n){"use strict";var r=n(15);e.exports=function(e){return r(e)&&3==e.nodeType}},function(e,t,n){"use strict";var r=n(16);e.exports=function e(t,n){return!(!t||!n)&&(t===n||!r(t)&&(r(n)?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}},function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty;function o(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}e.exports=function(e,t){if(o(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(var i=0;i<n.length;i++)if(!r.call(t,n[i])||!o(e[n[i]],t[n[i]]))return!1;return!0}},function(e,t,n){"use strict";e.exports=function(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}},function(e,t,n){"use strict";var r=n(2),o={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function(){e.removeEventListener(t,n,!0)}}):{remove:r}},registerDefault:function(){}};e.exports=o},function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},function(e,t,n){"use strict";
/** @license React v16.2.0
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(21),a=n(5),i=n(2),l=n(20),u=n(19),s=n(18),c=n(17),f=n(14),p=n(4);function d(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw(t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.")).name="Invariant Violation",t.framesToPop=1,t}r||d("227");var h={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function m(e,t){return(e&t)===t}var y={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var t=y,n=e.Properties||{},r=e.DOMAttributeNamespaces||{},o=e.DOMAttributeNames||{};for(var a in e=e.DOMMutationMethods||{},n){g.hasOwnProperty(a)&&d("48",a);var i=a.toLowerCase(),l=n[a];1>=(i={attributeName:i,attributeNamespace:null,propertyName:a,mutationMethod:null,mustUseProperty:m(l,t.MUST_USE_PROPERTY),hasBooleanValue:m(l,t.HAS_BOOLEAN_VALUE),hasNumericValue:m(l,t.HAS_NUMERIC_VALUE),hasPositiveNumericValue:m(l,t.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:m(l,t.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:m(l,t.HAS_STRING_BOOLEAN_VALUE)}).hasBooleanValue+i.hasNumericValue+i.hasOverloadedBooleanValue||d("50",a),o.hasOwnProperty(a)&&(i.attributeName=o[a]),r.hasOwnProperty(a)&&(i.attributeNamespace=r[a]),e.hasOwnProperty(a)&&(i.mutationMethod=e[a]),g[a]=i}}},g={};function v(e,t){if(h.hasOwnProperty(e)||2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1]))return!1;if(null===t)return!0;switch(typeof t){case"boolean":return h.hasOwnProperty(e)?e=!0:(t=b(e))?e=t.hasBooleanValue||t.hasStringBooleanValue||t.hasOverloadedBooleanValue:e="data-"===(e=e.toLowerCase().slice(0,5))||"aria-"===e,e;case"undefined":case"number":case"string":case"object":return!0;default:return!1}}function b(e){return g.hasOwnProperty(e)?g[e]:null}var C=y,w=C.MUST_USE_PROPERTY,k=C.HAS_BOOLEAN_VALUE,x=C.HAS_NUMERIC_VALUE,_=C.HAS_POSITIVE_NUMERIC_VALUE,E=C.HAS_OVERLOADED_BOOLEAN_VALUE,T=C.HAS_STRING_BOOLEAN_VALUE,S={Properties:{allowFullScreen:k,async:k,autoFocus:k,autoPlay:k,capture:E,checked:w|k,cols:_,contentEditable:T,controls:k,default:k,defer:k,disabled:k,download:E,draggable:T,formNoValidate:k,hidden:k,loop:k,multiple:w|k,muted:w|k,noValidate:k,open:k,playsInline:k,readOnly:k,required:k,reversed:k,rows:_,rowSpan:x,scoped:k,seamless:k,selected:w|k,size:_,start:x,span:_,spellCheck:T,style:0,tabIndex:0,itemScope:k,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:T},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMMutationMethods:{value:function(e,t){if(null==t)return e.removeAttribute("value");"number"!==e.type||!1===e.hasAttribute("value")?e.setAttribute("value",""+t):e.validity&&!e.validity.badInput&&e.ownerDocument.activeElement!==e&&e.setAttribute("value",""+t)}}},P=C.HAS_STRING_BOOLEAN_VALUE,O="http://www.w3.org/1999/xlink",N="http://www.w3.org/XML/1998/namespace",I={Properties:{autoReverse:P,externalResourcesRequired:P,preserveAlpha:P},DOMAttributeNames:{autoReverse:"autoReverse",externalResourcesRequired:"externalResourcesRequired",preserveAlpha:"preserveAlpha"},DOMAttributeNamespaces:{xlinkActuate:O,xlinkArcrole:O,xlinkHref:O,xlinkRole:O,xlinkShow:O,xlinkTitle:O,xlinkType:O,xmlBase:N,xmlLang:N,xmlSpace:N}},R=/[\-\:]([a-z])/g;function D(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function(e){var t=e.replace(R,D);I.Properties[t]=0,I.DOMAttributeNames[t]=e}),C.injectDOMPropertyConfig(S),C.injectDOMPropertyConfig(I);var M={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(e){"function"!=typeof e.invokeGuardedCallback&&d("197"),A=e.invokeGuardedCallback}},invokeGuardedCallback:function(e,t,n,r,o,a,i,l,u){A.apply(M,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,a,i,l,u){if(M.invokeGuardedCallback.apply(this,arguments),M.hasCaughtError()){var s=M.clearCaughtError();M._hasRethrowError||(M._hasRethrowError=!0,M._rethrowError=s)}},rethrowCaughtError:function(){return function(){if(M._hasRethrowError){var e=M._rethrowError;throw M._rethrowError=null,M._hasRethrowError=!1,e}}.apply(M,arguments)},hasCaughtError:function(){return M._hasCaughtError},clearCaughtError:function(){if(M._hasCaughtError){var e=M._caughtError;return M._caughtError=null,M._hasCaughtError=!1,e}d("198")}};function A(e,t,n,r,o,a,i,l,u){M._hasCaughtError=!1,M._caughtError=null;var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){M._caughtError=e,M._hasCaughtError=!0}}var L=null,F={};function U(){if(L)for(var e in F){var t=F[e],n=L.indexOf(e);if(-1<n||d("96",e),!j[n])for(var r in t.extractEvents||d("97",e),j[n]=t,n=t.eventTypes){var o=void 0,a=n[r],i=t,l=r;z.hasOwnProperty(l)&&d("99",l),z[l]=a;var u=a.phasedRegistrationNames;if(u){for(o in u)u.hasOwnProperty(o)&&H(u[o],i,l);o=!0}else a.registrationName?(H(a.registrationName,i,l),o=!0):o=!1;o||d("98",r,e)}}}function H(e,t,n){V[e]&&d("100",e),V[e]=t,B[e]=t.eventTypes[n].dependencies}var j=[],z={},V={},B={};function q(e){L&&d("101"),L=Array.prototype.slice.call(e),U()}function K(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];F.hasOwnProperty(t)&&F[t]===r||(F[t]&&d("102",t),F[t]=r,n=!0)}n&&U()}var W=Object.freeze({plugins:j,eventNameDispatchConfigs:z,registrationNameModules:V,registrationNameDependencies:B,possibleRegistrationNames:null,injectEventPluginOrder:q,injectEventPluginsByName:K}),$=null,Q=null,G=null;function X(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=G(r),M.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function Y(e,t){return null==t&&d("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function J(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var Z=null;function ee(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)X(e,t,n[o],r[o]);else n&&X(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function te(e){return ee(e,!0)}function ne(e){return ee(e,!1)}var re={injectEventPluginOrder:q,injectEventPluginsByName:K};function oe(e,t){var n=e.stateNode;if(!n)return null;var r=$(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&d("231",t,typeof n),n)}function ae(e,t,n,r){for(var o,a=0;a<j.length;a++){var i=j[a];i&&(i=i.extractEvents(e,t,n,r))&&(o=Y(o,i))}return o}function ie(e){e&&(Z=Y(Z,e))}function le(e){var t=Z;Z=null,t&&(J(t,e?te:ne),Z&&d("95"),M.rethrowCaughtError())}var ue=Object.freeze({injection:re,getListener:oe,extractEvents:ae,enqueueEvents:ie,processEventQueue:le}),se=Math.random().toString(36).slice(2),ce="__reactInternalInstance$"+se,fe="__reactEventHandlers$"+se;function pe(e){if(e[ce])return e[ce];for(var t=[];!e[ce];){if(t.push(e),!e.parentNode)return null;e=e.parentNode}var n=void 0,r=e[ce];if(5===r.tag||6===r.tag)return r;for(;e&&(r=e[ce]);e=t.pop())n=r;return n}function de(e){if(5===e.tag||6===e.tag)return e.stateNode;d("33")}function he(e){return e[fe]||null}var me=Object.freeze({precacheFiberNode:function(e,t){t[ce]=e},getClosestInstanceFromNode:pe,getInstanceFromNode:function(e){return!(e=e[ce])||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:de,getFiberCurrentPropsFromNode:he,updateFiberProps:function(e,t){e[fe]=t}});function ye(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function ge(e,t,n){for(var r=[];e;)r.push(e),e=ye(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function ve(e,t,n){(t=oe(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=Y(n._dispatchListeners,t),n._dispatchInstances=Y(n._dispatchInstances,e))}function be(e){e&&e.dispatchConfig.phasedRegistrationNames&&ge(e._targetInst,ve,e)}function Ce(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;ge(t=t?ye(t):null,ve,e)}}function we(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=oe(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=Y(n._dispatchListeners,t),n._dispatchInstances=Y(n._dispatchInstances,e))}function ke(e){e&&e.dispatchConfig.registrationName&&we(e._targetInst,null,e)}function xe(e){J(e,be)}function _e(e,t,n,r){if(n&&r)e:{for(var o=n,a=r,i=0,l=o;l;l=ye(l))i++;l=0;for(var u=a;u;u=ye(u))l++;for(;0<i-l;)o=ye(o),i--;for(;0<l-i;)a=ye(a),l--;for(;i--;){if(o===a||o===a.alternate)break e;o=ye(o),a=ye(a)}o=null}else o=null;for(a=o,o=[];n&&n!==a&&(null===(i=n.alternate)||i!==a);)o.push(n),n=ye(n);for(n=[];r&&r!==a&&(null===(i=r.alternate)||i!==a);)n.push(r),r=ye(r);for(r=0;r<o.length;r++)we(o[r],"bubbled",e);for(e=n.length;0<e--;)we(n[e],"captured",t)}var Ee=Object.freeze({accumulateTwoPhaseDispatches:xe,accumulateTwoPhaseDispatchesSkipTarget:function(e){J(e,Ce)},accumulateEnterLeaveDispatches:_e,accumulateDirectDispatches:function(e){J(e,ke)}}),Te=null;function Se(){return!Te&&o.canUseDOM&&(Te="textContent"in document.documentElement?"textContent":"innerText"),Te}var Pe={_root:null,_startText:null,_fallbackText:null};function Oe(){if(Pe._fallbackText)return Pe._fallbackText;var e,t,n=Pe._startText,r=n.length,o=Ne(),a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return Pe._fallbackText=o.slice(e,1<t?1-t:void 0),Pe._fallbackText}function Ne(){return"value"in Pe._root?Pe._root.value:Pe._root[Se()]}var Ie="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),Re={type:null,target:null,currentTarget:i.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};function De(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?i.thatReturnsTrue:i.thatReturnsFalse,this.isPropagationStopped=i.thatReturnsFalse,this}function Me(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Ae(e){e instanceof this||d("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Le(e){e.eventPool=[],e.getPooled=Me,e.release=Ae}function Fe(e,t,n,r){return De.call(this,e,t,n,r)}function Ue(e,t,n,r){return De.call(this,e,t,n,r)}a(De.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=i.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=i.thatReturnsTrue)},persist:function(){this.isPersistent=i.thatReturnsTrue},isPersistent:i.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<Ie.length;t++)this[Ie[t]]=null}}),De.Interface=Re,De.augmentClass=function(e,t){function n(){}n.prototype=this.prototype;var r=new n;a(r,e.prototype),e.prototype=r,e.prototype.constructor=e,e.Interface=a({},this.Interface,t),e.augmentClass=this.augmentClass,Le(e)},Le(De),De.augmentClass(Fe,{data:null}),De.augmentClass(Ue,{data:null});var He,je=[9,13,27,32],ze=o.canUseDOM&&"CompositionEvent"in window,Ve=null;if(o.canUseDOM&&"documentMode"in document&&(Ve=document.documentMode),He=o.canUseDOM&&"TextEvent"in window&&!Ve){var Be=window.opera;He=!("object"==typeof Be&&"function"==typeof Be.version&&12>=parseInt(Be.version(),10))}var qe=He,Ke=o.canUseDOM&&(!ze||Ve&&8<Ve&&11>=Ve),We=String.fromCharCode(32),$e={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")}},Qe=!1;function Ge(e,t){switch(e){case"topKeyUp":return-1!==je.indexOf(t.keyCode);case"topKeyDown":return 229!==t.keyCode;case"topKeyPress":case"topMouseDown":case"topBlur":return!0;default:return!1}}function Xe(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ye=!1;var Je={eventTypes:$e,extractEvents:function(e,t,n,r){var o;if(ze)e:{switch(e){case"topCompositionStart":var a=$e.compositionStart;break e;case"topCompositionEnd":a=$e.compositionEnd;break e;case"topCompositionUpdate":a=$e.compositionUpdate;break e}a=void 0}else Ye?Ge(e,n)&&(a=$e.compositionEnd):"topKeyDown"===e&&229===n.keyCode&&(a=$e.compositionStart);return a?(Ke&&(Ye||a!==$e.compositionStart?a===$e.compositionEnd&&Ye&&(o=Oe()):(Pe._root=r,Pe._startText=Ne(),Ye=!0)),a=Fe.getPooled(a,t,n,r),o?a.data=o:null!==(o=Xe(n))&&(a.data=o),xe(a),o=a):o=null,(e=qe?function(e,t){switch(e){case"topCompositionEnd":return Xe(t);case"topKeyPress":return 32!==t.which?null:(Qe=!0,We);case"topTextInput":return(e=t.data)===We&&Qe?null:e;default:return null}}(e,n):function(e,t){if(Ye)return"topCompositionEnd"===e||!ze&&Ge(e,t)?(e=Oe(),Pe._root=null,Pe._startText=null,Pe._fallbackText=null,Ye=!1,e):null;switch(e){case"topPaste":return null;case"topKeyPress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"topCompositionEnd":return Ke?null:t.data;default:return null}}(e,n))?((t=Ue.getPooled($e.beforeInput,t,n,r)).data=e,xe(t)):t=null,[o,t]}},Ze=null,et=null,tt=null;function nt(e){if(e=Q(e)){Ze&&"function"==typeof Ze.restoreControlledState||d("194");var t=$(e.stateNode);Ze.restoreControlledState(e.stateNode,e.type,t)}}var rt={injectFiberControlledHostComponent:function(e){Ze=e}};function ot(e){et?tt?tt.push(e):tt=[e]:et=e}function at(){if(et){var e=et,t=tt;if(tt=et=null,nt(e),t)for(e=0;e<t.length;e++)nt(t[e])}}var it=Object.freeze({injection:rt,enqueueStateRestore:ot,restoreStateIfNeeded:at});function lt(e,t){return e(t)}var ut=!1;function st(e,t){if(ut)return lt(e,t);ut=!0;try{return lt(e,t)}finally{ut=!1,at()}}var ct,ft={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function pt(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ft[e.type]:"textarea"===t}function dt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ht(e,t){if(!o.canUseDOM||t&&!("addEventListener"in document))return!1;var n=(t="on"+e)in document;return n||((n=document.createElement("div")).setAttribute(t,"return;"),n="function"==typeof n[t]),!n&&ct&&"wheel"===e&&(n=document.implementation.hasFeature("Events.wheel","3.0")),n}function mt(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function yt(e){e._valueTracker||(e._valueTracker=function(e){var t=mt(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"function"==typeof n.get&&"function"==typeof n.set)return Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:!0,get:function(){return n.get.call(this)},set:function(e){r=""+e,n.set.call(this,e)}}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}(e))}function gt(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=mt(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}o.canUseDOM&&(ct=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("",""));var vt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ")}};function bt(e,t,n){return(e=De.getPooled(vt.change,e,t,n)).type="change",ot(n),xe(e),e}var Ct=null,wt=null;function kt(e){ie(e),le(!1)}function xt(e){if(gt(de(e)))return e}function _t(e,t){if("topChange"===e)return t}var Et=!1;function Tt(){Ct&&(Ct.detachEvent("onpropertychange",St),wt=Ct=null)}function St(e){"value"===e.propertyName&&xt(wt)&&st(kt,e=bt(wt,e,dt(e)))}function Pt(e,t,n){"topFocus"===e?(Tt(),wt=n,(Ct=t).attachEvent("onpropertychange",St)):"topBlur"===e&&Tt()}function Ot(e){if("topSelectionChange"===e||"topKeyUp"===e||"topKeyDown"===e)return xt(wt)}function Nt(e,t){if("topClick"===e)return xt(t)}function It(e,t){if("topInput"===e||"topChange"===e)return xt(t)}o.canUseDOM&&(Et=ht("input")&&(!document.documentMode||9<document.documentMode));var Rt={eventTypes:vt,_isInputEventSupported:Et,extractEvents:function(e,t,n,r){var o=t?de(t):window,a=o.nodeName&&o.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===o.type)var i=_t;else if(pt(o))if(Et)i=It;else{i=Ot;var l=Pt}else!(a=o.nodeName)||"input"!==a.toLowerCase()||"checkbox"!==o.type&&"radio"!==o.type||(i=Nt);if(i&&(i=i(e,t)))return bt(i,n,r);l&&l(e,o,t),"topBlur"===e&&null!=t&&(e=t._wrapperState||o._wrapperState)&&e.controlled&&"number"===o.type&&(e=""+o.value,o.getAttribute("value")!==e&&o.setAttribute("value",e))}};function Dt(e,t,n,r){return De.call(this,e,t,n,r)}De.augmentClass(Dt,{view:null,detail:null});var Mt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function At(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Mt[e])&&!!t[e]}function Lt(){return At}function Ft(e,t,n,r){return De.call(this,e,t,n,r)}Dt.augmentClass(Ft,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Lt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}});var Ut={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},Ht={eventTypes:Ut,extractEvents:function(e,t,n,r){if("topMouseOver"===e&&(n.relatedTarget||n.fromElement)||"topMouseOut"!==e&&"topMouseOver"!==e)return null;var o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window;if("topMouseOut"===e?(e=t,t=(t=n.relatedTarget||n.toElement)?pe(t):null):e=null,e===t)return null;var a=null==e?o:de(e);o=null==t?o:de(t);var i=Ft.getPooled(Ut.mouseLeave,e,n,r);return i.type="mouseleave",i.target=a,i.relatedTarget=o,(n=Ft.getPooled(Ut.mouseEnter,t,n,r)).type="mouseenter",n.target=o,n.relatedTarget=a,_e(i,n,e,t),[i,n]}},jt=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function zt(e){return"string"==typeof(e=e.type)?e:"function"==typeof e?e.displayName||e.name:null}function Vt(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function Bt(e){return!!(e=e._reactInternalFiber)&&2===Vt(e)}function qt(e){2!==Vt(e)&&d("188")}function Kt(e){var t=e.alternate;if(!t)return 3===(t=Vt(e))&&d("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var i=o.child;i;){if(i===n)return qt(o),e;if(i===r)return qt(o),t;i=i.sibling}d("188")}if(n.return!==r.return)n=o,r=a;else{i=!1;for(var l=o.child;l;){if(l===n){i=!0,n=o,r=a;break}if(l===r){i=!0,r=o,n=a;break}l=l.sibling}if(!i){for(l=a.child;l;){if(l===n){i=!0,n=a,r=o;break}if(l===r){i=!0,r=a,n=o;break}l=l.sibling}i||d("189")}}n.alternate!==r&&d("190")}return 3!==n.tag&&d("188"),n.stateNode.current===n?e:t}var Wt=[];function $t(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=pe(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],Gt(e.topLevelType,t,e.nativeEvent,dt(e.nativeEvent))}var Qt=!0,Gt=void 0;function Xt(e){Qt=!!e}function Yt(e,t,n){return n?l.listen(n,t,Zt.bind(null,e)):null}function Jt(e,t,n){return n?l.capture(n,t,Zt.bind(null,e)):null}function Zt(e,t){if(Qt){var n=dt(t);if(null===(n=pe(n))||"number"!=typeof n.tag||2===Vt(n)||(n=null),Wt.length){var r=Wt.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{st($t,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Wt.length&&Wt.push(e)}}}var en=Object.freeze({get _enabled(){return Qt},get _handleTopLevel(){return Gt},setHandleTopLevel:function(e){Gt=e},setEnabled:Xt,isEnabled:function(){return Qt},trapBubbledEvent:Yt,trapCapturedEvent:Jt,dispatchEvent:Zt});function tn(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}var nn={animationend:tn("Animation","AnimationEnd"),animationiteration:tn("Animation","AnimationIteration"),animationstart:tn("Animation","AnimationStart"),transitionend:tn("Transition","TransitionEnd")},rn={},on={};function an(e){if(rn[e])return rn[e];if(!nn[e])return e;var t,n=nn[e];for(t in n)if(n.hasOwnProperty(t)&&t in on)return rn[e]=n[t];return""}o.canUseDOM&&(on=document.createElement("div").style,"AnimationEvent"in window||(delete nn.animationend.animation,delete nn.animationiteration.animation,delete nn.animationstart.animation),"TransitionEvent"in window||delete nn.transitionend.transition);var ln={topAbort:"abort",topAnimationEnd:an("animationend")||"animationend",topAnimationIteration:an("animationiteration")||"animationiteration",topAnimationStart:an("animationstart")||"animationstart",topBlur:"blur",topCancel:"cancel",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topClose:"close",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoad:"load",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topToggle:"toggle",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:an("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},un={},sn=0,cn="_reactListenersID"+(""+Math.random()).slice(2);function fn(e){return Object.prototype.hasOwnProperty.call(e,cn)||(e[cn]=sn++,un[e[cn]]={}),un[e[cn]]}function pn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=pn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=pn(r)}}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)}var mn=o.canUseDOM&&"documentMode"in document&&11>=document.documentMode,yn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ")}},gn=null,vn=null,bn=null,Cn=!1;function wn(e,t){if(Cn||null==gn||gn!==u())return null;var n=gn;return"selectionStart"in n&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?n={anchorNode:(n=window.getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}:n=void 0,bn&&s(bn,n)?null:(bn=n,(e=De.getPooled(yn.select,vn,e,t)).type="select",e.target=gn,xe(e),e)}var kn={eventTypes:yn,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=fn(a),o=B.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?de(t):window,e){case"topFocus":(pt(a)||"true"===a.contentEditable)&&(gn=a,vn=t,bn=null);break;case"topBlur":bn=vn=gn=null;break;case"topMouseDown":Cn=!0;break;case"topContextMenu":case"topMouseUp":return Cn=!1,wn(n,r);case"topSelectionChange":if(mn)break;case"topKeyDown":case"topKeyUp":return wn(n,r)}return null}};function xn(e,t,n,r){return De.call(this,e,t,n,r)}function _n(e,t,n,r){return De.call(this,e,t,n,r)}function En(e,t,n,r){return De.call(this,e,t,n,r)}function Tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,32<=e||13===e?e:0}De.augmentClass(xn,{animationName:null,elapsedTime:null,pseudoElement:null}),De.augmentClass(_n,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Dt.augmentClass(En,{relatedTarget:null});var Sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Pn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};function On(e,t,n,r){return De.call(this,e,t,n,r)}function Nn(e,t,n,r){return De.call(this,e,t,n,r)}function In(e,t,n,r){return De.call(this,e,t,n,r)}function Rn(e,t,n,r){return De.call(this,e,t,n,r)}function Dn(e,t,n,r){return De.call(this,e,t,n,r)}Dt.augmentClass(On,{key:function(e){if(e.key){var t=Sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Pn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Lt,charCode:function(e){return"keypress"===e.type?Tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Ft.augmentClass(Nn,{dataTransfer:null}),Dt.augmentClass(In,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Lt}),De.augmentClass(Rn,{propertyName:null,elapsedTime:null,pseudoElement:null}),Ft.augmentClass(Dn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null});var Mn={},An={};"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel".split(" ").forEach(function(e){var t=e[0].toUpperCase()+e.slice(1),n="on"+t;n={phasedRegistrationNames:{bubbled:n,captured:n+"Capture"},dependencies:[t="top"+t]},Mn[e]=n,An[t]=n});var Ln={eventTypes:Mn,extractEvents:function(e,t,n,r){var o=An[e];if(!o)return null;switch(e){case"topKeyPress":if(0===Tn(n))return null;case"topKeyDown":case"topKeyUp":e=On;break;case"topBlur":case"topFocus":e=En;break;case"topClick":if(2===n.button)return null;case"topDoubleClick":case"topMouseDown":case"topMouseMove":case"topMouseUp":case"topMouseOut":case"topMouseOver":case"topContextMenu":e=Ft;break;case"topDrag":case"topDragEnd":case"topDragEnter":case"topDragExit":case"topDragLeave":case"topDragOver":case"topDragStart":case"topDrop":e=Nn;break;case"topTouchCancel":case"topTouchEnd":case"topTouchMove":case"topTouchStart":e=In;break;case"topAnimationEnd":case"topAnimationIteration":case"topAnimationStart":e=xn;break;case"topTransitionEnd":e=Rn;break;case"topScroll":e=Dt;break;case"topWheel":e=Dn;break;case"topCopy":case"topCut":case"topPaste":e=_n;break;default:e=De}return xe(t=e.getPooled(o,t,n,r)),t}};Gt=function(e,t,n,r){ie(e=ae(e,t,n,r)),le(!1)},re.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),$=me.getFiberCurrentPropsFromNode,Q=me.getInstanceFromNode,G=me.getNodeFromInstance,re.injectEventPluginsByName({SimpleEventPlugin:Ln,EnterLeaveEventPlugin:Ht,ChangeEventPlugin:Rt,SelectEventPlugin:kn,BeforeInputEventPlugin:Je});var Fn=[],Un=-1;function Hn(e){0>Un||(e.current=Fn[Un],Fn[Un]=null,Un--)}function jn(e,t){Fn[++Un]=e.current,e.current=t}new Set;var zn={current:p},Vn={current:!1},Bn=p;function qn(e){return Wn(e)?Bn:zn.current}function Kn(e,t){var n=e.type.contextTypes;if(!n)return p;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Wn(e){return 2===e.tag&&null!=e.type.childContextTypes}function $n(e){Wn(e)&&(Hn(Vn),Hn(zn))}function Qn(e,t,n){null!=zn.cursor&&d("168"),jn(zn,t),jn(Vn,n)}function Gn(e,t){var n=e.stateNode,r=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;for(var o in n=n.getChildContext())o in r||d("108",zt(e)||"Unknown",o);return a({},t,n)}function Xn(e){if(!Wn(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||p,Bn=zn.current,jn(zn,t),jn(Vn,Vn.current),!0}function Yn(e,t){var n=e.stateNode;if(n||d("169"),t){var r=Gn(e,Bn);n.__reactInternalMemoizedMergedChildContext=r,Hn(Vn),Hn(zn),jn(zn,r)}else Hn(Vn);jn(Vn,t)}function Jn(e,t,n){this.tag=e,this.key=t,this.stateNode=this.type=null,this.sibling=this.child=this.return=null,this.index=0,this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null,this.internalContextTag=n,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function Zn(e,t,n){var r=e.alternate;return null===r?((r=new Jn(e.tag,e.key,e.internalContextTag)).type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.pendingProps=t,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function er(e,t,n){var r=void 0,o=e.type,a=e.key;return"function"==typeof o?((r=o.prototype&&o.prototype.isReactComponent?new Jn(2,a,t):new Jn(0,a,t)).type=o,r.pendingProps=e.props):"string"==typeof o?((r=new Jn(5,a,t)).type=o,r.pendingProps=e.props):"object"==typeof o&&null!==o&&"number"==typeof o.tag?(r=o).pendingProps=e.props:d("130",null==o?o:typeof o,""),r.expirationTime=n,r}function tr(e,t,n,r){return(t=new Jn(10,r,t)).pendingProps=e,t.expirationTime=n,t}function nr(e,t,n){return(t=new Jn(6,null,t)).pendingProps=e,t.expirationTime=n,t}function rr(e,t,n){return(t=new Jn(7,e.key,t)).type=e.handler,t.pendingProps=e,t.expirationTime=n,t}function or(e,t,n){return(e=new Jn(9,null,t)).expirationTime=n,e}function ar(e,t,n){return(t=new Jn(4,e.key,t)).pendingProps=e.children||[],t.expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}var ir=null,lr=null;function ur(e){return function(t){try{return e(t)}catch(e){}}}function sr(e){"function"==typeof ir&&ir(e)}function cr(e){"function"==typeof lr&&lr(e)}function fr(e){return{baseState:e,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function pr(e,t){null===e.last?e.first=e.last=t:(e.last.next=t,e.last=t),(0===e.expirationTime||e.expirationTime>t.expirationTime)&&(e.expirationTime=t.expirationTime)}function dr(e,t){var n=e.alternate,r=e.updateQueue;null===r&&(r=e.updateQueue=fr(null)),null!==n?null===(e=n.updateQueue)&&(e=n.updateQueue=fr(null)):e=null,null===(e=e!==r?e:null)?pr(r,t):null===r.last||null===e.last?(pr(r,t),pr(e,t)):(pr(r,t),e.last=t)}function hr(e,t,n,r){return"function"==typeof(e=e.partialState)?e.call(t,n,r):e}function mr(e,t,n,r,o,i){null!==e&&e.updateQueue===n&&(n=t.updateQueue={baseState:n.baseState,expirationTime:n.expirationTime,first:n.first,last:n.last,isInitialized:n.isInitialized,callbackList:null,hasForceUpdate:!1}),n.expirationTime=0,n.isInitialized?e=n.baseState:(e=n.baseState=t.memoizedState,n.isInitialized=!0);for(var l=!0,u=n.first,s=!1;null!==u;){var c=u.expirationTime;if(c>i){var f=n.expirationTime;(0===f||f>c)&&(n.expirationTime=c),s||(s=!0,n.baseState=e)}else s||(n.first=u.next,null===n.first&&(n.last=null)),u.isReplace?(e=hr(u,r,e,o),l=!0):(c=hr(u,r,e,o))&&(e=l?a({},e,c):a(e,c),l=!1),u.isForced&&(n.hasForceUpdate=!0),null!==u.callback&&(null===(c=n.callbackList)&&(c=n.callbackList=[]),c.push(u));u=u.next}return null!==n.callbackList?t.effectTag|=32:null!==n.first||n.hasForceUpdate||(t.updateQueue=null),s||(n.baseState=e),e}function yr(e,t){var n=e.callbackList;if(null!==n)for(e.callbackList=null,e=0;e<n.length;e++){var r=n[e],o=r.callback;r.callback=null,"function"!=typeof o&&d("191",o),o.call(t)}}var gr="function"==typeof Symbol&&Symbol.for,vr=gr?Symbol.for("react.element"):60103,br=gr?Symbol.for("react.call"):60104,Cr=gr?Symbol.for("react.return"):60105,wr=gr?Symbol.for("react.portal"):60106,kr=gr?Symbol.for("react.fragment"):60107,xr="function"==typeof Symbol&&Symbol.iterator;function _r(e){return null===e||void 0===e?null:"function"==typeof(e=xr&&e[xr]||e["@@iterator"])?e:null}var Er=Array.isArray;function Tr(e,t){var n=t.ref;if(null!==n&&"function"!=typeof n){if(t._owner){var r=void 0;(t=t._owner)&&(2!==t.tag&&d("110"),r=t.stateNode),r||d("147",n);var o=""+n;return null!==e&&null!==e.ref&&e.ref._stringRef===o?e.ref:((e=function(e){var t=r.refs===p?r.refs={}:r.refs;null===e?delete t[o]:t[o]=e})._stringRef=o,e)}"string"!=typeof n&&d("148"),t._owner||d("149",n)}return n}function Sr(e,t){"textarea"!==e.type&&d("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Pr(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Zn(e,t,n)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function i(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=nr(n,e.internalContextTag,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function u(e,t,n,r){return null!==t&&t.type===n.type?((r=o(t,n.props,r)).ref=Tr(t,n),r.return=e,r):((r=er(n,e.internalContextTag,r)).ref=Tr(t,n),r.return=e,r)}function s(e,t,n,r){return null===t||7!==t.tag?((t=rr(n,e.internalContextTag,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function c(e,t,n,r){return null===t||9!==t.tag?((t=or(n,e.internalContextTag,r)).type=n.value,t.return=e,t):((t=o(t,null,r)).type=n.value,t.return=e,t)}function f(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=ar(n,e.internalContextTag,r)).return=e,t):((t=o(t,n.children||[],r)).return=e,t)}function p(e,t,n,r,a){return null===t||10!==t.tag?((t=tr(n,e.internalContextTag,r,a)).return=e,t):((t=o(t,n,r)).return=e,t)}function h(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=nr(""+t,e.internalContextTag,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case vr:return t.type===kr?((t=tr(t.props.children,e.internalContextTag,n,t.key)).return=e,t):((n=er(t,e.internalContextTag,n)).ref=Tr(null,t),n.return=e,n);case br:return(t=rr(t,e.internalContextTag,n)).return=e,t;case Cr:return(n=or(t,e.internalContextTag,n)).type=t.value,n.return=e,n;case wr:return(t=ar(t,e.internalContextTag,n)).return=e,t}if(Er(t)||_r(t))return(t=tr(t,e.internalContextTag,n,null)).return=e,t;Sr(e,t)}return null}function m(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case vr:return n.key===o?n.type===kr?p(e,t,n.props.children,r,o):u(e,t,n,r):null;case br:return n.key===o?s(e,t,n,r):null;case Cr:return null===o?c(e,t,n,r):null;case wr:return n.key===o?f(e,t,n,r):null}if(Er(n)||_r(n))return null!==o?null:p(e,t,n,r,null);Sr(e,n)}return null}function y(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case vr:return e=e.get(null===r.key?n:r.key)||null,r.type===kr?p(t,e,r.props.children,o,r.key):u(t,e,r,o);case br:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o);case Cr:return c(t,e=e.get(n)||null,r,o);case wr:return f(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Er(r)||_r(r))return p(t,e=e.get(n)||null,r,o,null);Sr(t,r)}return null}function g(o,i,l,u){for(var s=null,c=null,f=i,p=i=0,d=null;null!==f&&p<l.length;p++){f.index>p?(d=f,f=null):d=f.sibling;var g=m(o,f,l[p],u);if(null===g){null===f&&(f=d);break}e&&f&&null===g.alternate&&t(o,f),i=a(g,i,p),null===c?s=g:c.sibling=g,c=g,f=d}if(p===l.length)return n(o,f),s;if(null===f){for(;p<l.length;p++)(f=h(o,l[p],u))&&(i=a(f,i,p),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(o,f);p<l.length;p++)(d=y(f,o,p,l[p],u))&&(e&&null!==d.alternate&&f.delete(null===d.key?p:d.key),i=a(d,i,p),null===c?s=d:c.sibling=d,c=d);return e&&f.forEach(function(e){return t(o,e)}),s}function v(o,i,l,u){var s=_r(l);"function"!=typeof s&&d("150"),null==(l=s.call(l))&&d("151");for(var c=s=null,f=i,p=i=0,g=null,v=l.next();null!==f&&!v.done;p++,v=l.next()){f.index>p?(g=f,f=null):g=f.sibling;var b=m(o,f,v.value,u);if(null===b){f||(f=g);break}e&&f&&null===b.alternate&&t(o,f),i=a(b,i,p),null===c?s=b:c.sibling=b,c=b,f=g}if(v.done)return n(o,f),s;if(null===f){for(;!v.done;p++,v=l.next())null!==(v=h(o,v.value,u))&&(i=a(v,i,p),null===c?s=v:c.sibling=v,c=v);return s}for(f=r(o,f);!v.done;p++,v=l.next())null!==(v=y(f,o,p,v.value,u))&&(e&&null!==v.alternate&&f.delete(null===v.key?p:v.key),i=a(v,i,p),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach(function(e){return t(o,e)}),s}return function(e,r,a,l){"object"==typeof a&&null!==a&&a.type===kr&&null===a.key&&(a=a.props.children);var u="object"==typeof a&&null!==a;if(u)switch(a.$$typeof){case vr:e:{var s=a.key;for(u=r;null!==u;){if(u.key===s){if(10===u.tag?a.type===kr:u.type===a.type){n(e,u.sibling),(r=o(u,a.type===kr?a.props.children:a.props,l)).ref=Tr(u,a),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}a.type===kr?((r=tr(a.props.children,e.internalContextTag,l,a.key)).return=e,e=r):((l=er(a,e.internalContextTag,l)).ref=Tr(r,a),l.return=e,e=l)}return i(e);case br:e:{for(u=a.key;null!==r;){if(r.key===u){if(7===r.tag){n(e,r.sibling),(r=o(r,a,l)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=rr(a,e.internalContextTag,l)).return=e,e=r}return i(e);case Cr:e:{if(null!==r){if(9===r.tag){n(e,r.sibling),(r=o(r,null,l)).type=a.value,r.return=e,e=r;break e}n(e,r)}(r=or(a,e.internalContextTag,l)).type=a.value,r.return=e,e=r}return i(e);case wr:e:{for(u=a.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[],l)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=ar(a,e.internalContextTag,l)).return=e,e=r}return i(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),r=o(r,a,l)):(n(e,r),r=nr(a,e.internalContextTag,l)),r.return=e,i(e=r);if(Er(a))return g(e,r,a,l);if(_r(a))return v(e,r,a,l);if(u&&Sr(e,a),void 0===a)switch(e.tag){case 2:case 1:d("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var Or=Pr(!0),Nr=Pr(!1);function Ir(e,t,n,r,o){function a(e,t,n){var r=t.expirationTime;t.child=null===e?Nr(t,null,n,r):Or(t,e.child,n,r)}function i(e,t){var n=t.ref;null===n||e&&e.ref===n||(t.effectTag|=128)}function l(e,t,n,r){if(i(e,t),!n)return r&&Yn(t,!1),c(e,t);n=t.stateNode,jt.current=t;var o=n.render();return t.effectTag|=1,a(e,t,o),t.memoizedState=n.state,t.memoizedProps=n.props,r&&Yn(t,!0),t.child}function u(e){var t=e.stateNode;t.pendingContext?Qn(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Qn(0,t.context,!1),v(e,t.containerInfo)}function c(e,t){if(null!==e&&t.child!==e.child&&d("153"),null!==t.child){var n=Zn(e=t.child,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Zn(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function f(e,t){switch(t.tag){case 3:u(t);break;case 2:Xn(t);break;case 4:v(t,t.stateNode.containerInfo)}return null}var h=e.shouldSetTextContent,m=e.useSyncScheduling,y=e.shouldDeprioritizeSubtree,g=t.pushHostContext,v=t.pushHostContainer,b=n.enterHydrationState,C=n.resetHydrationState,w=n.tryToClaimNextHydratableInstance,k=(e=function(e,t,n,r){function o(e,t){t.updater=a,e.stateNode=t,t._reactInternalFiber=e}var a={isMounted:Bt,enqueueSetState:function(n,r,o){n=n._reactInternalFiber,o=void 0===o?null:o;var a=t(n);dr(n,{expirationTime:a,partialState:r,callback:o,isReplace:!1,isForced:!1,nextCallback:null,next:null}),e(n,a)},enqueueReplaceState:function(n,r,o){n=n._reactInternalFiber,o=void 0===o?null:o;var a=t(n);dr(n,{expirationTime:a,partialState:r,callback:o,isReplace:!0,isForced:!1,nextCallback:null,next:null}),e(n,a)},enqueueForceUpdate:function(n,r){n=n._reactInternalFiber,r=void 0===r?null:r;var o=t(n);dr(n,{expirationTime:o,partialState:null,callback:r,isReplace:!1,isForced:!0,nextCallback:null,next:null}),e(n,o)}};return{adoptClassInstance:o,constructClassInstance:function(e,t){var n=e.type,r=qn(e),a=2===e.tag&&null!=e.type.contextTypes,i=a?Kn(e,r):p;return o(e,t=new n(t,i)),a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=i),t},mountClassInstance:function(e,t){var n=e.alternate,r=e.stateNode,o=r.state||null,i=e.pendingProps;i||d("158");var l=qn(e);r.props=i,r.state=e.memoizedState=o,r.refs=p,r.context=Kn(e,l),null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent&&(e.internalContextTag|=1),"function"==typeof r.componentWillMount&&(o=r.state,r.componentWillMount(),o!==r.state&&a.enqueueReplaceState(r,r.state,null),null!==(o=e.updateQueue)&&(r.state=mr(n,e,o,r,i,t))),"function"==typeof r.componentDidMount&&(e.effectTag|=4)},updateClassInstance:function(e,t,o){var i=t.stateNode;i.props=t.memoizedProps,i.state=t.memoizedState;var l=t.memoizedProps,u=t.pendingProps;u||null==(u=l)&&d("159");var c=i.context,f=qn(t);if(f=Kn(t,f),"function"!=typeof i.componentWillReceiveProps||l===u&&c===f||(c=i.state,i.componentWillReceiveProps(u,f),i.state!==c&&a.enqueueReplaceState(i,i.state,null)),c=t.memoizedState,o=null!==t.updateQueue?mr(e,t,t.updateQueue,i,u,o):c,!(l!==u||c!==o||Vn.current||null!==t.updateQueue&&t.updateQueue.hasForceUpdate))return"function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),!1;var p=u;if(null===l||null!==t.updateQueue&&t.updateQueue.hasForceUpdate)p=!0;else{var h=t.stateNode,m=t.type;p="function"==typeof h.shouldComponentUpdate?h.shouldComponentUpdate(p,o,f):!(m.prototype&&m.prototype.isPureReactComponent&&s(l,p)&&s(c,o))}return p?("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(u,o,f),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),n(t,u),r(t,o)),i.props=u,i.state=o,i.context=f,p}}}(r,o,function(e,t){e.memoizedProps=t},function(e,t){e.memoizedState=t})).adoptClassInstance,x=e.constructClassInstance,_=e.mountClassInstance,E=e.updateClassInstance;return{beginWork:function(e,t,n){if(0===t.expirationTime||t.expirationTime>n)return f(0,t);switch(t.tag){case 0:null!==e&&d("155");var r=t.type,o=t.pendingProps,s=qn(t);return r=r(o,s=Kn(t,s)),t.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render?(t.tag=2,o=Xn(t),k(t,r),_(t,n),t=l(e,t,!0,o)):(t.tag=1,a(e,t,r),t.memoizedProps=o,t=t.child),t;case 1:e:{if(o=t.type,n=t.pendingProps,r=t.memoizedProps,Vn.current)null===n&&(n=r);else if(null===n||r===n){t=c(e,t);break e}o=o(n,r=Kn(t,r=qn(t))),t.effectTag|=1,a(e,t,o),t.memoizedProps=n,t=t.child}return t;case 2:return o=Xn(t),r=void 0,null===e?t.stateNode?d("153"):(x(t,t.pendingProps),_(t,n),r=!0):r=E(e,t,n),l(e,t,r,o);case 3:return u(t),null!==(o=t.updateQueue)?(r=t.memoizedState)===(o=mr(e,t,o,null,null,n))?(C(),t=c(e,t)):(r=o.element,s=t.stateNode,(null===e||null===e.child)&&s.hydrate&&b(t)?(t.effectTag|=2,t.child=Nr(t,null,r,n)):(C(),a(e,t,r)),t.memoizedState=o,t=t.child):(C(),t=c(e,t)),t;case 5:g(t),null===e&&w(t),o=t.type;var p=t.memoizedProps;return null===(r=t.pendingProps)&&(null===(r=p)&&d("154")),s=null!==e?e.memoizedProps:null,Vn.current||null!==r&&p!==r?(p=r.children,h(o,r)?p=null:s&&h(o,s)&&(t.effectTag|=16),i(e,t),2147483647!==n&&!m&&y(o,r)?(t.expirationTime=2147483647,t=null):(a(e,t,p),t.memoizedProps=r,t=t.child)):t=c(e,t),t;case 6:return null===e&&w(t),null===(e=t.pendingProps)&&(e=t.memoizedProps),t.memoizedProps=e,null;case 8:t.tag=7;case 7:return o=t.pendingProps,Vn.current?null===o&&(null===(o=e&&e.memoizedProps)&&d("154")):null!==o&&t.memoizedProps!==o||(o=t.memoizedProps),r=o.children,t.stateNode=null===e?Nr(t,t.stateNode,r,n):Or(t,t.stateNode,r,n),t.memoizedProps=o,t.stateNode;case 9:return null;case 4:e:{if(v(t,t.stateNode.containerInfo),o=t.pendingProps,Vn.current)null===o&&(null==(o=e&&e.memoizedProps)&&d("154"));else if(null===o||t.memoizedProps===o){t=c(e,t);break e}null===e?t.child=Or(t,null,o,n):a(e,t,o),t.memoizedProps=o,t=t.child}return t;case 10:e:{if(n=t.pendingProps,Vn.current)null===n&&(n=t.memoizedProps);else if(null===n||t.memoizedProps===n){t=c(e,t);break e}a(e,t,n),t.memoizedProps=n,t=t.child}return t;default:d("156")}},beginFailedWork:function(e,t,n){switch(t.tag){case 2:Xn(t);break;case 3:u(t);break;default:d("157")}return t.effectTag|=64,null===e?t.child=null:t.child!==e.child&&(t.child=e.child),0===t.expirationTime||t.expirationTime>n?f(0,t):(t.firstEffect=null,t.lastEffect=null,t.child=null===e?Nr(t,null,null,n):Or(t,e.child,null,n),2===t.tag&&(e=t.stateNode,t.memoizedProps=e.props,t.memoizedState=e.state),t.child)}}}var Rr={};function Dr(e){function t(e){ie=X=!0;var t=e.stateNode;if(t.current===e&&d("177"),t.isReadyForCommit=!1,jt.current=null,1<e.effectTag)if(null!==e.lastEffect){e.lastEffect.nextEffect=e;var n=e.firstEffect}else n=e;else n=e.firstEffect;for(K(),ee=n;null!==ee;){var r=!1,o=void 0;try{for(;null!==ee;){var a=ee.effectTag;if(16&a&&M(ee),128&a){var i=ee.alternate;null!==i&&j(i)}switch(-242&a){case 2:A(ee),ee.effectTag&=-3;break;case 6:A(ee),ee.effectTag&=-3,F(ee.alternate,ee);break;case 4:F(ee.alternate,ee);break;case 8:le=!0,L(ee),le=!1}ee=ee.nextEffect}}catch(e){r=!0,o=e}r&&(null===ee&&d("178"),l(ee,o),null!==ee&&(ee=ee.nextEffect))}for(W(),t.current=e,ee=n;null!==ee;){n=!1,r=void 0;try{for(;null!==ee;){var u=ee.effectTag;if(36&u&&U(ee.alternate,ee),128&u&&H(ee),64&u)switch(o=ee,a=void 0,null!==te&&(a=te.get(o),te.delete(o),null==a&&null!==o.alternate&&(o=o.alternate,a=te.get(o),te.delete(o))),null==a&&d("184"),o.tag){case 2:o.stateNode.componentDidCatch(a.error,{componentStack:a.componentStack});break;case 3:null===oe&&(oe=a.error);break;default:d("157")}var s=ee.nextEffect;ee.nextEffect=null,ee=s}}catch(e){n=!0,r=e}n&&(null===ee&&d("178"),l(ee,r),null!==ee&&(ee=ee.nextEffect))}return X=ie=!1,sr(e.stateNode),re&&(re.forEach(y),re=null),null!==oe&&(e=oe,oe=null,_(e)),0===(t=t.current.expirationTime)&&(ne=te=null),t}function n(e){for(;;){var t=D(e.alternate,e,Z),n=e.return,r=e.sibling,o=e;if(2147483647===Z||2147483647!==o.expirationTime){if(2!==o.tag&&3!==o.tag)var a=0;else a=null===(a=o.updateQueue)?0:a.expirationTime;for(var i=o.child;null!==i;)0!==i.expirationTime&&(0===a||a>i.expirationTime)&&(a=i.expirationTime),i=i.sibling;o.expirationTime=a}if(null!==t)return t;if(null!==n&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){e.stateNode.isReadyForCommit=!0;break}e=n}return null}function r(e){var t=I(e.alternate,e,Z);return null===t&&(t=n(e)),jt.current=null,t}function o(e){var t=R(e.alternate,e,Z);return null===t&&(t=n(e)),jt.current=null,t}function a(e){if(null!==te){if(!(0===Z||Z>e))if(Z<=Q)for(;null!==Y;)Y=u(Y)?o(Y):r(Y);else for(;null!==Y&&!x();)Y=u(Y)?o(Y):r(Y)}else if(!(0===Z||Z>e))if(Z<=Q)for(;null!==Y;)Y=r(Y);else for(;null!==Y&&!x();)Y=r(Y)}function i(e,t){if(X&&d("243"),X=!0,e.isReadyForCommit=!1,e!==J||t!==Z||null===Y){for(;-1<Un;)Fn[Un]=null,Un--;Bn=p,zn.current=p,Vn.current=!1,O(),Z=t,Y=Zn((J=e).current,null,t)}var n=!1,r=null;try{a(t)}catch(e){n=!0,r=e}for(;n;){if(ae){oe=r;break}var i=Y;if(null===i)ae=!0;else{var u=l(i,r);if(null===u&&d("183"),!ae){try{for(r=t,u=n=u;null!==i;){switch(i.tag){case 2:$n(i);break;case 5:P(i);break;case 3:S(i);break;case 4:S(i)}if(i===u||i.alternate===u)break;i=i.return}Y=o(n),a(r)}catch(e){n=!0,r=e;continue}break}}}return t=oe,ae=X=!1,oe=null,null!==t&&_(t),e.isReadyForCommit?e.current.alternate:null}function l(e,t){var n=jt.current=null,r=!1,o=!1,a=null;if(3===e.tag)n=e,s(e)&&(ae=!0);else for(var i=e.return;null!==i&&null===n;){if(2===i.tag?"function"==typeof i.stateNode.componentDidCatch&&(r=!0,a=zt(i),n=i,o=!0):3===i.tag&&(n=i),s(i)){if(le||null!==re&&(re.has(i)||null!==i.alternate&&re.has(i.alternate)))return null;n=null,o=!1}i=i.return}if(null!==n){null===ne&&(ne=new Set),ne.add(n);var l="";i=e;do{e:switch(i.tag){case 0:case 1:case 2:case 5:var u=i._debugOwner,c=i._debugSource,f=zt(i),p=null;u&&(p=zt(u)),u=c,f="\n    in "+(f||"Unknown")+(u?" (at "+u.fileName.replace(/^.*[\\\/]/,"")+":"+u.lineNumber+")":p?" (created by "+p+")":"");break e;default:f=""}l+=f,i=i.return}while(i);i=l,e=zt(e),null===te&&(te=new Map),t={componentName:e,componentStack:i,error:t,errorBoundary:r?n.stateNode:null,errorBoundaryFound:r,errorBoundaryName:a,willRetry:o},te.set(n,t);try{var d=t.error;d&&d.suppressReactErrorLogging||console.error(d)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}return ie?(null===re&&(re=new Set),re.add(n)):y(n),n}return null===oe&&(oe=t),null}function u(e){return null!==te&&(te.has(e)||null!==e.alternate&&te.has(e.alternate))}function s(e){return null!==ne&&(ne.has(e)||null!==e.alternate&&ne.has(e.alternate))}function c(){return 20*(1+((g()+100)/20|0))}function f(e){return 0!==G?G:X?ie?1:Z:!q||1&e.internalContextTag?c():1}function h(e,t){return m(e,t)}function m(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!X&&n===J&&t<Z&&(Y=J=null,Z=0);var r=n,o=t;if(ke>we&&d("185"),null===r.nextScheduledRoot)r.remainingExpirationTime=o,null===se?(ue=se=r,r.nextScheduledRoot=r):(se=se.nextScheduledRoot=r).nextScheduledRoot=ue;else{var a=r.remainingExpirationTime;(0===a||o<a)&&(r.remainingExpirationTime=o)}pe||(be?Ce&&k(de=r,he=1):1===o?w(1,null):v(o)),!X&&n===J&&t<Z&&(Y=J=null,Z=0)}e=e.return}}function y(e){m(e,1)}function g(){return Q=2+((z()-$)/10|0)}function v(e){if(0!==ce){if(e>ce)return;B(fe)}var t=z()-$;ce=e,fe=V(C,{timeout:10*(e-2)-t})}function b(){var e=0,t=null;if(null!==se)for(var n=se,r=ue;null!==r;){var o=r.remainingExpirationTime;if(0===o){if((null===n||null===se)&&d("244"),r===r.nextScheduledRoot){ue=se=r.nextScheduledRoot=null;break}if(r===ue)ue=o=r.nextScheduledRoot,se.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===se){(se=n).nextScheduledRoot=ue,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===se)break;n=r,r=r.nextScheduledRoot}}null!==(n=de)&&n===t?ke++:ke=0,de=t,he=e}function C(e){w(0,e)}function w(e,t){for(ve=t,b();null!==de&&0!==he&&(0===e||he<=e)&&!me;)k(de,he),b();if(null!==ve&&(ce=0,fe=-1),0!==he&&v(he),ve=null,me=!1,ke=0,ye)throw e=ge,ge=null,ye=!1,e}function k(e,n){if(pe&&d("245"),pe=!0,n<=g()){var r=e.finishedWork;null!==r?(e.finishedWork=null,e.remainingExpirationTime=t(r)):(e.finishedWork=null,null!==(r=i(e,n))&&(e.remainingExpirationTime=t(r)))}else null!==(r=e.finishedWork)?(e.finishedWork=null,e.remainingExpirationTime=t(r)):(e.finishedWork=null,null!==(r=i(e,n))&&(x()?e.finishedWork=r:e.remainingExpirationTime=t(r)));pe=!1}function x(){return!(null===ve||ve.timeRemaining()>xe)&&(me=!0)}function _(e){null===de&&d("246"),de.remainingExpirationTime=0,ye||(ye=!0,ge=e)}var E=function(e){function t(e){return e===Rr&&d("174"),e}var n=e.getChildHostContext,r=e.getRootHostContext,o={current:Rr},a={current:Rr},i={current:Rr};return{getHostContext:function(){return t(o.current)},getRootHostContainer:function(){return t(i.current)},popHostContainer:function(e){Hn(o),Hn(a),Hn(i)},popHostContext:function(e){a.current===e&&(Hn(o),Hn(a))},pushHostContainer:function(e,t){jn(i,t),t=r(t),jn(a,e),jn(o,t)},pushHostContext:function(e){var r=t(i.current),l=t(o.current);l!==(r=n(l,e.type,r))&&(jn(a,e),jn(o,r))},resetHostContainer:function(){o.current=Rr,i.current=Rr}}}(e),T=function(e){function t(e,t){var n=new Jn(5,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function n(e,t){switch(e.tag){case 5:return null!==(t=a(t,e.type,e.pendingProps))&&(e.stateNode=t,!0);case 6:return null!==(t=i(t,e.pendingProps))&&(e.stateNode=t,!0);default:return!1}}function r(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;f=e}var o=e.shouldSetTextContent;if(!(e=e.hydration))return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){d("175")},prepareToHydrateHostTextInstance:function(){d("176")},popHydrationState:function(){return!1}};var a=e.canHydrateInstance,i=e.canHydrateTextInstance,l=e.getNextHydratableSibling,u=e.getFirstHydratableChild,s=e.hydrateInstance,c=e.hydrateTextInstance,f=null,p=null,h=!1;return{enterHydrationState:function(e){return p=u(e.stateNode.containerInfo),f=e,h=!0},resetHydrationState:function(){p=f=null,h=!1},tryToClaimNextHydratableInstance:function(e){if(h){var r=p;if(r){if(!n(e,r)){if(!(r=l(r))||!n(e,r))return e.effectTag|=2,h=!1,void(f=e);t(f,p)}f=e,p=u(r)}else e.effectTag|=2,h=!1,f=e}},prepareToHydrateHostInstance:function(e,t,n){return t=s(e.stateNode,e.type,e.memoizedProps,t,n,e),e.updateQueue=t,null!==t},prepareToHydrateHostTextInstance:function(e){return c(e.stateNode,e.memoizedProps,e)},popHydrationState:function(e){if(e!==f)return!1;if(!h)return r(e),h=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!o(n,e.memoizedProps))for(n=p;n;)t(e,n),n=l(n);return r(e),p=f?l(e.stateNode):null,!0}}}(e),S=E.popHostContainer,P=E.popHostContext,O=E.resetHostContainer,N=Ir(e,E,T,h,f),I=N.beginWork,R=N.beginFailedWork,D=function(e,t,n){function r(e){e.effectTag|=4}var o=e.createInstance,a=e.createTextInstance,i=e.appendInitialChild,l=e.finalizeInitialChildren,u=e.prepareUpdate,s=e.persistence,c=t.getRootHostContainer,f=t.popHostContext,p=t.getHostContext,h=t.popHostContainer,m=n.prepareToHydrateHostInstance,y=n.prepareToHydrateHostTextInstance,g=n.popHydrationState,v=void 0,b=void 0,C=void 0;return e.mutation?(v=function(){},b=function(e,t,n){(t.updateQueue=n)&&r(t)},C=function(e,t,n,o){n!==o&&r(t)}):d(s?"235":"236"),{completeWork:function(e,t,n){var s=t.pendingProps;switch(null===s?s=t.memoizedProps:2147483647===t.expirationTime&&2147483647!==n||(t.pendingProps=null),t.tag){case 1:return null;case 2:return $n(t),null;case 3:return h(t),Hn(Vn),Hn(zn),(s=t.stateNode).pendingContext&&(s.context=s.pendingContext,s.pendingContext=null),null!==e&&null!==e.child||(g(t),t.effectTag&=-3),v(t),null;case 5:f(t),n=c();var w=t.type;if(null!==e&&null!=t.stateNode){var k=e.memoizedProps,x=t.stateNode,_=p();x=u(x,w,k,s,n,_),b(e,t,x,w,k,s,n),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!s)return null===t.stateNode&&d("166"),null;if(e=p(),g(t))m(t,n,e)&&r(t);else{e=o(w,s,n,e,t);e:for(k=t.child;null!==k;){if(5===k.tag||6===k.tag)i(e,k.stateNode);else if(4!==k.tag&&null!==k.child){k.child.return=k,k=k.child;continue}if(k===t)break;for(;null===k.sibling;){if(null===k.return||k.return===t)break e;k=k.return}k.sibling.return=k.return,k=k.sibling}l(e,w,s,n)&&r(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)C(e,t,e.memoizedProps,s);else{if("string"!=typeof s)return null===t.stateNode&&d("166"),null;e=c(),n=p(),g(t)?y(t)&&r(t):t.stateNode=a(s,e,n,t)}return null;case 7:(s=t.memoizedProps)||d("165"),t.tag=8,w=[];e:for((k=t.stateNode)&&(k.return=t);null!==k;){if(5===k.tag||6===k.tag||4===k.tag)d("247");else if(9===k.tag)w.push(k.type);else if(null!==k.child){k.child.return=k,k=k.child;continue}for(;null===k.sibling;){if(null===k.return||k.return===t)break e;k=k.return}k.sibling.return=k.return,k=k.sibling}return s=(k=s.handler)(s.props,w),t.child=Or(t,null!==e?e.child:null,s,n),t.child;case 8:return t.tag=7,null;case 9:case 10:return null;case 4:return h(t),v(t),null;case 0:d("167");default:d("156")}}}}(e,E,T).completeWork,M=(E=function(e,t){function n(e){var n=e.ref;if(null!==n)try{n(null)}catch(n){t(e,n)}}function r(e){switch(cr(e),e.tag){case 2:n(e);var r=e.stateNode;if("function"==typeof r.componentWillUnmount)try{r.props=e.memoizedProps,r.state=e.memoizedState,r.componentWillUnmount()}catch(n){t(e,n)}break;case 5:n(e);break;case 7:o(e.stateNode);break;case 4:u&&i(e)}}function o(e){for(var t=e;;)if(r(t),null===t.child||u&&4===t.tag){if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}else t.child.return=t,t=t.child}function a(e){return 5===e.tag||3===e.tag||4===e.tag}function i(e){for(var t=e,n=!1,a=void 0,i=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&d("160"),n.tag){case 5:a=n.stateNode,i=!1;break e;case 3:case 4:a=n.stateNode.containerInfo,i=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag)o(t),i?b(a,t.stateNode):v(a,t.stateNode);else if(4===t.tag?a=t.stateNode.containerInfo:r(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}var l=e.getPublicInstance,u=e.mutation;e=e.persistence,u||d(e?"235":"236");var s=u.commitMount,c=u.commitUpdate,f=u.resetTextContent,p=u.commitTextUpdate,h=u.appendChild,m=u.appendChildToContainer,y=u.insertBefore,g=u.insertInContainerBefore,v=u.removeChild,b=u.removeChildFromContainer;return{commitResetTextContent:function(e){f(e.stateNode)},commitPlacement:function(e){e:{for(var t=e.return;null!==t;){if(a(t)){var n=t;break e}t=t.return}d("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:d("161")}16&n.effectTag&&(f(t),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||a(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)n?r?g(t,o.stateNode,n):y(t,o.stateNode,n):r?m(t,o.stateNode):h(t,o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}},commitDeletion:function(e){i(e),e.return=null,e.child=null,e.alternate&&(e.alternate.child=null,e.alternate.return=null)},commitWork:function(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&c(n,a,o,e,r,t)}break;case 6:null===t.stateNode&&d("162"),n=t.memoizedProps,p(t.stateNode,null!==e?e.memoizedProps:n,n);break;case 3:break;default:d("163")}},commitLifeCycles:function(e,t){switch(t.tag){case 2:var n=t.stateNode;if(4&t.effectTag)if(null===e)n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidMount();else{var r=e.memoizedProps;e=e.memoizedState,n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidUpdate(r,e)}null!==(t=t.updateQueue)&&yr(t,n);break;case 3:null!==(n=t.updateQueue)&&yr(n,null!==t.child?t.child.stateNode:null);break;case 5:n=t.stateNode,null===e&&4&t.effectTag&&s(n,t.type,t.memoizedProps,t);break;case 6:case 4:break;default:d("163")}},commitAttachRef:function(e){var t=e.ref;if(null!==t){var n=e.stateNode;switch(e.tag){case 5:t(l(n));break;default:t(n)}}},commitDetachRef:function(e){null!==(e=e.ref)&&e(null)}}}(e,l)).commitResetTextContent,A=E.commitPlacement,L=E.commitDeletion,F=E.commitWork,U=E.commitLifeCycles,H=E.commitAttachRef,j=E.commitDetachRef,z=e.now,V=e.scheduleDeferredCallback,B=e.cancelDeferredCallback,q=e.useSyncScheduling,K=e.prepareForCommit,W=e.resetAfterCommit,$=z(),Q=2,G=0,X=!1,Y=null,J=null,Z=0,ee=null,te=null,ne=null,re=null,oe=null,ae=!1,ie=!1,le=!1,ue=null,se=null,ce=0,fe=-1,pe=!1,de=null,he=0,me=!1,ye=!1,ge=null,ve=null,be=!1,Ce=!1,we=1e3,ke=0,xe=1;return{computeAsyncExpiration:c,computeExpirationForFiber:f,scheduleWork:h,batchedUpdates:function(e,t){var n=be;be=!0;try{return e(t)}finally{(be=n)||pe||w(1,null)}},unbatchedUpdates:function(e){if(be&&!Ce){Ce=!0;try{return e()}finally{Ce=!1}}return e()},flushSync:function(e){var t=be;be=!0;try{e:{var n=G;G=1;try{var r=e();break e}finally{G=n}r=void 0}return r}finally{be=t,pe&&d("187"),w(1,null)}},deferredUpdates:function(e){var t=G;G=c();try{return e()}finally{G=t}}}}function Mr(e){function t(e){return null===(e=function(e){if(!(e=Kt(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode}var n=e.getPublicInstance,r=(e=Dr(e)).computeAsyncExpiration,o=e.computeExpirationForFiber,i=e.scheduleWork;return{createContainer:function(e,t){var n=new Jn(3,null,0);return e={current:n,containerInfo:e,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:t,nextScheduledRoot:null},n.stateNode=e},updateContainer:function(e,t,n,a){var l=t.current;if(n){var u;n=n._reactInternalFiber;e:{for(2===Vt(n)&&2===n.tag||d("170"),u=n;3!==u.tag;){if(Wn(u)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break e}(u=u.return)||d("171")}u=u.stateNode.context}n=Wn(n)?Gn(n,u):u}else n=p;null===t.context?t.context=n:t.pendingContext=n,t=void 0===(t=a)?null:t,dr(l,{expirationTime:a=null!=e&&null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent?r():o(l),partialState:{element:e},callback:t,isReplace:!1,isForced:!1,nextCallback:null,next:null}),i(l,a)},batchedUpdates:e.batchedUpdates,unbatchedUpdates:e.unbatchedUpdates,deferredUpdates:e.deferredUpdates,flushSync:e.flushSync,getPublicRootInstance:function(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:return n(e.child.stateNode);default:return e.child.stateNode}},findHostInstance:t,findHostInstanceWithNoPortals:function(e){return null===(e=function(e){if(!(e=Kt(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child&&4!==t.tag)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},injectIntoDevTools:function(e){var n=e.findFiberByHostInstance;return function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ir=ur(function(e){return t.onCommitFiberRoot(n,e)}),lr=ur(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}(a({},e,{findHostInstanceByFiber:function(e){return t(e)},findFiberByHostInstance:function(e){return n?n(e):null}}))}}}var Ar=Object.freeze({default:Mr}),Lr=Ar&&Mr||Ar,Fr=Lr.default?Lr.default:Lr;var Ur="object"==typeof performance&&"function"==typeof performance.now,Hr=void 0;Hr=Ur?function(){return performance.now()}:function(){return Date.now()};var jr=void 0,zr=void 0;if(o.canUseDOM)if("function"!=typeof requestIdleCallback||"function"!=typeof cancelIdleCallback){var Vr,Br=null,qr=!1,Kr=-1,Wr=!1,$r=0,Qr=33,Gr=33;Vr=Ur?{didTimeout:!1,timeRemaining:function(){var e=$r-performance.now();return 0<e?e:0}}:{didTimeout:!1,timeRemaining:function(){var e=$r-Date.now();return 0<e?e:0}};var Xr="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===Xr){if(qr=!1,e=Hr(),0>=$r-e){if(!(-1!==Kr&&Kr<=e))return void(Wr||(Wr=!0,requestAnimationFrame(Yr)));Vr.didTimeout=!0}else Vr.didTimeout=!1;Kr=-1,e=Br,Br=null,null!==e&&e(Vr)}},!1);var Yr=function(e){Wr=!1;var t=e-$r+Gr;t<Gr&&Qr<Gr?(8>t&&(t=8),Gr=t<Qr?Qr:t):Qr=t,$r=e+Gr,qr||(qr=!0,window.postMessage(Xr,"*"))};jr=function(e,t){return Br=e,null!=t&&"number"==typeof t.timeout&&(Kr=Hr()+t.timeout),Wr||(Wr=!0,requestAnimationFrame(Yr)),0},zr=function(){Br=null,qr=!1,Kr=-1}}else jr=window.requestIdleCallback,zr=window.cancelIdleCallback;else jr=function(e){return setTimeout(function(){e({timeRemaining:function(){return 1/0}})})},zr=function(e){clearTimeout(e)};var Jr=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Zr={},eo={};function to(e,t,n){var r=b(t);if(r&&v(t,n)){var o=r.mutationMethod;o?o(e,n):null==n||r.hasBooleanValue&&!n||r.hasNumericValue&&isNaN(n)||r.hasPositiveNumericValue&&1>n||r.hasOverloadedBooleanValue&&!1===n?ro(e,t):r.mustUseProperty?e[r.propertyName]=n:(t=r.attributeName,(o=r.attributeNamespace)?e.setAttributeNS(o,t,""+n):r.hasBooleanValue||r.hasOverloadedBooleanValue&&!0===n?e.setAttribute(t,""):e.setAttribute(t,""+n))}else no(e,t,v(t,n)?n:null)}function no(e,t,n){(function(e){return!!eo.hasOwnProperty(e)||!Zr.hasOwnProperty(e)&&(Jr.test(e)?eo[e]=!0:(Zr[e]=!0,!1))})(t)&&(null==n?e.removeAttribute(t):e.setAttribute(t,""+n))}function ro(e,t){var n=b(t);n?(t=n.mutationMethod)?t(e,void 0):n.mustUseProperty?e[n.propertyName]=!n.hasBooleanValue&&"":e.removeAttribute(n.attributeName):e.removeAttribute(t)}function oo(e,t){var n=t.value,r=t.checked;return a({type:void 0,step:void 0,min:void 0,max:void 0},t,{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:e._wrapperState.initialValue,checked:null!=r?r:e._wrapperState.initialChecked})}function ao(e,t){var n=t.defaultValue;e._wrapperState={initialChecked:null!=t.checked?t.checked:t.defaultChecked,initialValue:null!=t.value?t.value:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function io(e,t){null!=(t=t.checked)&&to(e,"checked",t)}function lo(e,t){io(e,t);var n=t.value;null!=n?0===n&&""===e.value?e.value="0":"number"===t.type?(n!=(t=parseFloat(e.value)||0)||n==t&&e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n):(null==t.value&&null!=t.defaultValue&&e.defaultValue!==""+t.defaultValue&&(e.defaultValue=""+t.defaultValue),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked))}function uo(e,t){switch(t.type){case"submit":case"reset":break;case"color":case"date":case"datetime":case"datetime-local":case"month":case"time":case"week":e.value="",e.value=e.defaultValue;break;default:e.value=e.value}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==t&&(e.name=t)}function so(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}(t.children))&&(e.children=t),e}function co(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function fo(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function po(e,t){return null!=t.dangerouslySetInnerHTML&&d("91"),a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ho(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&d("92"),Array.isArray(t)&&(1>=t.length||d("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function mo(e,t){var n=t.value;null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function yo(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}var go="http://www.w3.org/1999/xhtml",vo="http://www.w3.org/2000/svg";function bo(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Co(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?bo(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var wo,ko=void 0,xo=(wo=function(e,t){if(e.namespaceURI!==vo||"innerHTML"in e)e.innerHTML=t;else{for((ko=ko||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=ko.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return wo(e,t)})}:wo);function _o(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var Eo={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},To=["Webkit","ms","Moz","O"];function So(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,a=t[n];o=null==a||"boolean"==typeof a||""===a?"":r||"number"!=typeof a||0===a||Eo.hasOwnProperty(o)&&Eo[o]?(""+a).trim():a+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Eo).forEach(function(e){To.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Eo[t]=Eo[e]})});var Po=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Oo(e,t,n){t&&(Po[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&d("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&d("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||d("61")),null!=t.style&&"object"!=typeof t.style&&d("62",n()))}function No(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Io=go,Ro=i.thatReturns("");function Do(e,t){var n=fn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=B[t];for(var r=0;r<t.length;r++){var o=t[r];n.hasOwnProperty(o)&&n[o]||("topScroll"===o?Jt("topScroll","scroll",e):"topFocus"===o||"topBlur"===o?(Jt("topFocus","focus",e),Jt("topBlur","blur",e),n.topBlur=!0,n.topFocus=!0):"topCancel"===o?(ht("cancel",!0)&&Jt("topCancel","cancel",e),n.topCancel=!0):"topClose"===o?(ht("close",!0)&&Jt("topClose","close",e),n.topClose=!0):ln.hasOwnProperty(o)&&Yt(o,ln[o],e),n[o]=!0)}}var Mo={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"};function Ao(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===Io&&(r=bo(e)),r===Io?"script"===e?((e=n.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function Lo(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function Fo(e,t,n,r){var o=No(t,n);switch(t){case"iframe":case"object":Yt("topLoad","load",e);var l=n;break;case"video":case"audio":for(l in Mo)Mo.hasOwnProperty(l)&&Yt(l,Mo[l],e);l=n;break;case"source":Yt("topError","error",e),l=n;break;case"img":case"image":Yt("topError","error",e),Yt("topLoad","load",e),l=n;break;case"form":Yt("topReset","reset",e),Yt("topSubmit","submit",e),l=n;break;case"details":Yt("topToggle","toggle",e),l=n;break;case"input":ao(e,n),l=oo(e,n),Yt("topInvalid","invalid",e),Do(r,"onChange");break;case"option":l=so(e,n);break;case"select":fo(e,n),l=a({},n,{value:void 0}),Yt("topInvalid","invalid",e),Do(r,"onChange");break;case"textarea":ho(e,n),l=po(e,n),Yt("topInvalid","invalid",e),Do(r,"onChange");break;default:l=n}Oo(t,l,Ro);var u,s=l;for(u in s)if(s.hasOwnProperty(u)){var c=s[u];"style"===u?So(e,c):"dangerouslySetInnerHTML"===u?null!=(c=c?c.__html:void 0)&&xo(e,c):"children"===u?"string"==typeof c?("textarea"!==t||""!==c)&&_o(e,c):"number"==typeof c&&_o(e,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(V.hasOwnProperty(u)?null!=c&&Do(r,u):o?no(e,u,c):null!=c&&to(e,u,c))}switch(t){case"input":yt(e),uo(e,n);break;case"textarea":yt(e),yo(e);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,null!=(t=n.value)?co(e,!!n.multiple,t,!1):null!=n.defaultValue&&co(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof l.onClick&&(e.onclick=i)}}function Uo(e,t,n,r,o){var l,u,s=null;switch(t){case"input":n=oo(e,n),r=oo(e,r),s=[];break;case"option":n=so(e,n),r=so(e,r),s=[];break;case"select":n=a({},n,{value:void 0}),r=a({},r,{value:void 0}),s=[];break;case"textarea":n=po(e,n),r=po(e,r),s=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=i)}for(l in Oo(t,r,Ro),e=null,n)if(!r.hasOwnProperty(l)&&n.hasOwnProperty(l)&&null!=n[l])if("style"===l)for(u in t=n[l])t.hasOwnProperty(u)&&(e||(e={}),e[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(V.hasOwnProperty(l)?s||(s=[]):(s=s||[]).push(l,null));for(l in r){var c=r[l];if(t=null!=n?n[l]:void 0,r.hasOwnProperty(l)&&c!==t&&(null!=c||null!=t))if("style"===l)if(t){for(u in t)!t.hasOwnProperty(u)||c&&c.hasOwnProperty(u)||(e||(e={}),e[u]="");for(u in c)c.hasOwnProperty(u)&&t[u]!==c[u]&&(e||(e={}),e[u]=c[u])}else e||(s||(s=[]),s.push(l,e)),e=c;else"dangerouslySetInnerHTML"===l?(c=c?c.__html:void 0,t=t?t.__html:void 0,null!=c&&t!==c&&(s=s||[]).push(l,""+c)):"children"===l?t===c||"string"!=typeof c&&"number"!=typeof c||(s=s||[]).push(l,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(V.hasOwnProperty(l)?(null!=c&&Do(o,l),s||t===c||(s=[])):(s=s||[]).push(l,c))}return e&&(s=s||[]).push("style",e),s}function Ho(e,t,n,r,o){"input"===n&&"radio"===o.type&&null!=o.name&&io(e,o),No(n,r),r=No(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?So(e,l):"dangerouslySetInnerHTML"===i?xo(e,l):"children"===i?_o(e,l):r?null!=l?no(e,i,l):e.removeAttribute(i):null!=l?to(e,i,l):ro(e,i)}switch(n){case"input":lo(e,o);break;case"textarea":mo(e,o);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?co(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?co(e,!!o.multiple,o.defaultValue,!0):co(e,!!o.multiple,o.multiple?[]:"",!1))}}function jo(e,t,n,r,o){switch(t){case"iframe":case"object":Yt("topLoad","load",e);break;case"video":case"audio":for(var a in Mo)Mo.hasOwnProperty(a)&&Yt(a,Mo[a],e);break;case"source":Yt("topError","error",e);break;case"img":case"image":Yt("topError","error",e),Yt("topLoad","load",e);break;case"form":Yt("topReset","reset",e),Yt("topSubmit","submit",e);break;case"details":Yt("topToggle","toggle",e);break;case"input":ao(e,n),Yt("topInvalid","invalid",e),Do(o,"onChange");break;case"select":fo(e,n),Yt("topInvalid","invalid",e),Do(o,"onChange");break;case"textarea":ho(e,n),Yt("topInvalid","invalid",e),Do(o,"onChange")}for(var l in Oo(t,n,Ro),r=null,n)n.hasOwnProperty(l)&&(a=n[l],"children"===l?"string"==typeof a?e.textContent!==a&&(r=["children",a]):"number"==typeof a&&e.textContent!==""+a&&(r=["children",""+a]):V.hasOwnProperty(l)&&null!=a&&Do(o,l));switch(t){case"input":yt(e),uo(e,n);break;case"textarea":yt(e),yo(e);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=i)}return r}function zo(e,t){return e.nodeValue!==t}var Vo=Object.freeze({createElement:Ao,createTextNode:Lo,setInitialProperties:Fo,diffProperties:Uo,updateProperties:Ho,diffHydratedProperties:jo,diffHydratedText:zo,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(lo(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=he(r);o||d("90"),gt(r),lo(r,o)}}}break;case"textarea":mo(e,n);break;case"select":null!=(t=n.value)&&co(e,!!n.multiple,t,!1)}}});rt.injectFiberControlledHostComponent(Vo);var Bo=null,qo=null;function Ko(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}var Wo=Fr({getRootHostContext:function(e){var t=e.nodeType;switch(t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:Co(null,"");break;default:e=Co(e=(t=8===t?e.parentNode:e).namespaceURI||null,t=t.tagName)}return e},getChildHostContext:function(e,t){return Co(e,t)},getPublicInstance:function(e){return e},prepareForCommit:function(){Bo=Qt;var e=u();if(hn(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=window.getSelection&&window.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var a=0,i=-1,l=-1,s=0,c=0,f=e,p=null;t:for(;;){for(var d;f!==t||0!==r&&3!==f.nodeType||(i=a+r),f!==o||0!==n&&3!==f.nodeType||(l=a+n),3===f.nodeType&&(a+=f.nodeValue.length),null!==(d=f.firstChild);)p=f,f=d;for(;;){if(f===e)break t;if(p===t&&++s===r&&(i=a),p===o&&++c===n&&(l=a),null!==(d=f.nextSibling))break;p=(f=p).parentNode}f=d}t=-1===i||-1===l?null:{start:i,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;qo={focusedElem:e,selectionRange:t},Xt(!1)},resetAfterCommit:function(){var e=qo,t=u(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&c(document.documentElement,n)){if(hn(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(window.getSelection){t=window.getSelection();var o=n[Se()].length;e=Math.min(r.start,o),r=void 0===r.end?e:Math.min(r.end,o),!t.extend&&e>r&&(o=r,r=e,e=o),o=dn(n,e);var a=dn(n,r);if(o&&a&&(1!==t.rangeCount||t.anchorNode!==o.node||t.anchorOffset!==o.offset||t.focusNode!==a.node||t.focusOffset!==a.offset)){var i=document.createRange();i.setStart(o.node,o.offset),t.removeAllRanges(),e>r?(t.addRange(i),t.extend(a.node,a.offset)):(i.setEnd(a.node,a.offset),t.addRange(i))}}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(f(n),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}qo=null,Xt(Bo),Bo=null},createInstance:function(e,t,n,r,o){return(e=Ao(e,t,n,r))[ce]=o,e[fe]=t,e},appendInitialChild:function(e,t){e.appendChild(t)},finalizeInitialChildren:function(e,t,n,r){Fo(e,t,n,r);e:{switch(t){case"button":case"input":case"select":case"textarea":e=!!n.autoFocus;break e}e=!1}return e},prepareUpdate:function(e,t,n,r,o){return Uo(e,t,n,r,o)},shouldSetTextContent:function(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(e,t){return!!t.hidden},createTextInstance:function(e,t,n,r){return(e=Lo(e,t))[ce]=r,e},now:Hr,mutation:{commitMount:function(e){e.focus()},commitUpdate:function(e,t,n,r,o){e[fe]=o,Ho(e,t,n,r,o)},resetTextContent:function(e){e.textContent=""},commitTextUpdate:function(e,t,n){e.nodeValue=n},appendChild:function(e,t){e.appendChild(t)},appendChildToContainer:function(e,t){8===e.nodeType?e.parentNode.insertBefore(t,e):e.appendChild(t)},insertBefore:function(e,t,n){e.insertBefore(t,n)},insertInContainerBefore:function(e,t,n){8===e.nodeType?e.parentNode.insertBefore(t,n):e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},removeChildFromContainer:function(e,t){8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)}},hydration:{canHydrateInstance:function(e,t){return 1!==e.nodeType||t.toLowerCase()!==e.nodeName.toLowerCase()?null:e},canHydrateTextInstance:function(e,t){return""===t||3!==e.nodeType?null:e},getNextHydratableSibling:function(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e},getFirstHydratableChild:function(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e},hydrateInstance:function(e,t,n,r,o,a){return e[ce]=a,e[fe]=n,jo(e,t,n,o,r)},hydrateTextInstance:function(e,t,n){return e[ce]=n,zo(e,t)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:jr,cancelDeferredCallback:zr,useSyncScheduling:!0});function $o(e,t,n,r,o){Ko(n)||d("200");var a=n._reactRootContainer;if(a)Wo.updateContainer(t,a,e,o);else{if(!(r=r||function(e){return!(!(e=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))}(n)))for(a=void 0;a=n.lastChild;)n.removeChild(a);var i=Wo.createContainer(n,r);a=n._reactRootContainer=i,Wo.unbatchedUpdates(function(){Wo.updateContainer(t,i,e,o)})}return Wo.getPublicRootInstance(a)}function Qo(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Ko(t)||d("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wr,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}function Go(e,t){this._reactRootContainer=Wo.createContainer(e,t)}lt=Wo.batchedUpdates,Go.prototype.render=function(e,t){Wo.updateContainer(e,this._reactRootContainer,null,t)},Go.prototype.unmount=function(e){Wo.updateContainer(null,this._reactRootContainer,null,e)};var Xo={createPortal:Qo,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(t)return Wo.findHostInstance(t);"function"==typeof e.render?d("188"):d("213",Object.keys(e))},hydrate:function(e,t,n){return $o(null,e,t,!0,n)},render:function(e,t,n){return $o(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&d("38"),$o(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Ko(e)||d("40"),!!e._reactRootContainer&&(Wo.unbatchedUpdates(function(){$o(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:Qo,unstable_batchedUpdates:st,unstable_deferredUpdates:Wo.deferredUpdates,flushSync:Wo.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:ue,EventPluginRegistry:W,EventPropagators:Ee,ReactControlledComponent:it,ReactDOMComponentTree:me,ReactDOMEventListener:en}};Wo.injectIntoDevTools({findFiberByHostInstance:pe,bundleType:0,version:"16.2.0",rendererPackageName:"react-dom"});var Yo=Object.freeze({default:Xo}),Jo=Yo&&Xo||Yo;e.exports=Jo.default?Jo.default:Jo},function(e,t,n){"use strict";
/** @license React v16.2.0
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(5),o=n(4),a=n(2),i="function"==typeof Symbol&&Symbol.for,l=i?Symbol.for("react.element"):60103,u=i?Symbol.for("react.call"):60104,s=i?Symbol.for("react.return"):60105,c=i?Symbol.for("react.portal"):60106,f=i?Symbol.for("react.fragment"):60107,p="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw(t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.")).name="Invariant Violation",t.framesToPop=1,t}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function m(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||h}function y(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||h}function g(){}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&d("85"),this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=m.prototype;var v=y.prototype=new g;function b(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||h}v.constructor=y,r(v,m.prototype),v.isPureReactComponent=!0;var C=b.prototype=new g;C.constructor=b,r(C,m.prototype),C.unstable_isAsyncReactComponent=!0,C.render=function(){return this.props.children};var w={current:null},k=Object.prototype.hasOwnProperty,x={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r,o={},a=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(a=""+t.key),t)k.call(t,r)&&!x.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:l,type:e,key:a,ref:i,props:o,_owner:w.current}}function E(e){return"object"==typeof e&&null!==e&&e.$$typeof===l}var T=/\/+/g,S=[];function P(e,t,n,r){if(S.length){var o=S.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function O(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>S.length&&S.push(e)}function N(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case l:case u:case s:case c:a=!0}}if(a)return n(r,e,""===t?"."+I(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var i=0;i<e.length;i++){var f=t+I(o=e[i],i);a+=N(o,f,n,r)}else if(null===e||void 0===e?f=null:f="function"==typeof(f=p&&e[p]||e["@@iterator"])?f:null,"function"==typeof f)for(e=f.call(e),i=0;!(o=e.next()).done;)a+=N(o=o.value,f=t+I(o,i++),n,r);else"object"===o&&d("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return a}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function R(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?M(e,r,n,a.thatReturnsArgument):null!=e&&(E(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(T,"$&/")+"/")+n,e={$$typeof:l,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function M(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(T,"$&/")+"/"),t=P(t,a,r,o),null==e||N(e,"",D,t),O(t)}var A={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return M(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=P(null,null,t,n),null==e||N(e,"",R,t),O(t)},count:function(e){return null==e?0:N(e,"",a.thatReturnsNull,null)},toArray:function(e){var t=[];return M(e,t,null,a.thatReturnsArgument),t},only:function(e){return E(e)||d("143"),e}},Component:m,PureComponent:y,unstable_AsyncComponent:b,Fragment:f,createElement:_,cloneElement:function(e,t,n){var o=r({},e.props),a=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)k.call(t,c)&&!x.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];o.children=s}return{$$typeof:l,type:e.type,key:a,ref:i,props:o,_owner:u}},createFactory:function(e){var t=_.bind(null,e);return t.type=e,t},isValidElement:E,version:"16.2.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:w,assign:r}},L=Object.freeze({default:A}),F=L&&A||L;e.exports=F.default?F.default:F},function(e,t,n){"use strict";var r=i(n(0)),o=i(n(1)),a=i(n(13));function i(e){return e&&e.__esModule?e:{default:e}}o.default.render(r.default.createElement(a.default,null),document.getElementById("testmsg1"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5RnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zdXBlcmFnZW50L2xpYi9pcy1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eU9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vY2gzL1Rlc3RWYWx1ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N1cGVyYWdlbnQvbGliL2FnZW50LWJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zdXBlcmFnZW50L2xpYi91dGlscy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N1cGVyYWdlbnQvbGliL3Jlc3BvbnNlLWJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zdXBlcmFnZW50L2xpYi9yZXF1ZXN0LWJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb21wb25lbnQtZW1pdHRlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N1cGVyYWdlbnQvbGliL2NsaWVudC5qcyIsIndlYnBhY2s6Ly8vLi9jaDMvVGVzdERpdi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ZvY3VzTm9kZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzTm9kZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzVGV4dE5vZGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9jb250YWluc05vZGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9zaGFsbG93RXF1YWwuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRBY3RpdmVFbGVtZW50LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvRXZlbnRMaXN0ZW5lci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2ZianMvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vaW5kZXguanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwidmFsdWUiLCJuIiwiX19lc01vZHVsZSIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwibWFrZUVtcHR5RnVuY3Rpb24iLCJhcmciLCJlbXB0eUZ1bmN0aW9uIiwidGhhdFJldHVybnMiLCJ0aGF0UmV0dXJuc0ZhbHNlIiwidGhhdFJldHVybnNUcnVlIiwidGhhdFJldHVybnNOdWxsIiwidGhhdFJldHVybnNUaGlzIiwidGhpcyIsInRoYXRSZXR1cm5zQXJndW1lbnQiLCJvYmoiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsImpvaW4iLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsImtleXMiLCJzaG91bGRVc2VOYXRpdmUiLCJ0YXJnZXQiLCJzb3VyY2UiLCJmcm9tIiwic3ltYm9scyIsInRvIiwidmFsIiwidW5kZWZpbmVkIiwiVHlwZUVycm9yIiwidG9PYmplY3QiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJrZXkiLCJUZXN0VmFsdWUiLCJwcm9wcyIsIl9jbGFzc0NhbGxDaGVjayIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX19wcm90b19fIiwiZ2V0UHJvdG90eXBlT2YiLCJfcmVhY3QyIiwiZGVmYXVsdCIsIkNvbXBvbmVudCIsIm5ld1BybyIsImxvZyIsInNldFN0YXRlIiwic2QiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3MiLCJpZCIsImhyZWYiLCJBZ2VudCIsIl9kZWZhdWx0cyIsImZuIiwicHVzaCIsIl9zZXREZWZhdWx0cyIsInJlcSIsImRlZiIsImFwcGx5IiwidHlwZSIsInN0ciIsInNoaWZ0IiwicGFyYW1zIiwicmVkdWNlIiwicGFydHMiLCJwYXJzZUxpbmtzIiwidXJsIiwic2xpY2UiLCJjbGVhbkhlYWRlciIsImhlYWRlciIsImNoYW5nZXNPcmlnaW4iLCJ1dGlscyIsIlJlc3BvbnNlQmFzZSIsIm1peGluIiwiZmllbGQiLCJ0b0xvd2VyQ2FzZSIsIl9zZXRIZWFkZXJQcm9wZXJ0aWVzIiwiY3QiLCJsaW5rcyIsImxpbmsiLCJfc2V0U3RhdHVzUHJvcGVydGllcyIsInN0YXR1cyIsInN0YXR1c0NvZGUiLCJzdGF0dXNUeXBlIiwiaW5mbyIsIm9rIiwicmVkaXJlY3QiLCJjbGllbnRFcnJvciIsInNlcnZlckVycm9yIiwidG9FcnJvciIsImFjY2VwdGVkIiwibm9Db250ZW50IiwiYmFkUmVxdWVzdCIsInVuYXV0aG9yaXplZCIsIm5vdEFjY2VwdGFibGUiLCJmb3JiaWRkZW4iLCJub3RGb3VuZCIsImlzT2JqZWN0IiwiUmVxdWVzdEJhc2UiLCJjbGVhclRpbWVvdXQiLCJfdGltZXIiLCJfcmVzcG9uc2VUaW1lb3V0VGltZXIiLCJwYXJzZSIsIl9wYXJzZXIiLCJyZXNwb25zZVR5cGUiLCJfcmVzcG9uc2VUeXBlIiwic2VyaWFsaXplIiwiX3NlcmlhbGl6ZXIiLCJ0aW1lb3V0Iiwib3B0aW9ucyIsIl90aW1lb3V0IiwiX3Jlc3BvbnNlVGltZW91dCIsIm9wdGlvbiIsImRlYWRsaW5lIiwicmVzcG9uc2UiLCJ3YXJuIiwicmV0cnkiLCJjb3VudCIsIl9tYXhSZXRyaWVzIiwiX3JldHJpZXMiLCJfcmV0cnlDYWxsYmFjayIsIkVSUk9SX0NPREVTIiwiX3Nob3VsZFJldHJ5IiwicmVzIiwib3ZlcnJpZGUiLCJlIiwiY29kZSIsImluZGV4T2YiLCJjcm9zc0RvbWFpbiIsIl9yZXRyeSIsInJlcXVlc3QiLCJfYWJvcnRlZCIsInRpbWVkb3V0IiwiX2VuZCIsInRoZW4iLCJyZXNvbHZlIiwicmVqZWN0IiwiX2Z1bGxmaWxsZWRQcm9taXNlIiwic2VsZiIsIl9lbmRDYWxsZWQiLCJQcm9taXNlIiwiaW5uZXJSZXNvbHZlIiwiaW5uZXJSZWplY3QiLCJlbmQiLCJjYXRjaCIsImNiIiwidXNlIiwiRXJyb3IiLCJfb2tDYWxsYmFjayIsIl9pc1Jlc3BvbnNlT0siLCJfaGVhZGVyIiwiZ2V0SGVhZGVyIiwic2V0IiwidW5zZXQiLCJfZGF0YSIsIkFycmF5IiwiaXNBcnJheSIsIl9nZXRGb3JtRGF0YSIsImFwcGVuZCIsImFib3J0IiwieGhyIiwiZW1pdCIsIl9hdXRoIiwidXNlciIsInBhc3MiLCJiYXNlNjRFbmNvZGVyIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsIndpdGhDcmVkZW50aWFscyIsIm9uIiwiX3dpdGhDcmVkZW50aWFscyIsInJlZGlyZWN0cyIsIl9tYXhSZWRpcmVjdHMiLCJtYXhSZXNwb25zZVNpemUiLCJfbWF4UmVzcG9uc2VTaXplIiwidG9KU09OIiwibWV0aG9kIiwiZGF0YSIsImhlYWRlcnMiLCJzZW5kIiwiaXNPYmoiLCJfZm9ybURhdGEiLCJfaXNIb3N0Iiwic29ydFF1ZXJ5Iiwic29ydCIsIl9zb3J0IiwiX2ZpbmFsaXplUXVlcnlTdHJpbmciLCJxdWVyeSIsIl9xdWVyeSIsImluZGV4IiwicXVlcnlBcnIiLCJzdWJzdHJpbmciLCJfYXBwZW5kUXVlcnlTdHJpbmciLCJ0cmFjZSIsIl90aW1lb3V0RXJyb3IiLCJyZWFzb24iLCJlcnJubyIsImNhbGxiYWNrIiwiX3NldFRpbWVvdXRzIiwic2V0VGltZW91dCIsIkVtaXR0ZXIiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJfY2FsbGJhY2tzIiwib25jZSIsIm9mZiIsInJlbW92ZUxpc3RlbmVyIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImNhbGxiYWNrcyIsInNwbGljZSIsImFyZ3MiLCJsZW4iLCJsaXN0ZW5lcnMiLCJoYXNMaXN0ZW5lcnMiLCJyb290Iiwid2luZG93Iiwibm9vcCIsIlJlcXVlc3QiLCJnZXRYSFIiLCJYTUxIdHRwUmVxdWVzdCIsImxvY2F0aW9uIiwicHJvdG9jb2wiLCJBY3RpdmVYT2JqZWN0IiwidHJpbSIsInJlcGxhY2UiLCJwYWlycyIsInB1c2hFbmNvZGVkS2V5VmFsdWVQYWlyIiwidiIsInN1YmtleSIsImVuY29kZVVSSUNvbXBvbmVudCIsInBhcnNlU3RyaW5nIiwicGFpciIsInBvcyIsImRlY29kZVVSSUNvbXBvbmVudCIsImlzSlNPTiIsIm1pbWUiLCJ0ZXN0IiwiUmVzcG9uc2UiLCJ0ZXh0IiwicmVzcG9uc2VUZXh0Iiwic3RhdHVzVGV4dCIsImxpbmUiLCJsaW5lcyIsImZpZWxkcyIsInBhcnNlSGVhZGVyIiwiZ2V0QWxsUmVzcG9uc2VIZWFkZXJzIiwiZ2V0UmVzcG9uc2VIZWFkZXIiLCJib2R5IiwiX3BhcnNlQm9keSIsIm5ld19lcnIiLCJvcmlnaW5hbCIsInJhd1Jlc3BvbnNlIiwiY3VzdG9tX2VyciIsImRlbCIsInNlcmlhbGl6ZU9iamVjdCIsInR5cGVzIiwiaHRtbCIsImpzb24iLCJ4bWwiLCJ1cmxlbmNvZGVkIiwiZm9ybSIsImZvcm0tZGF0YSIsImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsImFwcGxpY2F0aW9uL2pzb24iLCJKU09OIiwic3RyaW5naWZ5IiwibXNnIiwiYWNjZXB0IiwiYXV0aCIsImJ0b2EiLCJzdHJpbmciLCJhdHRhY2giLCJmaWxlIiwiRm9ybURhdGEiLCJfY2FsbGJhY2siLCJyZXRyaWVzIiwiY3Jvc3NEb21haW5FcnJvciIsImJ1ZmZlciIsImNhIiwiYWdlbnQiLCJwaXBlIiwid3JpdGUiLCJ0b1N0cmluZyIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJoYW5kbGVQcm9ncmVzcyIsImRpcmVjdGlvbiIsInRvdGFsIiwicGVyY2VudCIsImxvYWRlZCIsIm9ucHJvZ3Jlc3MiLCJiaW5kIiwidXBsb2FkIiwib3BlbiIsImNvbnRlbnRUeXBlIiwic2V0UmVxdWVzdEhlYWRlciIsImhlYWQiLCJwYXRjaCIsInBvc3QiLCJwdXQiLCJUZXN0RGl2IiwiX3RoaXMiLCJzdGF0ZSIsImFzcyIsImJzZCIsImNzZCIsIl90aGlzMiIsIl9zdXBlcmFnZW50MiIsImxvYWRKU09OIiwid2V3ZSIsIlVTRVJfSUQiLCJicyIsImNzIiwiX1Rlc3RWYWx1ZTIiLCJub2RlIiwiZm9jdXMiLCJkZWZhdWx0VmlldyIsIm93bmVyRG9jdW1lbnQiLCJkb2N1bWVudCIsIk5vZGUiLCJub2RlVHlwZSIsIm5vZGVOYW1lIiwiaXNOb2RlIiwiaXNUZXh0Tm9kZSIsImNvbnRhaW5zTm9kZSIsIm91dGVyTm9kZSIsImlubmVyTm9kZSIsInBhcmVudE5vZGUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiaXMiLCJ4IiwieSIsIm9iakEiLCJvYmpCIiwia2V5c0EiLCJrZXlzQiIsImRvYyIsImFjdGl2ZUVsZW1lbnQiLCJFdmVudExpc3RlbmVyIiwibGlzdGVuIiwiZXZlbnRUeXBlIiwicmVtb3ZlIiwiYXR0YWNoRXZlbnQiLCJkZXRhY2hFdmVudCIsImNhcHR1cmUiLCJyZWdpc3RlckRlZmF1bHQiLCJjYW5Vc2VET00iLCJFeGVjdXRpb25FbnZpcm9ubWVudCIsImNhblVzZVdvcmtlcnMiLCJXb3JrZXIiLCJjYW5Vc2VFdmVudExpc3RlbmVycyIsImNhblVzZVZpZXdwb3J0Iiwic2NyZWVuIiwiaXNJbldvcmtlciIsImFhIiwiQiIsIkMiLCJiYSIsImRhIiwiZWEiLCJmYSIsImlhIiwiRCIsIkUiLCJhIiwiYiIsImZyYW1lc1RvUG9wIiwib2EiLCJjaGlsZHJlbiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiZGVmYXVsdFZhbHVlIiwiZGVmYXVsdENoZWNrZWQiLCJpbm5lckhUTUwiLCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmciLCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmciLCJzdHlsZSIsInBhIiwidGEiLCJNVVNUX1VTRV9QUk9QRVJUWSIsIkhBU19CT09MRUFOX1ZBTFVFIiwiSEFTX05VTUVSSUNfVkFMVUUiLCJIQVNfUE9TSVRJVkVfTlVNRVJJQ19WQUxVRSIsIkhBU19PVkVSTE9BREVEX0JPT0xFQU5fVkFMVUUiLCJIQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUUiLCJpbmplY3RET01Qcm9wZXJ0eUNvbmZpZyIsIlByb3BlcnRpZXMiLCJET01BdHRyaWJ1dGVOYW1lc3BhY2VzIiwiRE9NQXR0cmlidXRlTmFtZXMiLCJmIiwiRE9NTXV0YXRpb25NZXRob2RzIiwidWEiLCJnIiwiaCIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJwcm9wZXJ0eU5hbWUiLCJtdXRhdGlvbk1ldGhvZCIsIm11c3RVc2VQcm9wZXJ0eSIsImhhc0Jvb2xlYW5WYWx1ZSIsImhhc051bWVyaWNWYWx1ZSIsImhhc1Bvc2l0aXZlTnVtZXJpY1ZhbHVlIiwiaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZSIsImhhc1N0cmluZ0Jvb2xlYW5WYWx1ZSIsInZhIiwid2EiLCJ4YSIsInlhIiwiSyIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJhbGxvd0Z1bGxTY3JlZW4iLCJhc3luYyIsImF1dG9Gb2N1cyIsImF1dG9QbGF5IiwiY2hlY2tlZCIsImNvbHMiLCJjb250ZW50RWRpdGFibGUiLCJjb250cm9scyIsImRlZmVyIiwiZGlzYWJsZWQiLCJkb3dubG9hZCIsImRyYWdnYWJsZSIsImZvcm1Ob1ZhbGlkYXRlIiwiaGlkZGVuIiwibG9vcCIsIm11bHRpcGxlIiwibXV0ZWQiLCJub1ZhbGlkYXRlIiwicGxheXNJbmxpbmUiLCJyZWFkT25seSIsInJlcXVpcmVkIiwicmV2ZXJzZWQiLCJyb3dzIiwicm93U3BhbiIsInNjb3BlZCIsInNlYW1sZXNzIiwic2VsZWN0ZWQiLCJzaXplIiwic3RhcnQiLCJzcGFuIiwic3BlbGxDaGVjayIsInRhYkluZGV4IiwiaXRlbVNjb3BlIiwiYWNjZXB0Q2hhcnNldCIsImNsYXNzTmFtZSIsImh0bWxGb3IiLCJodHRwRXF1aXYiLCJyZW1vdmVBdHRyaWJ1dGUiLCJoYXNBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJ2YWxpZGl0eSIsImJhZElucHV0IiwiRWEiLCJNIiwiR2EiLCJhdXRvUmV2ZXJzZSIsImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWQiLCJwcmVzZXJ2ZUFscGhhIiwieGxpbmtBY3R1YXRlIiwieGxpbmtBcmNyb2xlIiwieGxpbmtIcmVmIiwieGxpbmtSb2xlIiwieGxpbmtTaG93IiwieGxpbmtUaXRsZSIsInhsaW5rVHlwZSIsInhtbEJhc2UiLCJ4bWxMYW5nIiwieG1sU3BhY2UiLCJIYSIsIklhIiwidG9VcHBlckNhc2UiLCJQIiwiX2NhdWdodEVycm9yIiwiX2hhc0NhdWdodEVycm9yIiwiX3JldGhyb3dFcnJvciIsIl9oYXNSZXRocm93RXJyb3IiLCJpbmplY3Rpb24iLCJpbmplY3RFcnJvclV0aWxzIiwiaW52b2tlR3VhcmRlZENhbGxiYWNrIiwiSmEiLCJrIiwiaW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yIiwiaGFzQ2F1Z2h0RXJyb3IiLCJxIiwiY2xlYXJDYXVnaHRFcnJvciIsInJldGhyb3dDYXVnaHRFcnJvciIsIkxhIiwiTWEiLCJOYSIsIk9hIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJQYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwiUWEiLCJyZWdpc3RyYXRpb25OYW1lIiwiUmEiLCJTYSIsImRlcGVuZGVuY2llcyIsIlRhIiwiVWEiLCJWYSIsImZyZWV6ZSIsInBsdWdpbnMiLCJldmVudE5hbWVEaXNwYXRjaENvbmZpZ3MiLCJyZWdpc3RyYXRpb25OYW1lTW9kdWxlcyIsInJlZ2lzdHJhdGlvbk5hbWVEZXBlbmRlbmNpZXMiLCJwb3NzaWJsZVJlZ2lzdHJhdGlvbk5hbWVzIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIldhIiwiWGEiLCJZYSIsIlphIiwiY3VycmVudFRhcmdldCIsIiRhIiwiY29uY2F0IiwiYWIiLCJiYiIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwiY29uc3RydWN0b3IiLCJyZWxlYXNlIiwiZGIiLCJnYiIsImhiIiwiaWIiLCJzdGF0ZU5vZGUiLCJqYiIsImtiIiwibGIiLCJtYiIsImdldExpc3RlbmVyIiwiZW5xdWV1ZUV2ZW50cyIsInByb2Nlc3NFdmVudFF1ZXVlIiwibmIiLCJNYXRoIiwicmFuZG9tIiwiUSIsIm9iIiwicGIiLCJ0YWciLCJwb3AiLCJxYiIsInJiIiwic2IiLCJwcmVjYWNoZUZpYmVyTm9kZSIsImdldENsb3Nlc3RJbnN0YW5jZUZyb21Ob2RlIiwiZ2V0SW5zdGFuY2VGcm9tTm9kZSIsImdldE5vZGVGcm9tSW5zdGFuY2UiLCJnZXRGaWJlckN1cnJlbnRQcm9wc0Zyb21Ob2RlIiwidXBkYXRlRmliZXJQcm9wcyIsInRiIiwidWIiLCJ2YiIsImRpc3BhdGNoQ29uZmlnIiwid2IiLCJfdGFyZ2V0SW5zdCIsInhiIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJhbHRlcm5hdGUiLCJDYiIsImFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXMiLCJhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldCIsImFjY3VtdWxhdGVFbnRlckxlYXZlRGlzcGF0Y2hlcyIsImFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzIiwiRGIiLCJFYiIsImRvY3VtZW50RWxlbWVudCIsIlMiLCJfcm9vdCIsIl9zdGFydFRleHQiLCJfZmFsbGJhY2tUZXh0IiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiZGVmYXVsdFByZXZlbnRlZCIsImlzVHJ1c3RlZCIsIlQiLCJuYXRpdmVFdmVudCIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiS2IiLCJldmVudFBvb2wiLCJMYiIsImRlc3RydWN0b3IiLCJKYiIsImdldFBvb2xlZCIsIk1iIiwiTmIiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJhdWdtZW50Q2xhc3MiLCJYYiIsIlBiIiwiVmIiLCJXYiIsImRvY3VtZW50TW9kZSIsIlliIiwib3BlcmEiLCJ2ZXJzaW9uIiwicGFyc2VJbnQiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImJlZm9yZUlucHV0IiwiYnViYmxlZCIsImNhcHR1cmVkIiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJjYyIsImRjIiwia2V5Q29kZSIsImVjIiwiZGV0YWlsIiwiZmMiLCJpYyIsIndoaWNoIiwiZ2MiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImNoYXIiLCJoYyIsImpjIiwia2MiLCJsYyIsIm1jIiwicmVzdG9yZUNvbnRyb2xsZWRTdGF0ZSIsIm5jIiwiaW5qZWN0RmliZXJDb250cm9sbGVkSG9zdENvbXBvbmVudCIsIm9jIiwicGMiLCJxYyIsImVucXVldWVTdGF0ZVJlc3RvcmUiLCJyZXN0b3JlU3RhdGVJZk5lZWRlZCIsInJjIiwic2MiLCJ0YyIsInhjIiwidWMiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImRhdGV0aW1lLWxvY2FsIiwiZW1haWwiLCJtb250aCIsIm51bWJlciIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGltZSIsIndlZWsiLCJ2YyIsIndjIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwieWMiLCJpbXBsZW1lbnRhdGlvbiIsImhhc0ZlYXR1cmUiLCJ6YyIsIkJjIiwiX3ZhbHVlVHJhY2tlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJBYyIsIkNjIiwiRGMiLCJjaGFuZ2UiLCJFYyIsIkZjIiwiR2MiLCJIYyIsIkljIiwiSmMiLCJLYyIsIkxjIiwiTWMiLCJOYyIsIk9jIiwiUGMiLCIkYyIsImFkIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIl93cmFwcGVyU3RhdGUiLCJjb250cm9sbGVkIiwiZ2V0QXR0cmlidXRlIiwiYmQiLCJ2aWV3IiwiY2QiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiZGQiLCJnZXRNb2RpZmllclN0YXRlIiwiZWQiLCJmZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwiZ2QiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsImhkIiwicGFyZW50V2luZG93IiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnRPd25lciIsImpkIiwiZGlzcGxheU5hbWUiLCJrZCIsImVmZmVjdFRhZyIsImxkIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsIm1kIiwibmQiLCJjaGlsZCIsInNpYmxpbmciLCJjdXJyZW50IiwicWQiLCJyZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwidG9wTGV2ZWxUeXBlIiwidGQiLCJ1ZCIsIlUiLCJ2ZCIsIndkIiwieGQiLCJfZW5hYmxlZCIsIl9oYW5kbGVUb3BMZXZlbCIsInNldEhhbmRsZVRvcExldmVsIiwic2V0RW5hYmxlZCIsImlzRW5hYmxlZCIsInRyYXBCdWJibGVkRXZlbnQiLCJ0cmFwQ2FwdHVyZWRFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJ5ZCIsInpkIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiQWQiLCJCZCIsIkNkIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIkRkIiwidG9wQWJvcnQiLCJ0b3BBbmltYXRpb25FbmQiLCJ0b3BBbmltYXRpb25JdGVyYXRpb24iLCJ0b3BBbmltYXRpb25TdGFydCIsInRvcEJsdXIiLCJ0b3BDYW5jZWwiLCJ0b3BDYW5QbGF5IiwidG9wQ2FuUGxheVRocm91Z2giLCJ0b3BDaGFuZ2UiLCJ0b3BDbGljayIsInRvcENsb3NlIiwidG9wQ29tcG9zaXRpb25FbmQiLCJ0b3BDb21wb3NpdGlvblN0YXJ0IiwidG9wQ29tcG9zaXRpb25VcGRhdGUiLCJ0b3BDb250ZXh0TWVudSIsInRvcENvcHkiLCJ0b3BDdXQiLCJ0b3BEb3VibGVDbGljayIsInRvcERyYWciLCJ0b3BEcmFnRW5kIiwidG9wRHJhZ0VudGVyIiwidG9wRHJhZ0V4aXQiLCJ0b3BEcmFnTGVhdmUiLCJ0b3BEcmFnT3ZlciIsInRvcERyYWdTdGFydCIsInRvcERyb3AiLCJ0b3BEdXJhdGlvbkNoYW5nZSIsInRvcEVtcHRpZWQiLCJ0b3BFbmNyeXB0ZWQiLCJ0b3BFbmRlZCIsInRvcEVycm9yIiwidG9wRm9jdXMiLCJ0b3BJbnB1dCIsInRvcEtleURvd24iLCJ0b3BLZXlQcmVzcyIsInRvcEtleVVwIiwidG9wTG9hZGVkRGF0YSIsInRvcExvYWQiLCJ0b3BMb2FkZWRNZXRhZGF0YSIsInRvcExvYWRTdGFydCIsInRvcE1vdXNlRG93biIsInRvcE1vdXNlTW92ZSIsInRvcE1vdXNlT3V0IiwidG9wTW91c2VPdmVyIiwidG9wTW91c2VVcCIsInRvcFBhc3RlIiwidG9wUGF1c2UiLCJ0b3BQbGF5IiwidG9wUGxheWluZyIsInRvcFByb2dyZXNzIiwidG9wUmF0ZUNoYW5nZSIsInRvcFNjcm9sbCIsInRvcFNlZWtlZCIsInRvcFNlZWtpbmciLCJ0b3BTZWxlY3Rpb25DaGFuZ2UiLCJ0b3BTdGFsbGVkIiwidG9wU3VzcGVuZCIsInRvcFRleHRJbnB1dCIsInRvcFRpbWVVcGRhdGUiLCJ0b3BUb2dnbGUiLCJ0b3BUb3VjaENhbmNlbCIsInRvcFRvdWNoRW5kIiwidG9wVG91Y2hNb3ZlIiwidG9wVG91Y2hTdGFydCIsInRvcFRyYW5zaXRpb25FbmQiLCJ0b3BWb2x1bWVDaGFuZ2UiLCJ0b3BXYWl0aW5nIiwidG9wV2hlZWwiLCJFZCIsIkZkIiwiR2QiLCJIZCIsIklkIiwiZmlyc3RDaGlsZCIsIkpkIiwidGV4dENvbnRlbnQiLCJvZmZzZXQiLCJuZXh0U2libGluZyIsIktkIiwiTGQiLCJNZCIsInNlbGVjdCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImdldFNlbGVjdGlvbiIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsIlNkIiwib25TZWxlY3QiLCJUZCIsIlVkIiwiVmQiLCJXZCIsImNoYXJDb2RlIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsImNsaXBib2FyZERhdGEiLCJYZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJZZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImNlIiwicmVwZWF0IiwibG9jYWxlIiwiZGF0YVRyYW5zZmVyIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiZGUiLCJlZSIsImZlIiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsImdlIiwiaGUiLCJWIiwiVyIsIlNldCIsImllIiwiWCIsImplIiwia2UiLCJsZSIsIm1lIiwiY29udGV4dFR5cGVzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiY2hpbGRDb250ZXh0VHlwZXMiLCJuZSIsIm9lIiwiY3Vyc29yIiwicGUiLCJnZXRDaGlsZENvbnRleHQiLCJxZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwicmUiLCJZIiwibWVtb2l6ZWRTdGF0ZSIsInVwZGF0ZVF1ZXVlIiwibWVtb2l6ZWRQcm9wcyIsInBlbmRpbmdQcm9wcyIsInJlZiIsImludGVybmFsQ29udGV4dFRhZyIsImxhc3RFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJleHBpcmF0aW9uVGltZSIsInNlIiwidGUiLCJpc1JlYWN0Q29tcG9uZW50IiwidWUiLCJ2ZSIsIndlIiwiaGFuZGxlciIsInhlIiwieWUiLCJwZW5kaW5nQ2hpbGRyZW4iLCJ6ZSIsIkFlIiwiQmUiLCJEZSIsIkVlIiwiRmUiLCJiYXNlU3RhdGUiLCJmaXJzdCIsImxhc3QiLCJjYWxsYmFja0xpc3QiLCJoYXNGb3JjZVVwZGF0ZSIsImlzSW5pdGlhbGl6ZWQiLCJHZSIsIm5leHQiLCJIZSIsIkllIiwicGFydGlhbFN0YXRlIiwiSmUiLCJpc1JlcGxhY2UiLCJpc0ZvcmNlZCIsIktlIiwiUWUiLCJTeW1ib2wiLCJSZSIsIlNlIiwiVGUiLCJVZSIsIlZlIiwiV2UiLCJpdGVyYXRvciIsIlhlIiwiWWUiLCJaZSIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJyZWZzIiwiJGUiLCJhZiIsIk1hcCIsInUiLCJ6IiwiJCR0eXBlb2YiLCJHIiwiSSIsIkwiLCJBIiwidyIsIk4iLCJkb25lIiwiSiIsImJmIiwiY2YiLCJkZiIsInJlbmRlciIsInBlbmRpbmdDb250ZXh0IiwiY29udGV4dCIsInNob3VsZFNldFRleHRDb250ZW50IiwidXNlU3luY1NjaGVkdWxpbmciLCJzaG91bGREZXByaW9yaXRpemVTdWJ0cmVlIiwicHVzaEhvc3RDb250ZXh0IiwicHVzaEhvc3RDb250YWluZXIiLCJlbnRlckh5ZHJhdGlvblN0YXRlIiwicmVzZXRIeWRyYXRpb25TdGF0ZSIsInRyeVRvQ2xhaW1OZXh0SHlkcmF0YWJsZUluc3RhbmNlIiwidXBkYXRlciIsImlzTW91bnRlZCIsImVucXVldWVTZXRTdGF0ZSIsIm5leHRDYWxsYmFjayIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJhZG9wdENsYXNzSW5zdGFuY2UiLCJjb25zdHJ1Y3RDbGFzc0luc3RhbmNlIiwibW91bnRDbGFzc0luc3RhbmNlIiwidW5zdGFibGVfaXNBc3luY1JlYWN0Q29tcG9uZW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJ1cGRhdGVDbGFzc0luc3RhbmNlIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsImNvbXBvbmVudERpZFVwZGF0ZSIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsIkxlIiwiT2IiLCJiZWdpbldvcmsiLCJlbGVtZW50IiwiaHlkcmF0ZSIsImJlZ2luRmFpbGVkV29yayIsImdmIiwia2YiLCJRYiIsImphIiwiaXNSZWFkeUZvckNvbW1pdCIsInlnIiwidCIsInpnIiwiQWciLCJOZSIsIk9lIiwiU2MiLCJCZyIsIlRjIiwiQ2ciLCJEZyIsIkVnIiwiUiIsImNvbXBvbmVudERpZENhdGNoIiwiY29tcG9uZW50U3RhY2siLCJRYyIsImhhIiwicWEiLCJGZyIsIkgiLCJyZyIsIkdnIiwiVWMiLCJGIiwicmEiLCJSYyIsImViIiwicWciLCJoYXMiLCJhZGQiLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImNvbXBvbmVudE5hbWUiLCJlcnJvckJvdW5kYXJ5IiwiZXJyb3JCb3VuZGFyeUZvdW5kIiwiZXJyb3JCb3VuZGFyeU5hbWUiLCJ3aWxsUmV0cnkiLCJzdXBwcmVzc1JlYWN0RXJyb3JMb2dnaW5nIiwiVmMiLCJrYSIsIkhnIiwiUmIiLCJJZyIsIm5leHRTY2hlZHVsZWRSb290IiwicmVtYWluaW5nRXhwaXJhdGlvblRpbWUiLCJPIiwic2EiLCJGYSIsImxhIiwiU2IiLCJtYSIsIm5hIiwiV2MiLCJQZSIsIlRiIiwiSmciLCJYYyIsIktnIiwiZmIiLCJZYyIsIlViIiwiWmMiLCJmaW5pc2hlZFdvcmsiLCJ0aW1lUmVtYWluaW5nIiwiTGciLCJnZXRDaGlsZEhvc3RDb250ZXh0IiwiZ2V0Um9vdEhvc3RDb250ZXh0IiwiZ2V0SG9zdENvbnRleHQiLCJnZXRSb290SG9zdENvbnRhaW5lciIsInBvcEhvc3RDb250YWluZXIiLCJwb3BIb3N0Q29udGV4dCIsInJlc2V0SG9zdENvbnRhaW5lciIsImhmIiwiaHlkcmF0aW9uIiwicHJlcGFyZVRvSHlkcmF0ZUhvc3RJbnN0YW5jZSIsInByZXBhcmVUb0h5ZHJhdGVIb3N0VGV4dEluc3RhbmNlIiwicG9wSHlkcmF0aW9uU3RhdGUiLCJjYW5IeWRyYXRlSW5zdGFuY2UiLCJjYW5IeWRyYXRlVGV4dEluc3RhbmNlIiwiZ2V0TmV4dEh5ZHJhdGFibGVTaWJsaW5nIiwiZ2V0Rmlyc3RIeWRyYXRhYmxlQ2hpbGQiLCJoeWRyYXRlSW5zdGFuY2UiLCJoeWRyYXRlVGV4dEluc3RhbmNlIiwiamYiLCJNZSIsImNyZWF0ZUluc3RhbmNlIiwiY3JlYXRlVGV4dEluc3RhbmNlIiwiYXBwZW5kSW5pdGlhbENoaWxkIiwiZmluYWxpemVJbml0aWFsQ2hpbGRyZW4iLCJwcmVwYXJlVXBkYXRlIiwicGVyc2lzdGVuY2UiLCJtdXRhdGlvbiIsImNvbXBsZXRlV29yayIsImVmIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJnZXRQdWJsaWNJbnN0YW5jZSIsImNvbW1pdE1vdW50IiwiY29tbWl0VXBkYXRlIiwicmVzZXRUZXh0Q29udGVudCIsImNvbW1pdFRleHRVcGRhdGUiLCJhcHBlbmRDaGlsZCIsImFwcGVuZENoaWxkVG9Db250YWluZXIiLCJpbnNlcnRCZWZvcmUiLCJpbnNlcnRJbkNvbnRhaW5lckJlZm9yZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlQ2hpbGRGcm9tQ29udGFpbmVyIiwiY29tbWl0UmVzZXRUZXh0Q29udGVudCIsImNvbW1pdFBsYWNlbWVudCIsImNvbW1pdERlbGV0aW9uIiwiY29tbWl0V29yayIsImNvbW1pdExpZmVDeWNsZXMiLCJjb21taXRBdHRhY2hSZWYiLCJjb21taXREZXRhY2hSZWYiLCJmZiIsInNjaGVkdWxlRGVmZXJyZWRDYWxsYmFjayIsImNhbmNlbERlZmVycmVkQ2FsbGJhY2siLCJwcmVwYXJlRm9yQ29tbWl0IiwicmVzZXRBZnRlckNvbW1pdCIsImNvbXB1dGVBc3luY0V4cGlyYXRpb24iLCJjb21wdXRlRXhwaXJhdGlvbkZvckZpYmVyIiwic2NoZWR1bGVXb3JrIiwiYmF0Y2hlZFVwZGF0ZXMiLCJ1bmJhdGNoZWRVcGRhdGVzIiwiZmx1c2hTeW5jIiwiZGVmZXJyZWRVcGRhdGVzIiwibGYiLCJvZCIsImNyZWF0ZUNvbnRhaW5lciIsInVwZGF0ZUNvbnRhaW5lciIsImdldFB1YmxpY1Jvb3RJbnN0YW5jZSIsImZpbmRIb3N0SW5zdGFuY2UiLCJmaW5kSG9zdEluc3RhbmNlV2l0aE5vUG9ydGFscyIsInBkIiwiaW5qZWN0SW50b0RldlRvb2xzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJDZSIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwibWYiLCJuZiIsIm9mIiwicWYiLCJwZXJmb3JtYW5jZSIsInJmIiwic2YiLCJ0ZiIsInJlcXVlc3RJZGxlQ2FsbGJhY2siLCJjYW5jZWxJZGxlQ2FsbGJhY2siLCJCZiIsInVmIiwidmYiLCJ3ZiIsInhmIiwieWYiLCJ6ZiIsIkFmIiwiZGlkVGltZW91dCIsIkNmIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiRGYiLCJwb3N0TWVzc2FnZSIsIkluZmluaXR5IiwiRWYiLCJGZiIsIkdmIiwiSWYiLCJpc05hTiIsIkpmIiwic2V0QXR0cmlidXRlTlMiLCJLZiIsIkhmIiwiTGYiLCJzdGVwIiwibWluIiwibWF4IiwiaW5pdGlhbFZhbHVlIiwiaW5pdGlhbENoZWNrZWQiLCJNZiIsIk5mIiwiT2YiLCJwYXJzZUZsb2F0IiwiUGYiLCJSZiIsIkNoaWxkcmVuIiwiUWYiLCJTZiIsImRlZmF1bHRTZWxlY3RlZCIsIlRmIiwid2FzTXVsdGlwbGUiLCJVZiIsIlZmIiwiV2YiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJuYW1lc3BhY2VVUkkiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwiY2ciLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJkZyIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsImVnIiwiZmciLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsImdnIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsImNyZWF0ZUVsZW1lbnROUyIsIm9nIiwiY3JlYXRlVGV4dE5vZGUiLCJwZyIsIl9faHRtbCIsIm9uQ2xpY2siLCJvbmNsaWNrIiwic2ciLCJ0ZyIsInVnIiwidmciLCJ3ZyIsInNldEluaXRpYWxQcm9wZXJ0aWVzIiwiZGlmZlByb3BlcnRpZXMiLCJ1cGRhdGVQcm9wZXJ0aWVzIiwiZGlmZkh5ZHJhdGVkUHJvcGVydGllcyIsImRpZmZIeWRyYXRlZFRleHQiLCJ3YXJuRm9yVW5tYXRjaGVkVGV4dCIsIndhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZUVsZW1lbnQiLCJ3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVUZXh0Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRFbGVtZW50Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRUZXh0IiwicXVlcnlTZWxlY3RvckFsbCIsInhnIiwiTWciLCJOZyIsIloiLCJ0YWdOYW1lIiwicmFuZ2VDb3VudCIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJleHRlbmQiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsImRpZE5vdE1hdGNoSHlkcmF0ZWRDb250YWluZXJUZXh0SW5zdGFuY2UiLCJkaWROb3RNYXRjaEh5ZHJhdGVkVGV4dEluc3RhbmNlIiwiZGlkTm90SHlkcmF0ZUNvbnRhaW5lckluc3RhbmNlIiwiZGlkTm90SHlkcmF0ZUluc3RhbmNlIiwiZGlkTm90RmluZEh5ZHJhdGFibGVDb250YWluZXJJbnN0YW5jZSIsImRpZE5vdEZpbmRIeWRyYXRhYmxlQ29udGFpbmVyVGV4dEluc3RhbmNlIiwiZGlkTm90RmluZEh5ZHJhdGFibGVJbnN0YW5jZSIsImRpZE5vdEZpbmRIeWRyYXRhYmxlVGV4dEluc3RhbmNlIiwiUGciLCJfcmVhY3RSb290Q29udGFpbmVyIiwiT2ciLCJRZyIsInBmIiwiUmciLCJ1bm1vdW50IiwiU2ciLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfZGVmZXJyZWRVcGRhdGVzIiwiRXZlbnRQbHVnaW5IdWIiLCJFdmVudFBsdWdpblJlZ2lzdHJ5IiwiRXZlbnRQcm9wYWdhdG9ycyIsIlJlYWN0Q29udHJvbGxlZENvbXBvbmVudCIsIlJlYWN0RE9NQ29tcG9uZW50VHJlZSIsIlJlYWN0RE9NRXZlbnRMaXN0ZW5lciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiVGciLCJVZyIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJkZWZhdWx0UHJvcHMiLCJyZXN1bHQiLCJrZXlQcmVmaXgiLCJmdW5jIiwiPSIsIjoiLCJlc2NhcGUiLCJ0b0FycmF5Iiwib25seSIsIlB1cmVDb21wb25lbnQiLCJ1bnN0YWJsZV9Bc3luY0NvbXBvbmVudCIsIkZyYWdtZW50IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlRmFjdG9yeSIsImlzVmFsaWRFbGVtZW50IiwiX3JlYWN0RG9tMiIsIl9UZXN0RGl2MiIsImdldEVsZW1lbnRCeUlkIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxLQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLElBQ0FHLEVBQUFILEVBQ0FJLEdBQUEsRUFDQUgsWUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxR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SUFBQUosSUFBQUksR0FBQTNCLEVBQUEyQixJQUF5RixJQUFBQSxFQUFBM1csVUFBQUMsT0FBQSxFQUF5QixPQUFBMFcsRUFBQXphLEVBQUFpWixTQUFBclAsT0FBc0IsS0FBQTZRLEVBQUEsQ0FBYUosRUFBQTNPLE1BQUErTyxHQUFXLFFBQUE3YSxFQUFBLEVBQVlBLEVBQUE2YSxFQUFJN2EsSUFBQXlhLEVBQUF6YSxHQUFBa0UsVUFBQWxFLEVBQUEsR0FBd0JJLEVBQUFpWixTQUFBb0IsRUFBYSxPQUFPb3BCLFNBQUEvaUMsRUFBQWdGLEtBQUFtVCxFQUFBblQsS0FBQTFCLElBQUEvRCxFQUFBKy9CLElBQUF4bEIsRUFBQXRXLE1BQUFsRSxFQUFBaWpDLE9BQUE3aUIsSUFBcUR5OUIsY0FBQSxTQUFBaGxDLEdBQTJCLElBQUFDLEVBQUFtckIsRUFBQTl2QixLQUFBLEtBQUEwRSxHQUE4QixPQUFUQyxFQUFBcFQsS0FBQW1ULEVBQVNDLEdBQzdlZ2xDLGVBQUF0aUMsRUFBQW1OLFFBQUEsU0FBQXVILG9EQUFzRkMsa0JBQUF1VCxFQUFBbmhDLE9BQUF4QyxJQUE4QnUrQixFQUFBaitCLE9BQUFxaEIsUUFBa0JsZCxRQUFBK3NCLElBQVVnTixFQUFBRCxHQUFBL00sR0FBQStNLEVBQVk1K0IsRUFBQUQsUUFBQTgrQixFQUFBLFFBQUFBLEVBQUEsUUFBQUEsZ0NDcEI1SixRQUFBaC9CLEVBQUEsUUFDQUEsRUFBQSxRQUNBQSxFQUFBLHdEQUdBdytDLEVBQUF2NUMsUUFBUzYvQixPQUNQOS9CLEVBQUFDLFFBQUFNLGNBQUFrNUMsRUFBQXg1QyxRQUFBLE1BQ0FzUixTQUFTbW9DLGVBQWUiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL1wiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMjQpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ2hlY2sgaWYgYG9iamAgaXMgYW4gb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBpc09iamVjdChvYmopIHtcbiAgcmV0dXJuIG51bGwgIT09IG9iaiAmJiAnb2JqZWN0JyA9PT0gdHlwZW9mIG9iajtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc09iamVjdDtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGVtcHR5T2JqZWN0ID0ge307XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIE9iamVjdC5mcmVlemUoZW1wdHlPYmplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVtcHR5T2JqZWN0OyIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nXHJcblxyXG5jbGFzcyBUZXN0VmFsdWUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnR7XHJcblxyXG4gICAgLy9sZXQgZWU9MFxyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcclxuICAgICAgICBzdXBlcihwcm9wcylcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXdQcm8pXHJcbiAgICB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCLslYjrhZUg64KcIO2UhOuhrVwiKVxyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe3NkOm5ld1Byby52YWx1ZX0pXHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCl7XHJcblxyXG4gICAgICAgIC8vbGV0IHNkPXRoaXMuc3RhdGUuc2RcclxuICAgICAgICBcclxuICAgICAgICByZXR1cm4oXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteGwtMyBjb2wtc20tNiBtYi0zXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9e3RoaXMucHJvcHMuY2xhc3N9PlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJvZHlcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJvZHktaWNvblwiPlxyXG4gICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhIGZhLWZ3IGZhLWNvbW1lbnRzXCI+PC9pPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGlkPVwidGVzdG1zZ1wiIGNsYXNzPVwibXItNVwiPnt0aGlzLnByb3BzLnZhbHVlfTwvZGl2PlxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgIDxhIGNsYXNzPVwiY2FyZC1mb290ZXIgdGV4dC13aGl0ZSBjbGVhcmZpeCBzbWFsbCB6LTFcIiBocmVmPVwiI1wiPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJmbG9hdC1sZWZ0XCI+VmlldyBEZXRhaWxzPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJmbG9hdC1yaWdodFwiPlxyXG4gICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhIGZhLWFuZ2xlLXJpZ2h0XCI+PC9pPlxyXG4gICAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRlc3RWYWx1ZVxyXG4iLCJmdW5jdGlvbiBBZ2VudCgpIHtcbiAgdGhpcy5fZGVmYXVsdHMgPSBbXTtcbn1cblxuW1widXNlXCIsIFwib25cIiwgXCJvbmNlXCIsIFwic2V0XCIsIFwicXVlcnlcIiwgXCJ0eXBlXCIsIFwiYWNjZXB0XCIsIFwiYXV0aFwiLCBcIndpdGhDcmVkZW50aWFsc1wiLCBcInNvcnRRdWVyeVwiLCBcInJldHJ5XCIsIFwib2tcIiwgXCJyZWRpcmVjdHNcIixcbiBcInRpbWVvdXRcIiwgXCJidWZmZXJcIiwgXCJzZXJpYWxpemVcIiwgXCJwYXJzZVwiLCBcImNhXCIsIFwia2V5XCIsIFwicGZ4XCIsIFwiY2VydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGZuKSB7XG4gIC8qKiBEZWZhdWx0IHNldHRpbmcgZm9yIGFsbCByZXF1ZXN0cyBmcm9tIHRoaXMgYWdlbnQgKi9cbiAgQWdlbnQucHJvdG90eXBlW2ZuXSA9IGZ1bmN0aW9uKC8qdmFyYXJncyovKSB7XG4gICAgdGhpcy5fZGVmYXVsdHMucHVzaCh7Zm46Zm4sIGFyZ3VtZW50czphcmd1bWVudHN9KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufSk7XG5cbkFnZW50LnByb3RvdHlwZS5fc2V0RGVmYXVsdHMgPSBmdW5jdGlvbihyZXEpIHtcbiAgICB0aGlzLl9kZWZhdWx0cy5mb3JFYWNoKGZ1bmN0aW9uKGRlZikge1xuICAgICAgcmVxW2RlZi5mbl0uYXBwbHkocmVxLCBkZWYuYXJndW1lbnRzKTtcbiAgICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQWdlbnQ7XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogUmV0dXJuIHRoZSBtaW1lIHR5cGUgZm9yIHRoZSBnaXZlbiBgc3RyYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLnR5cGUgPSBmdW5jdGlvbihzdHIpe1xuICByZXR1cm4gc3RyLnNwbGl0KC8gKjsgKi8pLnNoaWZ0KCk7XG59O1xuXG4vKipcbiAqIFJldHVybiBoZWFkZXIgZmllbGQgcGFyYW1ldGVycy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLnBhcmFtcyA9IGZ1bmN0aW9uKHN0cil7XG4gIHJldHVybiBzdHIuc3BsaXQoLyAqOyAqLykucmVkdWNlKGZ1bmN0aW9uKG9iaiwgc3RyKXtcbiAgICB2YXIgcGFydHMgPSBzdHIuc3BsaXQoLyAqPSAqLyk7XG4gICAgdmFyIGtleSA9IHBhcnRzLnNoaWZ0KCk7XG4gICAgdmFyIHZhbCA9IHBhcnRzLnNoaWZ0KCk7XG5cbiAgICBpZiAoa2V5ICYmIHZhbCkgb2JqW2tleV0gPSB2YWw7XG4gICAgcmV0dXJuIG9iajtcbiAgfSwge30pO1xufTtcblxuLyoqXG4gKiBQYXJzZSBMaW5rIGhlYWRlciBmaWVsZHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7T2JqZWN0fVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZXhwb3J0cy5wYXJzZUxpbmtzID0gZnVuY3Rpb24oc3RyKXtcbiAgcmV0dXJuIHN0ci5zcGxpdCgvICosICovKS5yZWR1Y2UoZnVuY3Rpb24ob2JqLCBzdHIpe1xuICAgIHZhciBwYXJ0cyA9IHN0ci5zcGxpdCgvICo7ICovKTtcbiAgICB2YXIgdXJsID0gcGFydHNbMF0uc2xpY2UoMSwgLTEpO1xuICAgIHZhciByZWwgPSBwYXJ0c1sxXS5zcGxpdCgvICo9ICovKVsxXS5zbGljZSgxLCAtMSk7XG4gICAgb2JqW3JlbF0gPSB1cmw7XG4gICAgcmV0dXJuIG9iajtcbiAgfSwge30pO1xufTtcblxuLyoqXG4gKiBTdHJpcCBjb250ZW50IHJlbGF0ZWQgZmllbGRzIGZyb20gYGhlYWRlcmAuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGhlYWRlclxuICogQHJldHVybiB7T2JqZWN0fSBoZWFkZXJcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmV4cG9ydHMuY2xlYW5IZWFkZXIgPSBmdW5jdGlvbihoZWFkZXIsIGNoYW5nZXNPcmlnaW4pe1xuICBkZWxldGUgaGVhZGVyWydjb250ZW50LXR5cGUnXTtcbiAgZGVsZXRlIGhlYWRlclsnY29udGVudC1sZW5ndGgnXTtcbiAgZGVsZXRlIGhlYWRlclsndHJhbnNmZXItZW5jb2RpbmcnXTtcbiAgZGVsZXRlIGhlYWRlclsnaG9zdCddO1xuICAvLyBzZWN1aXJ0eVxuICBpZiAoY2hhbmdlc09yaWdpbikge1xuICAgIGRlbGV0ZSBoZWFkZXJbJ2F1dGhvcml6YXRpb24nXTtcbiAgICBkZWxldGUgaGVhZGVyWydjb29raWUnXTtcbiAgfVxuICByZXR1cm4gaGVhZGVyO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICovXG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxuLyoqXG4gKiBFeHBvc2UgYFJlc3BvbnNlQmFzZWAuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBSZXNwb25zZUJhc2U7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBhIG5ldyBgUmVzcG9uc2VCYXNlYC5cbiAqXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIFJlc3BvbnNlQmFzZShvYmopIHtcbiAgaWYgKG9iaikgcmV0dXJuIG1peGluKG9iaik7XG59XG5cbi8qKlxuICogTWl4aW4gdGhlIHByb3RvdHlwZSBwcm9wZXJ0aWVzLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIG1peGluKG9iaikge1xuICBmb3IgKHZhciBrZXkgaW4gUmVzcG9uc2VCYXNlLnByb3RvdHlwZSkge1xuICAgIG9ialtrZXldID0gUmVzcG9uc2VCYXNlLnByb3RvdHlwZVtrZXldO1xuICB9XG4gIHJldHVybiBvYmo7XG59XG5cbi8qKlxuICogR2V0IGNhc2UtaW5zZW5zaXRpdmUgYGZpZWxkYCB2YWx1ZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZmllbGRcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVzcG9uc2VCYXNlLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbihmaWVsZCkge1xuICByZXR1cm4gdGhpcy5oZWFkZXJbZmllbGQudG9Mb3dlckNhc2UoKV07XG59O1xuXG4vKipcbiAqIFNldCBoZWFkZXIgcmVsYXRlZCBwcm9wZXJ0aWVzOlxuICpcbiAqICAgLSBgLnR5cGVgIHRoZSBjb250ZW50IHR5cGUgd2l0aG91dCBwYXJhbXNcbiAqXG4gKiBBIHJlc3BvbnNlIG9mIFwiQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFyc2V0PXV0Zi04XCJcbiAqIHdpbGwgcHJvdmlkZSB5b3Ugd2l0aCBhIGAudHlwZWAgb2YgXCJ0ZXh0L3BsYWluXCIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGhlYWRlclxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuUmVzcG9uc2VCYXNlLnByb3RvdHlwZS5fc2V0SGVhZGVyUHJvcGVydGllcyA9IGZ1bmN0aW9uKGhlYWRlcil7XG4gICAgLy8gVE9ETzogbW9hciFcbiAgICAvLyBUT0RPOiBtYWtlIHRoaXMgYSB1dGlsXG5cbiAgICAvLyBjb250ZW50LXR5cGVcbiAgICB2YXIgY3QgPSBoZWFkZXJbJ2NvbnRlbnQtdHlwZSddIHx8ICcnO1xuICAgIHRoaXMudHlwZSA9IHV0aWxzLnR5cGUoY3QpO1xuXG4gICAgLy8gcGFyYW1zXG4gICAgdmFyIHBhcmFtcyA9IHV0aWxzLnBhcmFtcyhjdCk7XG4gICAgZm9yICh2YXIga2V5IGluIHBhcmFtcykgdGhpc1trZXldID0gcGFyYW1zW2tleV07XG5cbiAgICB0aGlzLmxpbmtzID0ge307XG5cbiAgICAvLyBsaW5rc1xuICAgIHRyeSB7XG4gICAgICAgIGlmIChoZWFkZXIubGluaykge1xuICAgICAgICAgICAgdGhpcy5saW5rcyA9IHV0aWxzLnBhcnNlTGlua3MoaGVhZGVyLmxpbmspO1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIC8vIGlnbm9yZVxuICAgIH1cbn07XG5cbi8qKlxuICogU2V0IGZsYWdzIHN1Y2ggYXMgYC5va2AgYmFzZWQgb24gYHN0YXR1c2AuXG4gKlxuICogRm9yIGV4YW1wbGUgYSAyeHggcmVzcG9uc2Ugd2lsbCBnaXZlIHlvdSBhIGAub2tgIG9mIF9fdHJ1ZV9fXG4gKiB3aGVyZWFzIDV4eCB3aWxsIGJlIF9fZmFsc2VfXyBhbmQgYC5lcnJvcmAgd2lsbCBiZSBfX3RydWVfXy4gVGhlXG4gKiBgLmNsaWVudEVycm9yYCBhbmQgYC5zZXJ2ZXJFcnJvcmAgYXJlIGFsc28gYXZhaWxhYmxlIHRvIGJlIG1vcmVcbiAqIHNwZWNpZmljLCBhbmQgYC5zdGF0dXNUeXBlYCBpcyB0aGUgY2xhc3Mgb2YgZXJyb3IgcmFuZ2luZyBmcm9tIDEuLjVcbiAqIHNvbWV0aW1lcyB1c2VmdWwgZm9yIG1hcHBpbmcgcmVzcG9uZCBjb2xvcnMgZXRjLlxuICpcbiAqIFwic3VnYXJcIiBwcm9wZXJ0aWVzIGFyZSBhbHNvIGRlZmluZWQgZm9yIGNvbW1vbiBjYXNlcy4gQ3VycmVudGx5IHByb3ZpZGluZzpcbiAqXG4gKiAgIC0gLm5vQ29udGVudFxuICogICAtIC5iYWRSZXF1ZXN0XG4gKiAgIC0gLnVuYXV0aG9yaXplZFxuICogICAtIC5ub3RBY2NlcHRhYmxlXG4gKiAgIC0gLm5vdEZvdW5kXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IHN0YXR1c1xuICogQGFwaSBwcml2YXRlXG4gKi9cblxuUmVzcG9uc2VCYXNlLnByb3RvdHlwZS5fc2V0U3RhdHVzUHJvcGVydGllcyA9IGZ1bmN0aW9uKHN0YXR1cyl7XG4gICAgdmFyIHR5cGUgPSBzdGF0dXMgLyAxMDAgfCAwO1xuXG4gICAgLy8gc3RhdHVzIC8gY2xhc3NcbiAgICB0aGlzLnN0YXR1cyA9IHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1cztcbiAgICB0aGlzLnN0YXR1c1R5cGUgPSB0eXBlO1xuXG4gICAgLy8gYmFzaWNzXG4gICAgdGhpcy5pbmZvID0gMSA9PSB0eXBlO1xuICAgIHRoaXMub2sgPSAyID09IHR5cGU7XG4gICAgdGhpcy5yZWRpcmVjdCA9IDMgPT0gdHlwZTtcbiAgICB0aGlzLmNsaWVudEVycm9yID0gNCA9PSB0eXBlO1xuICAgIHRoaXMuc2VydmVyRXJyb3IgPSA1ID09IHR5cGU7XG4gICAgdGhpcy5lcnJvciA9ICg0ID09IHR5cGUgfHwgNSA9PSB0eXBlKVxuICAgICAgICA/IHRoaXMudG9FcnJvcigpXG4gICAgICAgIDogZmFsc2U7XG5cbiAgICAvLyBzdWdhclxuICAgIHRoaXMuYWNjZXB0ZWQgPSAyMDIgPT0gc3RhdHVzO1xuICAgIHRoaXMubm9Db250ZW50ID0gMjA0ID09IHN0YXR1cztcbiAgICB0aGlzLmJhZFJlcXVlc3QgPSA0MDAgPT0gc3RhdHVzO1xuICAgIHRoaXMudW5hdXRob3JpemVkID0gNDAxID09IHN0YXR1cztcbiAgICB0aGlzLm5vdEFjY2VwdGFibGUgPSA0MDYgPT0gc3RhdHVzO1xuICAgIHRoaXMuZm9yYmlkZGVuID0gNDAzID09IHN0YXR1cztcbiAgICB0aGlzLm5vdEZvdW5kID0gNDA0ID09IHN0YXR1cztcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogTW9kdWxlIG9mIG1peGVkLWluIGZ1bmN0aW9ucyBzaGFyZWQgYmV0d2VlbiBub2RlIGFuZCBjbGllbnQgY29kZVxuICovXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL2lzLW9iamVjdCcpO1xuXG4vKipcbiAqIEV4cG9zZSBgUmVxdWVzdEJhc2VgLlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gUmVxdWVzdEJhc2U7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBhIG5ldyBgUmVxdWVzdEJhc2VgLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gUmVxdWVzdEJhc2Uob2JqKSB7XG4gIGlmIChvYmopIHJldHVybiBtaXhpbihvYmopO1xufVxuXG4vKipcbiAqIE1peGluIHRoZSBwcm90b3R5cGUgcHJvcGVydGllcy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcmV0dXJuIHtPYmplY3R9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBtaXhpbihvYmopIHtcbiAgZm9yICh2YXIga2V5IGluIFJlcXVlc3RCYXNlLnByb3RvdHlwZSkge1xuICAgIG9ialtrZXldID0gUmVxdWVzdEJhc2UucHJvdG90eXBlW2tleV07XG4gIH1cbiAgcmV0dXJuIG9iajtcbn1cblxuLyoqXG4gKiBDbGVhciBwcmV2aW91cyB0aW1lb3V0LlxuICpcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuY2xlYXJUaW1lb3V0ID0gZnVuY3Rpb24gX2NsZWFyVGltZW91dCgpe1xuICBjbGVhclRpbWVvdXQodGhpcy5fdGltZXIpO1xuICBjbGVhclRpbWVvdXQodGhpcy5fcmVzcG9uc2VUaW1lb3V0VGltZXIpO1xuICBkZWxldGUgdGhpcy5fdGltZXI7XG4gIGRlbGV0ZSB0aGlzLl9yZXNwb25zZVRpbWVvdXRUaW1lcjtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIE92ZXJyaWRlIGRlZmF1bHQgcmVzcG9uc2UgYm9keSBwYXJzZXJcbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIHRvIGNvbnZlcnQgaW5jb21pbmcgZGF0YSBpbnRvIHJlcXVlc3QuYm9keVxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5wYXJzZSA9IGZ1bmN0aW9uIHBhcnNlKGZuKXtcbiAgdGhpcy5fcGFyc2VyID0gZm47XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTZXQgZm9ybWF0IG9mIGJpbmFyeSByZXNwb25zZSBib2R5LlxuICogSW4gYnJvd3NlciB2YWxpZCBmb3JtYXRzIGFyZSAnYmxvYicgYW5kICdhcnJheWJ1ZmZlcicsXG4gKiB3aGljaCByZXR1cm4gQmxvYiBhbmQgQXJyYXlCdWZmZXIsIHJlc3BlY3RpdmVseS5cbiAqXG4gKiBJbiBOb2RlIGFsbCB2YWx1ZXMgcmVzdWx0IGluIEJ1ZmZlci5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICAgIHJlcS5nZXQoJy8nKVxuICogICAgICAgIC5yZXNwb25zZVR5cGUoJ2Jsb2InKVxuICogICAgICAgIC5lbmQoY2FsbGJhY2spO1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB2YWxcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUucmVzcG9uc2VUeXBlID0gZnVuY3Rpb24odmFsKXtcbiAgdGhpcy5fcmVzcG9uc2VUeXBlID0gdmFsO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogT3ZlcnJpZGUgZGVmYXVsdCByZXF1ZXN0IGJvZHkgc2VyaWFsaXplclxuICpcbiAqIFRoaXMgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgdG8gY29udmVydCBkYXRhIHNldCB2aWEgLnNlbmQgb3IgLmF0dGFjaCBpbnRvIHBheWxvYWQgdG8gc2VuZFxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5zZXJpYWxpemUgPSBmdW5jdGlvbiBzZXJpYWxpemUoZm4pe1xuICB0aGlzLl9zZXJpYWxpemVyID0gZm47XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTZXQgdGltZW91dHMuXG4gKlxuICogLSByZXNwb25zZSB0aW1lb3V0IGlzIHRpbWUgYmV0d2VlbiBzZW5kaW5nIHJlcXVlc3QgYW5kIHJlY2VpdmluZyB0aGUgZmlyc3QgYnl0ZSBvZiB0aGUgcmVzcG9uc2UuIEluY2x1ZGVzIEROUyBhbmQgY29ubmVjdGlvbiB0aW1lLlxuICogLSBkZWFkbGluZSBpcyB0aGUgdGltZSBmcm9tIHN0YXJ0IG9mIHRoZSByZXF1ZXN0IHRvIHJlY2VpdmluZyByZXNwb25zZSBib2R5IGluIGZ1bGwuIElmIHRoZSBkZWFkbGluZSBpcyB0b28gc2hvcnQgbGFyZ2UgZmlsZXMgbWF5IG5vdCBsb2FkIGF0IGFsbCBvbiBzbG93IGNvbm5lY3Rpb25zLlxuICpcbiAqIFZhbHVlIG9mIDAgb3IgZmFsc2UgbWVhbnMgbm8gdGltZW91dC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcnxPYmplY3R9IG1zIG9yIHtyZXNwb25zZSwgZGVhZGxpbmV9XG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLnRpbWVvdXQgPSBmdW5jdGlvbiB0aW1lb3V0KG9wdGlvbnMpe1xuICBpZiAoIW9wdGlvbnMgfHwgJ29iamVjdCcgIT09IHR5cGVvZiBvcHRpb25zKSB7XG4gICAgdGhpcy5fdGltZW91dCA9IG9wdGlvbnM7XG4gICAgdGhpcy5fcmVzcG9uc2VUaW1lb3V0ID0gMDtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGZvcih2YXIgb3B0aW9uIGluIG9wdGlvbnMpIHtcbiAgICBzd2l0Y2gob3B0aW9uKSB7XG4gICAgICBjYXNlICdkZWFkbGluZSc6XG4gICAgICAgIHRoaXMuX3RpbWVvdXQgPSBvcHRpb25zLmRlYWRsaW5lO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3Jlc3BvbnNlJzpcbiAgICAgICAgdGhpcy5fcmVzcG9uc2VUaW1lb3V0ID0gb3B0aW9ucy5yZXNwb25zZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBjb25zb2xlLndhcm4oXCJVbmtub3duIHRpbWVvdXQgb3B0aW9uXCIsIG9wdGlvbik7XG4gICAgfVxuICB9XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTZXQgbnVtYmVyIG9mIHJldHJ5IGF0dGVtcHRzIG9uIGVycm9yLlxuICpcbiAqIEZhaWxlZCByZXF1ZXN0cyB3aWxsIGJlIHJldHJpZWQgJ2NvdW50JyB0aW1lcyBpZiB0aW1lb3V0IG9yIGVyci5jb2RlID49IDUwMC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gY291bnRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtmbl1cbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUucmV0cnkgPSBmdW5jdGlvbiByZXRyeShjb3VudCwgZm4pe1xuICAvLyBEZWZhdWx0IHRvIDEgaWYgbm8gY291bnQgcGFzc2VkIG9yIHRydWVcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDAgfHwgY291bnQgPT09IHRydWUpIGNvdW50ID0gMTtcbiAgaWYgKGNvdW50IDw9IDApIGNvdW50ID0gMDtcbiAgdGhpcy5fbWF4UmV0cmllcyA9IGNvdW50O1xuICB0aGlzLl9yZXRyaWVzID0gMDtcbiAgdGhpcy5fcmV0cnlDYWxsYmFjayA9IGZuO1xuICByZXR1cm4gdGhpcztcbn07XG5cbnZhciBFUlJPUl9DT0RFUyA9IFtcbiAgJ0VDT05OUkVTRVQnLFxuICAnRVRJTUVET1VUJyxcbiAgJ0VBRERSSU5GTycsXG4gICdFU09DS0VUVElNRURPVVQnXG5dO1xuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHJlcXVlc3Qgc2hvdWxkIGJlIHJldHJpZWQuXG4gKiAoQm9ycm93ZWQgZnJvbSBzZWdtZW50aW8vc3VwZXJhZ2VudC1yZXRyeSlcbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJcbiAqIEBwYXJhbSB7UmVzcG9uc2V9IFtyZXNdXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAqL1xuUmVxdWVzdEJhc2UucHJvdG90eXBlLl9zaG91bGRSZXRyeSA9IGZ1bmN0aW9uKGVyciwgcmVzKSB7XG4gIGlmICghdGhpcy5fbWF4UmV0cmllcyB8fCB0aGlzLl9yZXRyaWVzKysgPj0gdGhpcy5fbWF4UmV0cmllcykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAodGhpcy5fcmV0cnlDYWxsYmFjaykge1xuICAgIHRyeSB7XG4gICAgICB2YXIgb3ZlcnJpZGUgPSB0aGlzLl9yZXRyeUNhbGxiYWNrKGVyciwgcmVzKTtcbiAgICAgIGlmIChvdmVycmlkZSA9PT0gdHJ1ZSkgcmV0dXJuIHRydWU7XG4gICAgICBpZiAob3ZlcnJpZGUgPT09IGZhbHNlKSByZXR1cm4gZmFsc2U7XG4gICAgICAvLyB1bmRlZmluZWQgZmFsbHMgYmFjayB0byBkZWZhdWx0c1xuICAgIH0gY2F0Y2goZSkge1xuICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICB9XG4gIH1cbiAgaWYgKHJlcyAmJiByZXMuc3RhdHVzICYmIHJlcy5zdGF0dXMgPj0gNTAwICYmIHJlcy5zdGF0dXMgIT0gNTAxKSByZXR1cm4gdHJ1ZTtcbiAgaWYgKGVycikge1xuICAgIGlmIChlcnIuY29kZSAmJiB+RVJST1JfQ09ERVMuaW5kZXhPZihlcnIuY29kZSkpIHJldHVybiB0cnVlO1xuICAgIC8vIFN1cGVyYWdlbnQgdGltZW91dFxuICAgIGlmIChlcnIudGltZW91dCAmJiBlcnIuY29kZSA9PSAnRUNPTk5BQk9SVEVEJykgcmV0dXJuIHRydWU7XG4gICAgaWYgKGVyci5jcm9zc0RvbWFpbikgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuLyoqXG4gKiBSZXRyeSByZXF1ZXN0XG4gKlxuICogQHJldHVybiB7UmVxdWVzdH0gZm9yIGNoYWluaW5nXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuX3JldHJ5ID0gZnVuY3Rpb24oKSB7XG5cbiAgdGhpcy5jbGVhclRpbWVvdXQoKTtcblxuICAvLyBub2RlXG4gIGlmICh0aGlzLnJlcSkge1xuICAgIHRoaXMucmVxID0gbnVsbDtcbiAgICB0aGlzLnJlcSA9IHRoaXMucmVxdWVzdCgpO1xuICB9XG5cbiAgdGhpcy5fYWJvcnRlZCA9IGZhbHNlO1xuICB0aGlzLnRpbWVkb3V0ID0gZmFsc2U7XG5cbiAgcmV0dXJuIHRoaXMuX2VuZCgpO1xufTtcblxuLyoqXG4gKiBQcm9taXNlIHN1cHBvcnRcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZXNvbHZlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcmVqZWN0XVxuICogQHJldHVybiB7UmVxdWVzdH1cbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUudGhlbiA9IGZ1bmN0aW9uIHRoZW4ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gIGlmICghdGhpcy5fZnVsbGZpbGxlZFByb21pc2UpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgaWYgKHRoaXMuX2VuZENhbGxlZCkge1xuICAgICAgY29uc29sZS53YXJuKFwiV2FybmluZzogc3VwZXJhZ2VudCByZXF1ZXN0IHdhcyBzZW50IHR3aWNlLCBiZWNhdXNlIGJvdGggLmVuZCgpIGFuZCAudGhlbigpIHdlcmUgY2FsbGVkLiBOZXZlciBjYWxsIC5lbmQoKSBpZiB5b3UgdXNlIHByb21pc2VzXCIpO1xuICAgIH1cbiAgICB0aGlzLl9mdWxsZmlsbGVkUHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKGlubmVyUmVzb2x2ZSwgaW5uZXJSZWplY3QpIHtcbiAgICAgIHNlbGYuZW5kKGZ1bmN0aW9uKGVyciwgcmVzKSB7XG4gICAgICAgIGlmIChlcnIpIGlubmVyUmVqZWN0KGVycik7XG4gICAgICAgIGVsc2UgaW5uZXJSZXNvbHZlKHJlcyk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gdGhpcy5fZnVsbGZpbGxlZFByb21pc2UudGhlbihyZXNvbHZlLCByZWplY3QpO1xufTtcblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLmNhdGNoID0gZnVuY3Rpb24oY2IpIHtcbiAgcmV0dXJuIHRoaXMudGhlbih1bmRlZmluZWQsIGNiKTtcbn07XG5cbi8qKlxuICogQWxsb3cgZm9yIGV4dGVuc2lvblxuICovXG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS51c2UgPSBmdW5jdGlvbiB1c2UoZm4pIHtcbiAgZm4odGhpcyk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLm9rID0gZnVuY3Rpb24oY2IpIHtcbiAgaWYgKCdmdW5jdGlvbicgIT09IHR5cGVvZiBjYikgdGhyb3cgRXJyb3IoXCJDYWxsYmFjayByZXF1aXJlZFwiKTtcbiAgdGhpcy5fb2tDYWxsYmFjayA9IGNiO1xuICByZXR1cm4gdGhpcztcbn07XG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5faXNSZXNwb25zZU9LID0gZnVuY3Rpb24ocmVzKSB7XG4gIGlmICghcmVzKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHRoaXMuX29rQ2FsbGJhY2spIHtcbiAgICByZXR1cm4gdGhpcy5fb2tDYWxsYmFjayhyZXMpO1xuICB9XG5cbiAgcmV0dXJuIHJlcy5zdGF0dXMgPj0gMjAwICYmIHJlcy5zdGF0dXMgPCAzMDA7XG59O1xuXG4vKipcbiAqIEdldCByZXF1ZXN0IGhlYWRlciBgZmllbGRgLlxuICogQ2FzZS1pbnNlbnNpdGl2ZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZmllbGRcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uKGZpZWxkKXtcbiAgcmV0dXJuIHRoaXMuX2hlYWRlcltmaWVsZC50b0xvd2VyQ2FzZSgpXTtcbn07XG5cbi8qKlxuICogR2V0IGNhc2UtaW5zZW5zaXRpdmUgaGVhZGVyIGBmaWVsZGAgdmFsdWUuXG4gKiBUaGlzIGlzIGEgZGVwcmVjYXRlZCBpbnRlcm5hbCBBUEkuIFVzZSBgLmdldChmaWVsZClgIGluc3RlYWQuXG4gKlxuICogKGdldEhlYWRlciBpcyBubyBsb25nZXIgdXNlZCBpbnRlcm5hbGx5IGJ5IHRoZSBzdXBlcmFnZW50IGNvZGUgYmFzZSlcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZmllbGRcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICogQGRlcHJlY2F0ZWRcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuZ2V0SGVhZGVyID0gUmVxdWVzdEJhc2UucHJvdG90eXBlLmdldDtcblxuLyoqXG4gKiBTZXQgaGVhZGVyIGBmaWVsZGAgdG8gYHZhbGAsIG9yIG11bHRpcGxlIGZpZWxkcyB3aXRoIG9uZSBvYmplY3QuXG4gKiBDYXNlLWluc2Vuc2l0aXZlLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgICAgcmVxLmdldCgnLycpXG4gKiAgICAgICAgLnNldCgnQWNjZXB0JywgJ2FwcGxpY2F0aW9uL2pzb24nKVxuICogICAgICAgIC5zZXQoJ1gtQVBJLUtleScsICdmb29iYXInKVxuICogICAgICAgIC5lbmQoY2FsbGJhY2spO1xuICpcbiAqICAgICAgcmVxLmdldCgnLycpXG4gKiAgICAgICAgLnNldCh7IEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLCAnWC1BUEktS2V5JzogJ2Zvb2JhcicgfSlcbiAqICAgICAgICAuZW5kKGNhbGxiYWNrKTtcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xPYmplY3R9IGZpZWxkXG4gKiBAcGFyYW0ge1N0cmluZ30gdmFsXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uKGZpZWxkLCB2YWwpe1xuICBpZiAoaXNPYmplY3QoZmllbGQpKSB7XG4gICAgZm9yICh2YXIga2V5IGluIGZpZWxkKSB7XG4gICAgICB0aGlzLnNldChrZXksIGZpZWxkW2tleV0pO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICB0aGlzLl9oZWFkZXJbZmllbGQudG9Mb3dlckNhc2UoKV0gPSB2YWw7XG4gIHRoaXMuaGVhZGVyW2ZpZWxkXSA9IHZhbDtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBoZWFkZXIgYGZpZWxkYC5cbiAqIENhc2UtaW5zZW5zaXRpdmUuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiAgICAgIHJlcS5nZXQoJy8nKVxuICogICAgICAgIC51bnNldCgnVXNlci1BZ2VudCcpXG4gKiAgICAgICAgLmVuZChjYWxsYmFjayk7XG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGZpZWxkXG4gKi9cblJlcXVlc3RCYXNlLnByb3RvdHlwZS51bnNldCA9IGZ1bmN0aW9uKGZpZWxkKXtcbiAgZGVsZXRlIHRoaXMuX2hlYWRlcltmaWVsZC50b0xvd2VyQ2FzZSgpXTtcbiAgZGVsZXRlIHRoaXMuaGVhZGVyW2ZpZWxkXTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFdyaXRlIHRoZSBmaWVsZCBgbmFtZWAgYW5kIGB2YWxgLCBvciBtdWx0aXBsZSBmaWVsZHMgd2l0aCBvbmUgb2JqZWN0XG4gKiBmb3IgXCJtdWx0aXBhcnQvZm9ybS1kYXRhXCIgcmVxdWVzdCBib2RpZXMuXG4gKlxuICogYGBgIGpzXG4gKiByZXF1ZXN0LnBvc3QoJy91cGxvYWQnKVxuICogICAuZmllbGQoJ2ZvbycsICdiYXInKVxuICogICAuZW5kKGNhbGxiYWNrKTtcbiAqXG4gKiByZXF1ZXN0LnBvc3QoJy91cGxvYWQnKVxuICogICAuZmllbGQoeyBmb286ICdiYXInLCBiYXo6ICdxdXgnIH0pXG4gKiAgIC5lbmQoY2FsbGJhY2spO1xuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8T2JqZWN0fSBuYW1lXG4gKiBAcGFyYW0ge1N0cmluZ3xCbG9ifEZpbGV8QnVmZmVyfGZzLlJlYWRTdHJlYW19IHZhbFxuICogQHJldHVybiB7UmVxdWVzdH0gZm9yIGNoYWluaW5nXG4gKiBAYXBpIHB1YmxpY1xuICovXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuZmllbGQgPSBmdW5jdGlvbihuYW1lLCB2YWwpIHtcbiAgLy8gbmFtZSBzaG91bGQgYmUgZWl0aGVyIGEgc3RyaW5nIG9yIGFuIG9iamVjdC5cbiAgaWYgKG51bGwgPT09IG5hbWUgfHwgdW5kZWZpbmVkID09PSBuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCcuZmllbGQobmFtZSwgdmFsKSBuYW1lIGNhbiBub3QgYmUgZW1wdHknKTtcbiAgfVxuXG4gIGlmICh0aGlzLl9kYXRhKSB7XG4gICAgY29uc29sZS5lcnJvcihcIi5maWVsZCgpIGNhbid0IGJlIHVzZWQgaWYgLnNlbmQoKSBpcyB1c2VkLiBQbGVhc2UgdXNlIG9ubHkgLnNlbmQoKSBvciBvbmx5IC5maWVsZCgpICYgLmF0dGFjaCgpXCIpO1xuICB9XG5cbiAgaWYgKGlzT2JqZWN0KG5hbWUpKSB7XG4gICAgZm9yICh2YXIga2V5IGluIG5hbWUpIHtcbiAgICAgIHRoaXMuZmllbGQoa2V5LCBuYW1lW2tleV0pO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICBmb3IgKHZhciBpIGluIHZhbCkge1xuICAgICAgdGhpcy5maWVsZChuYW1lLCB2YWxbaV0pO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8vIHZhbCBzaG91bGQgYmUgZGVmaW5lZCBub3dcbiAgaWYgKG51bGwgPT09IHZhbCB8fCB1bmRlZmluZWQgPT09IHZhbCkge1xuICAgIHRocm93IG5ldyBFcnJvcignLmZpZWxkKG5hbWUsIHZhbCkgdmFsIGNhbiBub3QgYmUgZW1wdHknKTtcbiAgfVxuICBpZiAoJ2Jvb2xlYW4nID09PSB0eXBlb2YgdmFsKSB7XG4gICAgdmFsID0gJycgKyB2YWw7XG4gIH1cbiAgdGhpcy5fZ2V0Rm9ybURhdGEoKS5hcHBlbmQobmFtZSwgdmFsKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIEFib3J0IHRoZSByZXF1ZXN0LCBhbmQgY2xlYXIgcG90ZW50aWFsIHRpbWVvdXQuXG4gKlxuICogQHJldHVybiB7UmVxdWVzdH1cbiAqIEBhcGkgcHVibGljXG4gKi9cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5hYm9ydCA9IGZ1bmN0aW9uKCl7XG4gIGlmICh0aGlzLl9hYm9ydGVkKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgdGhpcy5fYWJvcnRlZCA9IHRydWU7XG4gIHRoaXMueGhyICYmIHRoaXMueGhyLmFib3J0KCk7IC8vIGJyb3dzZXJcbiAgdGhpcy5yZXEgJiYgdGhpcy5yZXEuYWJvcnQoKTsgLy8gbm9kZVxuICB0aGlzLmNsZWFyVGltZW91dCgpO1xuICB0aGlzLmVtaXQoJ2Fib3J0Jyk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLl9hdXRoID0gZnVuY3Rpb24odXNlciwgcGFzcywgb3B0aW9ucywgYmFzZTY0RW5jb2Rlcikge1xuICBzd2l0Y2ggKG9wdGlvbnMudHlwZSkge1xuICAgIGNhc2UgJ2Jhc2ljJzpcbiAgICAgIHRoaXMuc2V0KCdBdXRob3JpemF0aW9uJywgJ0Jhc2ljICcgKyBiYXNlNjRFbmNvZGVyKHVzZXIgKyAnOicgKyBwYXNzKSk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2F1dG8nOlxuICAgICAgdGhpcy51c2VybmFtZSA9IHVzZXI7XG4gICAgICB0aGlzLnBhc3N3b3JkID0gcGFzcztcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAnYmVhcmVyJzogLy8gdXNhZ2Ugd291bGQgYmUgLmF1dGgoYWNjZXNzVG9rZW4sIHsgdHlwZTogJ2JlYXJlcicgfSlcbiAgICAgIHRoaXMuc2V0KCdBdXRob3JpemF0aW9uJywgJ0JlYXJlciAnICsgdXNlcik7XG4gICAgICBicmVhaztcbiAgfVxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogRW5hYmxlIHRyYW5zbWlzc2lvbiBvZiBjb29raWVzIHdpdGggeC1kb21haW4gcmVxdWVzdHMuXG4gKlxuICogTm90ZSB0aGF0IGZvciB0aGlzIHRvIHdvcmsgdGhlIG9yaWdpbiBtdXN0IG5vdCBiZVxuICogdXNpbmcgXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5cIiB3aXRoIGEgd2lsZGNhcmQsXG4gKiBhbmQgYWxzbyBtdXN0IHNldCBcIkFjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzXCJcbiAqIHRvIFwidHJ1ZVwiLlxuICpcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLndpdGhDcmVkZW50aWFscyA9IGZ1bmN0aW9uKG9uKSB7XG4gIC8vIFRoaXMgaXMgYnJvd3Nlci1vbmx5IGZ1bmN0aW9uYWxpdHkuIE5vZGUgc2lkZSBpcyBuby1vcC5cbiAgaWYgKG9uID09IHVuZGVmaW5lZCkgb24gPSB0cnVlO1xuICB0aGlzLl93aXRoQ3JlZGVudGlhbHMgPSBvbjtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFNldCB0aGUgbWF4IHJlZGlyZWN0cyB0byBgbmAuIERvZXMgbm90aW5nIGluIGJyb3dzZXIgWEhSIGltcGxlbWVudGF0aW9uLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBuXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdEJhc2UucHJvdG90eXBlLnJlZGlyZWN0cyA9IGZ1bmN0aW9uKG4pe1xuICB0aGlzLl9tYXhSZWRpcmVjdHMgPSBuO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogTWF4aW11bSBzaXplIG9mIGJ1ZmZlcmVkIHJlc3BvbnNlIGJvZHksIGluIGJ5dGVzLiBDb3VudHMgdW5jb21wcmVzc2VkIHNpemUuXG4gKiBEZWZhdWx0IDIwME1CLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBuXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqL1xuUmVxdWVzdEJhc2UucHJvdG90eXBlLm1heFJlc3BvbnNlU2l6ZSA9IGZ1bmN0aW9uKG4pe1xuICBpZiAoJ251bWJlcicgIT09IHR5cGVvZiBuKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKFwiSW52YWxpZCBhcmd1bWVudFwiKTtcbiAgfVxuICB0aGlzLl9tYXhSZXNwb25zZVNpemUgPSBuO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogQ29udmVydCB0byBhIHBsYWluIGphdmFzY3JpcHQgb2JqZWN0IChub3QgSlNPTiBzdHJpbmcpIG9mIHNjYWxhciBwcm9wZXJ0aWVzLlxuICogTm90ZSBhcyB0aGlzIG1ldGhvZCBpcyBkZXNpZ25lZCB0byByZXR1cm4gYSB1c2VmdWwgbm9uLXRoaXMgdmFsdWUsXG4gKiBpdCBjYW5ub3QgYmUgY2hhaW5lZC5cbiAqXG4gKiBAcmV0dXJuIHtPYmplY3R9IGRlc2NyaWJpbmcgbWV0aG9kLCB1cmwsIGFuZCBkYXRhIG9mIHRoaXMgcmVxdWVzdFxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB7XG4gICAgbWV0aG9kOiB0aGlzLm1ldGhvZCxcbiAgICB1cmw6IHRoaXMudXJsLFxuICAgIGRhdGE6IHRoaXMuX2RhdGEsXG4gICAgaGVhZGVyczogdGhpcy5faGVhZGVyLFxuICB9O1xufTtcblxuLyoqXG4gKiBTZW5kIGBkYXRhYCBhcyB0aGUgcmVxdWVzdCBib2R5LCBkZWZhdWx0aW5nIHRoZSBgLnR5cGUoKWAgdG8gXCJqc29uXCIgd2hlblxuICogYW4gb2JqZWN0IGlzIGdpdmVuLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgICAgIC8vIG1hbnVhbCBqc29uXG4gKiAgICAgICByZXF1ZXN0LnBvc3QoJy91c2VyJylcbiAqICAgICAgICAgLnR5cGUoJ2pzb24nKVxuICogICAgICAgICAuc2VuZCgne1wibmFtZVwiOlwidGpcIn0nKVxuICogICAgICAgICAuZW5kKGNhbGxiYWNrKVxuICpcbiAqICAgICAgIC8vIGF1dG8ganNvblxuICogICAgICAgcmVxdWVzdC5wb3N0KCcvdXNlcicpXG4gKiAgICAgICAgIC5zZW5kKHsgbmFtZTogJ3RqJyB9KVxuICogICAgICAgICAuZW5kKGNhbGxiYWNrKVxuICpcbiAqICAgICAgIC8vIG1hbnVhbCB4LXd3dy1mb3JtLXVybGVuY29kZWRcbiAqICAgICAgIHJlcXVlc3QucG9zdCgnL3VzZXInKVxuICogICAgICAgICAudHlwZSgnZm9ybScpXG4gKiAgICAgICAgIC5zZW5kKCduYW1lPXRqJylcbiAqICAgICAgICAgLmVuZChjYWxsYmFjaylcbiAqXG4gKiAgICAgICAvLyBhdXRvIHgtd3d3LWZvcm0tdXJsZW5jb2RlZFxuICogICAgICAgcmVxdWVzdC5wb3N0KCcvdXNlcicpXG4gKiAgICAgICAgIC50eXBlKCdmb3JtJylcbiAqICAgICAgICAgLnNlbmQoeyBuYW1lOiAndGonIH0pXG4gKiAgICAgICAgIC5lbmQoY2FsbGJhY2spXG4gKlxuICogICAgICAgLy8gZGVmYXVsdHMgdG8geC13d3ctZm9ybS11cmxlbmNvZGVkXG4gKiAgICAgIHJlcXVlc3QucG9zdCgnL3VzZXInKVxuICogICAgICAgIC5zZW5kKCduYW1lPXRvYmknKVxuICogICAgICAgIC5zZW5kKCdzcGVjaWVzPWZlcnJldCcpXG4gKiAgICAgICAgLmVuZChjYWxsYmFjaylcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xPYmplY3R9IGRhdGFcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uKGRhdGEpe1xuICB2YXIgaXNPYmogPSBpc09iamVjdChkYXRhKTtcbiAgdmFyIHR5cGUgPSB0aGlzLl9oZWFkZXJbJ2NvbnRlbnQtdHlwZSddO1xuXG4gIGlmICh0aGlzLl9mb3JtRGF0YSkge1xuICAgIGNvbnNvbGUuZXJyb3IoXCIuc2VuZCgpIGNhbid0IGJlIHVzZWQgaWYgLmF0dGFjaCgpIG9yIC5maWVsZCgpIGlzIHVzZWQuIFBsZWFzZSB1c2Ugb25seSAuc2VuZCgpIG9yIG9ubHkgLmZpZWxkKCkgJiAuYXR0YWNoKClcIik7XG4gIH1cblxuICBpZiAoaXNPYmogJiYgIXRoaXMuX2RhdGEpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSkge1xuICAgICAgdGhpcy5fZGF0YSA9IFtdO1xuICAgIH0gZWxzZSBpZiAoIXRoaXMuX2lzSG9zdChkYXRhKSkge1xuICAgICAgdGhpcy5fZGF0YSA9IHt9O1xuICAgIH1cbiAgfSBlbHNlIGlmIChkYXRhICYmIHRoaXMuX2RhdGEgJiYgdGhpcy5faXNIb3N0KHRoaXMuX2RhdGEpKSB7XG4gICAgdGhyb3cgRXJyb3IoXCJDYW4ndCBtZXJnZSB0aGVzZSBzZW5kIGNhbGxzXCIpO1xuICB9XG5cbiAgLy8gbWVyZ2VcbiAgaWYgKGlzT2JqICYmIGlzT2JqZWN0KHRoaXMuX2RhdGEpKSB7XG4gICAgZm9yICh2YXIga2V5IGluIGRhdGEpIHtcbiAgICAgIHRoaXMuX2RhdGFba2V5XSA9IGRhdGFba2V5XTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoJ3N0cmluZycgPT0gdHlwZW9mIGRhdGEpIHtcbiAgICAvLyBkZWZhdWx0IHRvIHgtd3d3LWZvcm0tdXJsZW5jb2RlZFxuICAgIGlmICghdHlwZSkgdGhpcy50eXBlKCdmb3JtJyk7XG4gICAgdHlwZSA9IHRoaXMuX2hlYWRlclsnY29udGVudC10eXBlJ107XG4gICAgaWYgKCdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnID09IHR5cGUpIHtcbiAgICAgIHRoaXMuX2RhdGEgPSB0aGlzLl9kYXRhXG4gICAgICAgID8gdGhpcy5fZGF0YSArICcmJyArIGRhdGFcbiAgICAgICAgOiBkYXRhO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9kYXRhID0gKHRoaXMuX2RhdGEgfHwgJycpICsgZGF0YTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fZGF0YSA9IGRhdGE7XG4gIH1cblxuICBpZiAoIWlzT2JqIHx8IHRoaXMuX2lzSG9zdChkYXRhKSkge1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLy8gZGVmYXVsdCB0byBqc29uXG4gIGlmICghdHlwZSkgdGhpcy50eXBlKCdqc29uJyk7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBTb3J0IGBxdWVyeXN0cmluZ2AgYnkgdGhlIHNvcnQgZnVuY3Rpb25cbiAqXG4gKlxuICogRXhhbXBsZXM6XG4gKlxuICogICAgICAgLy8gZGVmYXVsdCBvcmRlclxuICogICAgICAgcmVxdWVzdC5nZXQoJy91c2VyJylcbiAqICAgICAgICAgLnF1ZXJ5KCduYW1lPU5pY2snKVxuICogICAgICAgICAucXVlcnkoJ3NlYXJjaD1NYW5ueScpXG4gKiAgICAgICAgIC5zb3J0UXVlcnkoKVxuICogICAgICAgICAuZW5kKGNhbGxiYWNrKVxuICpcbiAqICAgICAgIC8vIGN1c3RvbWl6ZWQgc29ydCBmdW5jdGlvblxuICogICAgICAgcmVxdWVzdC5nZXQoJy91c2VyJylcbiAqICAgICAgICAgLnF1ZXJ5KCduYW1lPU5pY2snKVxuICogICAgICAgICAucXVlcnkoJ3NlYXJjaD1NYW5ueScpXG4gKiAgICAgICAgIC5zb3J0UXVlcnkoZnVuY3Rpb24oYSwgYil7XG4gKiAgICAgICAgICAgcmV0dXJuIGEubGVuZ3RoIC0gYi5sZW5ndGg7XG4gKiAgICAgICAgIH0pXG4gKiAgICAgICAgIC5lbmQoY2FsbGJhY2spXG4gKlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHNvcnRcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuc29ydFF1ZXJ5ID0gZnVuY3Rpb24oc29ydCkge1xuICAvLyBfc29ydCBkZWZhdWx0IHRvIHRydWUgYnV0IG90aGVyd2lzZSBjYW4gYmUgYSBmdW5jdGlvbiBvciBib29sZWFuXG4gIHRoaXMuX3NvcnQgPSB0eXBlb2Ygc29ydCA9PT0gJ3VuZGVmaW5lZCcgPyB0cnVlIDogc29ydDtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIENvbXBvc2UgcXVlcnlzdHJpbmcgdG8gYXBwZW5kIHRvIHJlcS51cmxcbiAqXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuUmVxdWVzdEJhc2UucHJvdG90eXBlLl9maW5hbGl6ZVF1ZXJ5U3RyaW5nID0gZnVuY3Rpb24oKXtcbiAgdmFyIHF1ZXJ5ID0gdGhpcy5fcXVlcnkuam9pbignJicpO1xuICBpZiAocXVlcnkpIHtcbiAgICB0aGlzLnVybCArPSAodGhpcy51cmwuaW5kZXhPZignPycpID49IDAgPyAnJicgOiAnPycpICsgcXVlcnk7XG4gIH1cbiAgdGhpcy5fcXVlcnkubGVuZ3RoID0gMDsgLy8gTWFrZXMgdGhlIGNhbGwgaWRlbXBvdGVudFxuXG4gIGlmICh0aGlzLl9zb3J0KSB7XG4gICAgdmFyIGluZGV4ID0gdGhpcy51cmwuaW5kZXhPZignPycpO1xuICAgIGlmIChpbmRleCA+PSAwKSB7XG4gICAgICB2YXIgcXVlcnlBcnIgPSB0aGlzLnVybC5zdWJzdHJpbmcoaW5kZXggKyAxKS5zcGxpdCgnJicpO1xuICAgICAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiB0aGlzLl9zb3J0KSB7XG4gICAgICAgIHF1ZXJ5QXJyLnNvcnQodGhpcy5fc29ydCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBxdWVyeUFyci5zb3J0KCk7XG4gICAgICB9XG4gICAgICB0aGlzLnVybCA9IHRoaXMudXJsLnN1YnN0cmluZygwLCBpbmRleCkgKyAnPycgKyBxdWVyeUFyci5qb2luKCcmJyk7XG4gICAgfVxuICB9XG59O1xuXG4vLyBGb3IgYmFja3dhcmRzIGNvbXBhdCBvbmx5XG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuX2FwcGVuZFF1ZXJ5U3RyaW5nID0gZnVuY3Rpb24oKSB7Y29uc29sZS50cmFjZShcIlVuc3VwcG9ydGVkXCIpO31cblxuLyoqXG4gKiBJbnZva2UgY2FsbGJhY2sgd2l0aCB0aW1lb3V0IGVycm9yLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblJlcXVlc3RCYXNlLnByb3RvdHlwZS5fdGltZW91dEVycm9yID0gZnVuY3Rpb24ocmVhc29uLCB0aW1lb3V0LCBlcnJubyl7XG4gIGlmICh0aGlzLl9hYm9ydGVkKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBlcnIgPSBuZXcgRXJyb3IocmVhc29uICsgdGltZW91dCArICdtcyBleGNlZWRlZCcpO1xuICBlcnIudGltZW91dCA9IHRpbWVvdXQ7XG4gIGVyci5jb2RlID0gJ0VDT05OQUJPUlRFRCc7XG4gIGVyci5lcnJubyA9IGVycm5vO1xuICB0aGlzLnRpbWVkb3V0ID0gdHJ1ZTtcbiAgdGhpcy5hYm9ydCgpO1xuICB0aGlzLmNhbGxiYWNrKGVycik7XG59O1xuXG5SZXF1ZXN0QmFzZS5wcm90b3R5cGUuX3NldFRpbWVvdXRzID0gZnVuY3Rpb24oKSB7XG4gIHZhciBzZWxmID0gdGhpcztcblxuICAvLyBkZWFkbGluZVxuICBpZiAodGhpcy5fdGltZW91dCAmJiAhdGhpcy5fdGltZXIpIHtcbiAgICB0aGlzLl90aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgIHNlbGYuX3RpbWVvdXRFcnJvcignVGltZW91dCBvZiAnLCBzZWxmLl90aW1lb3V0LCAnRVRJTUUnKTtcbiAgICB9LCB0aGlzLl90aW1lb3V0KTtcbiAgfVxuICAvLyByZXNwb25zZSB0aW1lb3V0XG4gIGlmICh0aGlzLl9yZXNwb25zZVRpbWVvdXQgJiYgIXRoaXMuX3Jlc3BvbnNlVGltZW91dFRpbWVyKSB7XG4gICAgdGhpcy5fcmVzcG9uc2VUaW1lb3V0VGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICBzZWxmLl90aW1lb3V0RXJyb3IoJ1Jlc3BvbnNlIHRpbWVvdXQgb2YgJywgc2VsZi5fcmVzcG9uc2VUaW1lb3V0LCAnRVRJTUVET1VUJyk7XG4gICAgfSwgdGhpcy5fcmVzcG9uc2VUaW1lb3V0KTtcbiAgfVxufTtcbiIsIlxyXG4vKipcclxuICogRXhwb3NlIGBFbWl0dGVyYC5cclxuICovXHJcblxyXG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IEVtaXR0ZXI7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbml0aWFsaXplIGEgbmV3IGBFbWl0dGVyYC5cclxuICpcclxuICogQGFwaSBwdWJsaWNcclxuICovXHJcblxyXG5mdW5jdGlvbiBFbWl0dGVyKG9iaikge1xyXG4gIGlmIChvYmopIHJldHVybiBtaXhpbihvYmopO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIE1peGluIHRoZSBlbWl0dGVyIHByb3BlcnRpZXMuXHJcbiAqXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcclxuICogQHJldHVybiB7T2JqZWN0fVxyXG4gKiBAYXBpIHByaXZhdGVcclxuICovXHJcblxyXG5mdW5jdGlvbiBtaXhpbihvYmopIHtcclxuICBmb3IgKHZhciBrZXkgaW4gRW1pdHRlci5wcm90b3R5cGUpIHtcclxuICAgIG9ialtrZXldID0gRW1pdHRlci5wcm90b3R5cGVba2V5XTtcclxuICB9XHJcbiAgcmV0dXJuIG9iajtcclxufVxyXG5cclxuLyoqXHJcbiAqIExpc3RlbiBvbiB0aGUgZ2l2ZW4gYGV2ZW50YCB3aXRoIGBmbmAuXHJcbiAqXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxyXG4gKiBAcmV0dXJuIHtFbWl0dGVyfVxyXG4gKiBAYXBpIHB1YmxpY1xyXG4gKi9cclxuXHJcbkVtaXR0ZXIucHJvdG90eXBlLm9uID1cclxuRW1pdHRlci5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0aW9uKGV2ZW50LCBmbil7XHJcbiAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHt9O1xyXG4gICh0aGlzLl9jYWxsYmFja3NbJyQnICsgZXZlbnRdID0gdGhpcy5fY2FsbGJhY2tzWyckJyArIGV2ZW50XSB8fCBbXSlcclxuICAgIC5wdXNoKGZuKTtcclxuICByZXR1cm4gdGhpcztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBBZGRzIGFuIGBldmVudGAgbGlzdGVuZXIgdGhhdCB3aWxsIGJlIGludm9rZWQgYSBzaW5nbGVcclxuICogdGltZSB0aGVuIGF1dG9tYXRpY2FsbHkgcmVtb3ZlZC5cclxuICpcclxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XHJcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXHJcbiAqIEByZXR1cm4ge0VtaXR0ZXJ9XHJcbiAqIEBhcGkgcHVibGljXHJcbiAqL1xyXG5cclxuRW1pdHRlci5wcm90b3R5cGUub25jZSA9IGZ1bmN0aW9uKGV2ZW50LCBmbil7XHJcbiAgZnVuY3Rpb24gb24oKSB7XHJcbiAgICB0aGlzLm9mZihldmVudCwgb24pO1xyXG4gICAgZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxuICB9XHJcblxyXG4gIG9uLmZuID0gZm47XHJcbiAgdGhpcy5vbihldmVudCwgb24pO1xyXG4gIHJldHVybiB0aGlzO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZ2l2ZW4gY2FsbGJhY2sgZm9yIGBldmVudGAgb3IgYWxsXHJcbiAqIHJlZ2lzdGVyZWQgY2FsbGJhY2tzLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cclxuICogQHJldHVybiB7RW1pdHRlcn1cclxuICogQGFwaSBwdWJsaWNcclxuICovXHJcblxyXG5FbWl0dGVyLnByb3RvdHlwZS5vZmYgPVxyXG5FbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lciA9XHJcbkVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9XHJcbkVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbihldmVudCwgZm4pe1xyXG4gIHRoaXMuX2NhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrcyB8fCB7fTtcclxuXHJcbiAgLy8gYWxsXHJcbiAgaWYgKDAgPT0gYXJndW1lbnRzLmxlbmd0aCkge1xyXG4gICAgdGhpcy5fY2FsbGJhY2tzID0ge307XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIC8vIHNwZWNpZmljIGV2ZW50XHJcbiAgdmFyIGNhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrc1snJCcgKyBldmVudF07XHJcbiAgaWYgKCFjYWxsYmFja3MpIHJldHVybiB0aGlzO1xyXG5cclxuICAvLyByZW1vdmUgYWxsIGhhbmRsZXJzXHJcbiAgaWYgKDEgPT0gYXJndW1lbnRzLmxlbmd0aCkge1xyXG4gICAgZGVsZXRlIHRoaXMuX2NhbGxiYWNrc1snJCcgKyBldmVudF07XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIC8vIHJlbW92ZSBzcGVjaWZpYyBoYW5kbGVyXHJcbiAgdmFyIGNiO1xyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBjYiA9IGNhbGxiYWNrc1tpXTtcclxuICAgIGlmIChjYiA9PT0gZm4gfHwgY2IuZm4gPT09IGZuKSB7XHJcbiAgICAgIGNhbGxiYWNrcy5zcGxpY2UoaSwgMSk7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gdGhpcztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBFbWl0IGBldmVudGAgd2l0aCB0aGUgZ2l2ZW4gYXJncy5cclxuICpcclxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XHJcbiAqIEBwYXJhbSB7TWl4ZWR9IC4uLlxyXG4gKiBAcmV0dXJuIHtFbWl0dGVyfVxyXG4gKi9cclxuXHJcbkVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbihldmVudCl7XHJcbiAgdGhpcy5fY2FsbGJhY2tzID0gdGhpcy5fY2FsbGJhY2tzIHx8IHt9O1xyXG4gIHZhciBhcmdzID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpXHJcbiAgICAsIGNhbGxiYWNrcyA9IHRoaXMuX2NhbGxiYWNrc1snJCcgKyBldmVudF07XHJcblxyXG4gIGlmIChjYWxsYmFja3MpIHtcclxuICAgIGNhbGxiYWNrcyA9IGNhbGxiYWNrcy5zbGljZSgwKTtcclxuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBjYWxsYmFja3MubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcclxuICAgICAgY2FsbGJhY2tzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHRoaXM7XHJcbn07XHJcblxyXG4vKipcclxuICogUmV0dXJuIGFycmF5IG9mIGNhbGxiYWNrcyBmb3IgYGV2ZW50YC5cclxuICpcclxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50XHJcbiAqIEByZXR1cm4ge0FycmF5fVxyXG4gKiBAYXBpIHB1YmxpY1xyXG4gKi9cclxuXHJcbkVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVycyA9IGZ1bmN0aW9uKGV2ZW50KXtcclxuICB0aGlzLl9jYWxsYmFja3MgPSB0aGlzLl9jYWxsYmFja3MgfHwge307XHJcbiAgcmV0dXJuIHRoaXMuX2NhbGxiYWNrc1snJCcgKyBldmVudF0gfHwgW107XHJcbn07XHJcblxyXG4vKipcclxuICogQ2hlY2sgaWYgdGhpcyBlbWl0dGVyIGhhcyBgZXZlbnRgIGhhbmRsZXJzLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRcclxuICogQHJldHVybiB7Qm9vbGVhbn1cclxuICogQGFwaSBwdWJsaWNcclxuICovXHJcblxyXG5FbWl0dGVyLnByb3RvdHlwZS5oYXNMaXN0ZW5lcnMgPSBmdW5jdGlvbihldmVudCl7XHJcbiAgcmV0dXJuICEhIHRoaXMubGlzdGVuZXJzKGV2ZW50KS5sZW5ndGg7XHJcbn07XHJcbiIsIi8qKlxuICogUm9vdCByZWZlcmVuY2UgZm9yIGlmcmFtZXMuXG4gKi9cblxudmFyIHJvb3Q7XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHsgLy8gQnJvd3NlciB3aW5kb3dcbiAgcm9vdCA9IHdpbmRvdztcbn0gZWxzZSBpZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7IC8vIFdlYiBXb3JrZXJcbiAgcm9vdCA9IHNlbGY7XG59IGVsc2UgeyAvLyBPdGhlciBlbnZpcm9ubWVudHNcbiAgY29uc29sZS53YXJuKFwiVXNpbmcgYnJvd3Nlci1vbmx5IHZlcnNpb24gb2Ygc3VwZXJhZ2VudCBpbiBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcbiAgcm9vdCA9IHRoaXM7XG59XG5cbnZhciBFbWl0dGVyID0gcmVxdWlyZSgnY29tcG9uZW50LWVtaXR0ZXInKTtcbnZhciBSZXF1ZXN0QmFzZSA9IHJlcXVpcmUoJy4vcmVxdWVzdC1iYXNlJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL2lzLW9iamVjdCcpO1xudmFyIFJlc3BvbnNlQmFzZSA9IHJlcXVpcmUoJy4vcmVzcG9uc2UtYmFzZScpO1xudmFyIEFnZW50ID0gcmVxdWlyZSgnLi9hZ2VudC1iYXNlJyk7XG5cbi8qKlxuICogTm9vcC5cbiAqL1xuXG5mdW5jdGlvbiBub29wKCl7fTtcblxuLyoqXG4gKiBFeHBvc2UgYHJlcXVlc3RgLlxuICovXG5cbnZhciByZXF1ZXN0ID0gZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obWV0aG9kLCB1cmwpIHtcbiAgLy8gY2FsbGJhY2tcbiAgaWYgKCdmdW5jdGlvbicgPT0gdHlwZW9mIHVybCkge1xuICAgIHJldHVybiBuZXcgZXhwb3J0cy5SZXF1ZXN0KCdHRVQnLCBtZXRob2QpLmVuZCh1cmwpO1xuICB9XG5cbiAgLy8gdXJsIGZpcnN0XG4gIGlmICgxID09IGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICByZXR1cm4gbmV3IGV4cG9ydHMuUmVxdWVzdCgnR0VUJywgbWV0aG9kKTtcbiAgfVxuXG4gIHJldHVybiBuZXcgZXhwb3J0cy5SZXF1ZXN0KG1ldGhvZCwgdXJsKTtcbn1cblxuZXhwb3J0cy5SZXF1ZXN0ID0gUmVxdWVzdDtcblxuLyoqXG4gKiBEZXRlcm1pbmUgWEhSLlxuICovXG5cbnJlcXVlc3QuZ2V0WEhSID0gZnVuY3Rpb24gKCkge1xuICBpZiAocm9vdC5YTUxIdHRwUmVxdWVzdFxuICAgICAgJiYgKCFyb290LmxvY2F0aW9uIHx8ICdmaWxlOicgIT0gcm9vdC5sb2NhdGlvbi5wcm90b2NvbFxuICAgICAgICAgIHx8ICFyb290LkFjdGl2ZVhPYmplY3QpKSB7XG4gICAgcmV0dXJuIG5ldyBYTUxIdHRwUmVxdWVzdDtcbiAgfSBlbHNlIHtcbiAgICB0cnkgeyByZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoJ01pY3Jvc29mdC5YTUxIVFRQJyk7IH0gY2F0Y2goZSkge31cbiAgICB0cnkgeyByZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoJ01zeG1sMi5YTUxIVFRQLjYuMCcpOyB9IGNhdGNoKGUpIHt9XG4gICAgdHJ5IHsgcmV0dXJuIG5ldyBBY3RpdmVYT2JqZWN0KCdNc3htbDIuWE1MSFRUUC4zLjAnKTsgfSBjYXRjaChlKSB7fVxuICAgIHRyeSB7IHJldHVybiBuZXcgQWN0aXZlWE9iamVjdCgnTXN4bWwyLlhNTEhUVFAnKTsgfSBjYXRjaChlKSB7fVxuICB9XG4gIHRocm93IEVycm9yKFwiQnJvd3Nlci1vbmx5IHZlcnNpb24gb2Ygc3VwZXJhZ2VudCBjb3VsZCBub3QgZmluZCBYSFJcIik7XG59O1xuXG4vKipcbiAqIFJlbW92ZXMgbGVhZGluZyBhbmQgdHJhaWxpbmcgd2hpdGVzcGFjZSwgYWRkZWQgdG8gc3VwcG9ydCBJRS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc1xuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxudmFyIHRyaW0gPSAnJy50cmltXG4gID8gZnVuY3Rpb24ocykgeyByZXR1cm4gcy50cmltKCk7IH1cbiAgOiBmdW5jdGlvbihzKSB7IHJldHVybiBzLnJlcGxhY2UoLyheXFxzKnxcXHMqJCkvZywgJycpOyB9O1xuXG4vKipcbiAqIFNlcmlhbGl6ZSB0aGUgZ2l2ZW4gYG9iamAuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9ialxuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gc2VyaWFsaXplKG9iaikge1xuICBpZiAoIWlzT2JqZWN0KG9iaikpIHJldHVybiBvYmo7XG4gIHZhciBwYWlycyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgcHVzaEVuY29kZWRLZXlWYWx1ZVBhaXIocGFpcnMsIGtleSwgb2JqW2tleV0pO1xuICB9XG4gIHJldHVybiBwYWlycy5qb2luKCcmJyk7XG59XG5cbi8qKlxuICogSGVscHMgJ3NlcmlhbGl6ZScgd2l0aCBzZXJpYWxpemluZyBhcnJheXMuXG4gKiBNdXRhdGVzIHRoZSBwYWlycyBhcnJheS5cbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBwYWlyc1xuICogQHBhcmFtIHtTdHJpbmd9IGtleVxuICogQHBhcmFtIHtNaXhlZH0gdmFsXG4gKi9cblxuZnVuY3Rpb24gcHVzaEVuY29kZWRLZXlWYWx1ZVBhaXIocGFpcnMsIGtleSwgdmFsKSB7XG4gIGlmICh2YWwgIT0gbnVsbCkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICAgIHZhbC5mb3JFYWNoKGZ1bmN0aW9uKHYpIHtcbiAgICAgICAgcHVzaEVuY29kZWRLZXlWYWx1ZVBhaXIocGFpcnMsIGtleSwgdik7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKGlzT2JqZWN0KHZhbCkpIHtcbiAgICAgIGZvcih2YXIgc3Via2V5IGluIHZhbCkge1xuICAgICAgICBwdXNoRW5jb2RlZEtleVZhbHVlUGFpcihwYWlycywga2V5ICsgJ1snICsgc3Via2V5ICsgJ10nLCB2YWxbc3Via2V5XSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhaXJzLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGtleSlcbiAgICAgICAgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQodmFsKSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKHZhbCA9PT0gbnVsbCkge1xuICAgIHBhaXJzLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGtleSkpO1xuICB9XG59XG5cbi8qKlxuICogRXhwb3NlIHNlcmlhbGl6YXRpb24gbWV0aG9kLlxuICovXG5cbnJlcXVlc3Quc2VyaWFsaXplT2JqZWN0ID0gc2VyaWFsaXplO1xuXG4vKipcbiAgKiBQYXJzZSB0aGUgZ2l2ZW4geC13d3ctZm9ybS11cmxlbmNvZGVkIGBzdHJgLlxuICAqXG4gICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICAqIEByZXR1cm4ge09iamVjdH1cbiAgKiBAYXBpIHByaXZhdGVcbiAgKi9cblxuZnVuY3Rpb24gcGFyc2VTdHJpbmcoc3RyKSB7XG4gIHZhciBvYmogPSB7fTtcbiAgdmFyIHBhaXJzID0gc3RyLnNwbGl0KCcmJyk7XG4gIHZhciBwYWlyO1xuICB2YXIgcG9zO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBwYWlycy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgIHBhaXIgPSBwYWlyc1tpXTtcbiAgICBwb3MgPSBwYWlyLmluZGV4T2YoJz0nKTtcbiAgICBpZiAocG9zID09IC0xKSB7XG4gICAgICBvYmpbZGVjb2RlVVJJQ29tcG9uZW50KHBhaXIpXSA9ICcnO1xuICAgIH0gZWxzZSB7XG4gICAgICBvYmpbZGVjb2RlVVJJQ29tcG9uZW50KHBhaXIuc2xpY2UoMCwgcG9zKSldID1cbiAgICAgICAgZGVjb2RlVVJJQ29tcG9uZW50KHBhaXIuc2xpY2UocG9zICsgMSkpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbi8qKlxuICogRXhwb3NlIHBhcnNlci5cbiAqL1xuXG5yZXF1ZXN0LnBhcnNlU3RyaW5nID0gcGFyc2VTdHJpbmc7XG5cbi8qKlxuICogRGVmYXVsdCBNSU1FIHR5cGUgbWFwLlxuICpcbiAqICAgICBzdXBlcmFnZW50LnR5cGVzLnhtbCA9ICdhcHBsaWNhdGlvbi94bWwnO1xuICpcbiAqL1xuXG5yZXF1ZXN0LnR5cGVzID0ge1xuICBodG1sOiAndGV4dC9odG1sJyxcbiAganNvbjogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICB4bWw6ICd0ZXh0L3htbCcsXG4gIHVybGVuY29kZWQ6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLFxuICAnZm9ybSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLFxuICAnZm9ybS1kYXRhJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcbn07XG5cbi8qKlxuICogRGVmYXVsdCBzZXJpYWxpemF0aW9uIG1hcC5cbiAqXG4gKiAgICAgc3VwZXJhZ2VudC5zZXJpYWxpemVbJ2FwcGxpY2F0aW9uL3htbCddID0gZnVuY3Rpb24ob2JqKXtcbiAqICAgICAgIHJldHVybiAnZ2VuZXJhdGVkIHhtbCBoZXJlJztcbiAqICAgICB9O1xuICpcbiAqL1xuXG5yZXF1ZXN0LnNlcmlhbGl6ZSA9IHtcbiAgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCc6IHNlcmlhbGl6ZSxcbiAgJ2FwcGxpY2F0aW9uL2pzb24nOiBKU09OLnN0cmluZ2lmeSxcbn07XG5cbi8qKlxuICAqIERlZmF1bHQgcGFyc2Vycy5cbiAgKlxuICAqICAgICBzdXBlcmFnZW50LnBhcnNlWydhcHBsaWNhdGlvbi94bWwnXSA9IGZ1bmN0aW9uKHN0cil7XG4gICogICAgICAgcmV0dXJuIHsgb2JqZWN0IHBhcnNlZCBmcm9tIHN0ciB9O1xuICAqICAgICB9O1xuICAqXG4gICovXG5cbnJlcXVlc3QucGFyc2UgPSB7XG4gICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnOiBwYXJzZVN0cmluZyxcbiAgJ2FwcGxpY2F0aW9uL2pzb24nOiBKU09OLnBhcnNlLFxufTtcblxuLyoqXG4gKiBQYXJzZSB0aGUgZ2l2ZW4gaGVhZGVyIGBzdHJgIGludG9cbiAqIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSBtYXBwZWQgZmllbGRzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge09iamVjdH1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlSGVhZGVyKHN0cikge1xuICB2YXIgbGluZXMgPSBzdHIuc3BsaXQoL1xccj9cXG4vKTtcbiAgdmFyIGZpZWxkcyA9IHt9O1xuICB2YXIgaW5kZXg7XG4gIHZhciBsaW5lO1xuICB2YXIgZmllbGQ7XG4gIHZhciB2YWw7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGxpbmVzLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgbGluZSA9IGxpbmVzW2ldO1xuICAgIGluZGV4ID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAgaWYgKGluZGV4ID09PSAtMSkgeyAvLyBjb3VsZCBiZSBlbXB0eSBsaW5lLCBqdXN0IHNraXAgaXRcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBmaWVsZCA9IGxpbmUuc2xpY2UoMCwgaW5kZXgpLnRvTG93ZXJDYXNlKCk7XG4gICAgdmFsID0gdHJpbShsaW5lLnNsaWNlKGluZGV4ICsgMSkpO1xuICAgIGZpZWxkc1tmaWVsZF0gPSB2YWw7XG4gIH1cblxuICByZXR1cm4gZmllbGRzO1xufVxuXG4vKipcbiAqIENoZWNrIGlmIGBtaW1lYCBpcyBqc29uIG9yIGhhcyAranNvbiBzdHJ1Y3R1cmVkIHN5bnRheCBzdWZmaXguXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG1pbWVcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBpc0pTT04obWltZSkge1xuICAvLyBzaG91bGQgbWF0Y2ggL2pzb24gb3IgK2pzb25cbiAgLy8gYnV0IG5vdCAvanNvbi1zZXFcbiAgcmV0dXJuIC9bXFwvK11qc29uKCR8W14tXFx3XSkvLnRlc3QobWltZSk7XG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBhIG5ldyBgUmVzcG9uc2VgIHdpdGggdGhlIGdpdmVuIGB4aHJgLlxuICpcbiAqICAtIHNldCBmbGFncyAoLm9rLCAuZXJyb3IsIGV0YylcbiAqICAtIHBhcnNlIGhlYWRlclxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICBBbGlhc2luZyBgc3VwZXJhZ2VudGAgYXMgYHJlcXVlc3RgIGlzIG5pY2U6XG4gKlxuICogICAgICByZXF1ZXN0ID0gc3VwZXJhZ2VudDtcbiAqXG4gKiAgV2UgY2FuIHVzZSB0aGUgcHJvbWlzZS1saWtlIEFQSSwgb3IgcGFzcyBjYWxsYmFja3M6XG4gKlxuICogICAgICByZXF1ZXN0LmdldCgnLycpLmVuZChmdW5jdGlvbihyZXMpe30pO1xuICogICAgICByZXF1ZXN0LmdldCgnLycsIGZ1bmN0aW9uKHJlcyl7fSk7XG4gKlxuICogIFNlbmRpbmcgZGF0YSBjYW4gYmUgY2hhaW5lZDpcbiAqXG4gKiAgICAgIHJlcXVlc3RcbiAqICAgICAgICAucG9zdCgnL3VzZXInKVxuICogICAgICAgIC5zZW5kKHsgbmFtZTogJ3RqJyB9KVxuICogICAgICAgIC5lbmQoZnVuY3Rpb24ocmVzKXt9KTtcbiAqXG4gKiAgT3IgcGFzc2VkIHRvIGAuc2VuZCgpYDpcbiAqXG4gKiAgICAgIHJlcXVlc3RcbiAqICAgICAgICAucG9zdCgnL3VzZXInKVxuICogICAgICAgIC5zZW5kKHsgbmFtZTogJ3RqJyB9LCBmdW5jdGlvbihyZXMpe30pO1xuICpcbiAqICBPciBwYXNzZWQgdG8gYC5wb3N0KClgOlxuICpcbiAqICAgICAgcmVxdWVzdFxuICogICAgICAgIC5wb3N0KCcvdXNlcicsIHsgbmFtZTogJ3RqJyB9KVxuICogICAgICAgIC5lbmQoZnVuY3Rpb24ocmVzKXt9KTtcbiAqXG4gKiBPciBmdXJ0aGVyIHJlZHVjZWQgdG8gYSBzaW5nbGUgY2FsbCBmb3Igc2ltcGxlIGNhc2VzOlxuICpcbiAqICAgICAgcmVxdWVzdFxuICogICAgICAgIC5wb3N0KCcvdXNlcicsIHsgbmFtZTogJ3RqJyB9LCBmdW5jdGlvbihyZXMpe30pO1xuICpcbiAqIEBwYXJhbSB7WE1MSFRUUFJlcXVlc3R9IHhoclxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIFJlc3BvbnNlKHJlcSkge1xuICB0aGlzLnJlcSA9IHJlcTtcbiAgdGhpcy54aHIgPSB0aGlzLnJlcS54aHI7XG4gIC8vIHJlc3BvbnNlVGV4dCBpcyBhY2Nlc3NpYmxlIG9ubHkgaWYgcmVzcG9uc2VUeXBlIGlzICcnIG9yICd0ZXh0JyBhbmQgb24gb2xkZXIgYnJvd3NlcnNcbiAgdGhpcy50ZXh0ID0gKCh0aGlzLnJlcS5tZXRob2QgIT0nSEVBRCcgJiYgKHRoaXMueGhyLnJlc3BvbnNlVHlwZSA9PT0gJycgfHwgdGhpcy54aHIucmVzcG9uc2VUeXBlID09PSAndGV4dCcpKSB8fCB0eXBlb2YgdGhpcy54aHIucmVzcG9uc2VUeXBlID09PSAndW5kZWZpbmVkJylcbiAgICAgPyB0aGlzLnhoci5yZXNwb25zZVRleHRcbiAgICAgOiBudWxsO1xuICB0aGlzLnN0YXR1c1RleHQgPSB0aGlzLnJlcS54aHIuc3RhdHVzVGV4dDtcbiAgdmFyIHN0YXR1cyA9IHRoaXMueGhyLnN0YXR1cztcbiAgLy8gaGFuZGxlIElFOSBidWc6IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTAwNDY5NzIvbXNpZS1yZXR1cm5zLXN0YXR1cy1jb2RlLW9mLTEyMjMtZm9yLWFqYXgtcmVxdWVzdFxuICBpZiAoc3RhdHVzID09PSAxMjIzKSB7XG4gICAgc3RhdHVzID0gMjA0O1xuICB9XG4gIHRoaXMuX3NldFN0YXR1c1Byb3BlcnRpZXMoc3RhdHVzKTtcbiAgdGhpcy5oZWFkZXIgPSB0aGlzLmhlYWRlcnMgPSBwYXJzZUhlYWRlcih0aGlzLnhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSk7XG4gIC8vIGdldEFsbFJlc3BvbnNlSGVhZGVycyBzb21ldGltZXMgZmFsc2VseSByZXR1cm5zIFwiXCIgZm9yIENPUlMgcmVxdWVzdHMsIGJ1dFxuICAvLyBnZXRSZXNwb25zZUhlYWRlciBzdGlsbCB3b3Jrcy4gc28gd2UgZ2V0IGNvbnRlbnQtdHlwZSBldmVuIGlmIGdldHRpbmdcbiAgLy8gb3RoZXIgaGVhZGVycyBmYWlscy5cbiAgdGhpcy5oZWFkZXJbJ2NvbnRlbnQtdHlwZSddID0gdGhpcy54aHIuZ2V0UmVzcG9uc2VIZWFkZXIoJ2NvbnRlbnQtdHlwZScpO1xuICB0aGlzLl9zZXRIZWFkZXJQcm9wZXJ0aWVzKHRoaXMuaGVhZGVyKTtcblxuICBpZiAobnVsbCA9PT0gdGhpcy50ZXh0ICYmIHJlcS5fcmVzcG9uc2VUeXBlKSB7XG4gICAgdGhpcy5ib2R5ID0gdGhpcy54aHIucmVzcG9uc2U7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5ib2R5ID0gdGhpcy5yZXEubWV0aG9kICE9ICdIRUFEJ1xuICAgICAgPyB0aGlzLl9wYXJzZUJvZHkodGhpcy50ZXh0ID8gdGhpcy50ZXh0IDogdGhpcy54aHIucmVzcG9uc2UpXG4gICAgICA6IG51bGw7XG4gIH1cbn1cblxuUmVzcG9uc2VCYXNlKFJlc3BvbnNlLnByb3RvdHlwZSk7XG5cbi8qKlxuICogUGFyc2UgdGhlIGdpdmVuIGJvZHkgYHN0cmAuXG4gKlxuICogVXNlZCBmb3IgYXV0by1wYXJzaW5nIG9mIGJvZGllcy4gUGFyc2Vyc1xuICogYXJlIGRlZmluZWQgb24gdGhlIGBzdXBlcmFnZW50LnBhcnNlYCBvYmplY3QuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7TWl4ZWR9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5SZXNwb25zZS5wcm90b3R5cGUuX3BhcnNlQm9keSA9IGZ1bmN0aW9uKHN0cikge1xuICB2YXIgcGFyc2UgPSByZXF1ZXN0LnBhcnNlW3RoaXMudHlwZV07XG4gIGlmICh0aGlzLnJlcS5fcGFyc2VyKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxLl9wYXJzZXIodGhpcywgc3RyKTtcbiAgfVxuICBpZiAoIXBhcnNlICYmIGlzSlNPTih0aGlzLnR5cGUpKSB7XG4gICAgcGFyc2UgPSByZXF1ZXN0LnBhcnNlWydhcHBsaWNhdGlvbi9qc29uJ107XG4gIH1cbiAgcmV0dXJuIHBhcnNlICYmIHN0ciAmJiAoc3RyLmxlbmd0aCB8fCBzdHIgaW5zdGFuY2VvZiBPYmplY3QpXG4gICAgPyBwYXJzZShzdHIpXG4gICAgOiBudWxsO1xufTtcblxuLyoqXG4gKiBSZXR1cm4gYW4gYEVycm9yYCByZXByZXNlbnRhdGl2ZSBvZiB0aGlzIHJlc3BvbnNlLlxuICpcbiAqIEByZXR1cm4ge0Vycm9yfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXNwb25zZS5wcm90b3R5cGUudG9FcnJvciA9IGZ1bmN0aW9uKCl7XG4gIHZhciByZXEgPSB0aGlzLnJlcTtcbiAgdmFyIG1ldGhvZCA9IHJlcS5tZXRob2Q7XG4gIHZhciB1cmwgPSByZXEudXJsO1xuXG4gIHZhciBtc2cgPSAnY2Fubm90ICcgKyBtZXRob2QgKyAnICcgKyB1cmwgKyAnICgnICsgdGhpcy5zdGF0dXMgKyAnKSc7XG4gIHZhciBlcnIgPSBuZXcgRXJyb3IobXNnKTtcbiAgZXJyLnN0YXR1cyA9IHRoaXMuc3RhdHVzO1xuICBlcnIubWV0aG9kID0gbWV0aG9kO1xuICBlcnIudXJsID0gdXJsO1xuXG4gIHJldHVybiBlcnI7XG59O1xuXG4vKipcbiAqIEV4cG9zZSBgUmVzcG9uc2VgLlxuICovXG5cbnJlcXVlc3QuUmVzcG9uc2UgPSBSZXNwb25zZTtcblxuLyoqXG4gKiBJbml0aWFsaXplIGEgbmV3IGBSZXF1ZXN0YCB3aXRoIHRoZSBnaXZlbiBgbWV0aG9kYCBhbmQgYHVybGAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG1ldGhvZFxuICogQHBhcmFtIHtTdHJpbmd9IHVybFxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBSZXF1ZXN0KG1ldGhvZCwgdXJsKSB7XG4gIHZhciBzZWxmID0gdGhpcztcbiAgdGhpcy5fcXVlcnkgPSB0aGlzLl9xdWVyeSB8fCBbXTtcbiAgdGhpcy5tZXRob2QgPSBtZXRob2Q7XG4gIHRoaXMudXJsID0gdXJsO1xuICB0aGlzLmhlYWRlciA9IHt9OyAvLyBwcmVzZXJ2ZXMgaGVhZGVyIG5hbWUgY2FzZVxuICB0aGlzLl9oZWFkZXIgPSB7fTsgLy8gY29lcmNlcyBoZWFkZXIgbmFtZXMgdG8gbG93ZXJjYXNlXG4gIHRoaXMub24oJ2VuZCcsIGZ1bmN0aW9uKCl7XG4gICAgdmFyIGVyciA9IG51bGw7XG4gICAgdmFyIHJlcyA9IG51bGw7XG5cbiAgICB0cnkge1xuICAgICAgcmVzID0gbmV3IFJlc3BvbnNlKHNlbGYpO1xuICAgIH0gY2F0Y2goZSkge1xuICAgICAgZXJyID0gbmV3IEVycm9yKCdQYXJzZXIgaXMgdW5hYmxlIHRvIHBhcnNlIHRoZSByZXNwb25zZScpO1xuICAgICAgZXJyLnBhcnNlID0gdHJ1ZTtcbiAgICAgIGVyci5vcmlnaW5hbCA9IGU7XG4gICAgICAvLyBpc3N1ZSAjNjc1OiByZXR1cm4gdGhlIHJhdyByZXNwb25zZSBpZiB0aGUgcmVzcG9uc2UgcGFyc2luZyBmYWlsc1xuICAgICAgaWYgKHNlbGYueGhyKSB7XG4gICAgICAgIC8vIGllOSBkb2Vzbid0IGhhdmUgJ3Jlc3BvbnNlJyBwcm9wZXJ0eVxuICAgICAgICBlcnIucmF3UmVzcG9uc2UgPSB0eXBlb2Ygc2VsZi54aHIucmVzcG9uc2VUeXBlID09ICd1bmRlZmluZWQnID8gc2VsZi54aHIucmVzcG9uc2VUZXh0IDogc2VsZi54aHIucmVzcG9uc2U7XG4gICAgICAgIC8vIGlzc3VlICM4NzY6IHJldHVybiB0aGUgaHR0cCBzdGF0dXMgY29kZSBpZiB0aGUgcmVzcG9uc2UgcGFyc2luZyBmYWlsc1xuICAgICAgICBlcnIuc3RhdHVzID0gc2VsZi54aHIuc3RhdHVzID8gc2VsZi54aHIuc3RhdHVzIDogbnVsbDtcbiAgICAgICAgZXJyLnN0YXR1c0NvZGUgPSBlcnIuc3RhdHVzOyAvLyBiYWNrd2FyZHMtY29tcGF0IG9ubHlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVyci5yYXdSZXNwb25zZSA9IG51bGw7XG4gICAgICAgIGVyci5zdGF0dXMgPSBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc2VsZi5jYWxsYmFjayhlcnIpO1xuICAgIH1cblxuICAgIHNlbGYuZW1pdCgncmVzcG9uc2UnLCByZXMpO1xuXG4gICAgdmFyIG5ld19lcnI7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghc2VsZi5faXNSZXNwb25zZU9LKHJlcykpIHtcbiAgICAgICAgbmV3X2VyciA9IG5ldyBFcnJvcihyZXMuc3RhdHVzVGV4dCB8fCAnVW5zdWNjZXNzZnVsIEhUVFAgcmVzcG9uc2UnKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoKGN1c3RvbV9lcnIpIHtcbiAgICAgIG5ld19lcnIgPSBjdXN0b21fZXJyOyAvLyBvaygpIGNhbGxiYWNrIGNhbiB0aHJvd1xuICAgIH1cblxuICAgIC8vICMxMDAwIGRvbid0IGNhdGNoIGVycm9ycyBmcm9tIHRoZSBjYWxsYmFjayB0byBhdm9pZCBkb3VibGUgY2FsbGluZyBpdFxuICAgIGlmIChuZXdfZXJyKSB7XG4gICAgICBuZXdfZXJyLm9yaWdpbmFsID0gZXJyO1xuICAgICAgbmV3X2Vyci5yZXNwb25zZSA9IHJlcztcbiAgICAgIG5ld19lcnIuc3RhdHVzID0gcmVzLnN0YXR1cztcbiAgICAgIHNlbGYuY2FsbGJhY2sobmV3X2VyciwgcmVzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2VsZi5jYWxsYmFjayhudWxsLCByZXMpO1xuICAgIH1cbiAgfSk7XG59XG5cbi8qKlxuICogTWl4aW4gYEVtaXR0ZXJgIGFuZCBgUmVxdWVzdEJhc2VgLlxuICovXG5cbkVtaXR0ZXIoUmVxdWVzdC5wcm90b3R5cGUpO1xuUmVxdWVzdEJhc2UoUmVxdWVzdC5wcm90b3R5cGUpO1xuXG4vKipcbiAqIFNldCBDb250ZW50LVR5cGUgdG8gYHR5cGVgLCBtYXBwaW5nIHZhbHVlcyBmcm9tIGByZXF1ZXN0LnR5cGVzYC5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICAgIHN1cGVyYWdlbnQudHlwZXMueG1sID0gJ2FwcGxpY2F0aW9uL3htbCc7XG4gKlxuICogICAgICByZXF1ZXN0LnBvc3QoJy8nKVxuICogICAgICAgIC50eXBlKCd4bWwnKVxuICogICAgICAgIC5zZW5kKHhtbHN0cmluZylcbiAqICAgICAgICAuZW5kKGNhbGxiYWNrKTtcbiAqXG4gKiAgICAgIHJlcXVlc3QucG9zdCgnLycpXG4gKiAgICAgICAgLnR5cGUoJ2FwcGxpY2F0aW9uL3htbCcpXG4gKiAgICAgICAgLnNlbmQoeG1sc3RyaW5nKVxuICogICAgICAgIC5lbmQoY2FsbGJhY2spO1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdC5wcm90b3R5cGUudHlwZSA9IGZ1bmN0aW9uKHR5cGUpe1xuICB0aGlzLnNldCgnQ29udGVudC1UeXBlJywgcmVxdWVzdC50eXBlc1t0eXBlXSB8fCB0eXBlKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFNldCBBY2NlcHQgdG8gYHR5cGVgLCBtYXBwaW5nIHZhbHVlcyBmcm9tIGByZXF1ZXN0LnR5cGVzYC5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICAgIHN1cGVyYWdlbnQudHlwZXMuanNvbiA9ICdhcHBsaWNhdGlvbi9qc29uJztcbiAqXG4gKiAgICAgIHJlcXVlc3QuZ2V0KCcvYWdlbnQnKVxuICogICAgICAgIC5hY2NlcHQoJ2pzb24nKVxuICogICAgICAgIC5lbmQoY2FsbGJhY2spO1xuICpcbiAqICAgICAgcmVxdWVzdC5nZXQoJy9hZ2VudCcpXG4gKiAgICAgICAgLmFjY2VwdCgnYXBwbGljYXRpb24vanNvbicpXG4gKiAgICAgICAgLmVuZChjYWxsYmFjayk7XG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGFjY2VwdFxuICogQHJldHVybiB7UmVxdWVzdH0gZm9yIGNoYWluaW5nXG4gKiBAYXBpIHB1YmxpY1xuICovXG5cblJlcXVlc3QucHJvdG90eXBlLmFjY2VwdCA9IGZ1bmN0aW9uKHR5cGUpe1xuICB0aGlzLnNldCgnQWNjZXB0JywgcmVxdWVzdC50eXBlc1t0eXBlXSB8fCB0eXBlKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFNldCBBdXRob3JpemF0aW9uIGZpZWxkIHZhbHVlIHdpdGggYHVzZXJgIGFuZCBgcGFzc2AuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHVzZXJcbiAqIEBwYXJhbSB7U3RyaW5nfSBbcGFzc10gb3B0aW9uYWwgaW4gY2FzZSBvZiB1c2luZyAnYmVhcmVyJyBhcyB0eXBlXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyB3aXRoICd0eXBlJyBwcm9wZXJ0eSAnYXV0bycsICdiYXNpYycgb3IgJ2JlYXJlcicgKGRlZmF1bHQgJ2Jhc2ljJylcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5hdXRoID0gZnVuY3Rpb24odXNlciwgcGFzcywgb3B0aW9ucyl7XG4gIGlmICgxID09PSBhcmd1bWVudHMubGVuZ3RoKSBwYXNzID0gJyc7XG4gIGlmICh0eXBlb2YgcGFzcyA9PT0gJ29iamVjdCcgJiYgcGFzcyAhPT0gbnVsbCkgeyAvLyBwYXNzIGlzIG9wdGlvbmFsIGFuZCBjYW4gYmUgcmVwbGFjZWQgd2l0aCBvcHRpb25zXG4gICAgb3B0aW9ucyA9IHBhc3M7XG4gICAgcGFzcyA9ICcnO1xuICB9XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7XG4gICAgICB0eXBlOiAnZnVuY3Rpb24nID09PSB0eXBlb2YgYnRvYSA/ICdiYXNpYycgOiAnYXV0bycsXG4gICAgfTtcbiAgfVxuXG4gIHZhciBlbmNvZGVyID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBidG9hKSB7XG4gICAgICByZXR1cm4gYnRvYShzdHJpbmcpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCB1c2UgYmFzaWMgYXV0aCwgYnRvYSBpcyBub3QgYSBmdW5jdGlvbicpO1xuICB9O1xuXG4gIHJldHVybiB0aGlzLl9hdXRoKHVzZXIsIHBhc3MsIG9wdGlvbnMsIGVuY29kZXIpO1xufTtcblxuLyoqXG4gKiBBZGQgcXVlcnktc3RyaW5nIGB2YWxgLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgcmVxdWVzdC5nZXQoJy9zaG9lcycpXG4gKiAgICAgLnF1ZXJ5KCdzaXplPTEwJylcbiAqICAgICAucXVlcnkoeyBjb2xvcjogJ2JsdWUnIH0pXG4gKlxuICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSB2YWxcbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5xdWVyeSA9IGZ1bmN0aW9uKHZhbCl7XG4gIGlmICgnc3RyaW5nJyAhPSB0eXBlb2YgdmFsKSB2YWwgPSBzZXJpYWxpemUodmFsKTtcbiAgaWYgKHZhbCkgdGhpcy5fcXVlcnkucHVzaCh2YWwpO1xuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogUXVldWUgdGhlIGdpdmVuIGBmaWxlYCBhcyBhbiBhdHRhY2htZW50IHRvIHRoZSBzcGVjaWZpZWQgYGZpZWxkYCxcbiAqIHdpdGggb3B0aW9uYWwgYG9wdGlvbnNgIChvciBmaWxlbmFtZSkuXG4gKlxuICogYGBgIGpzXG4gKiByZXF1ZXN0LnBvc3QoJy91cGxvYWQnKVxuICogICAuYXR0YWNoKCdjb250ZW50JywgbmV3IEJsb2IoWyc8YSBpZD1cImFcIj48YiBpZD1cImJcIj5oZXkhPC9iPjwvYT4nXSwgeyB0eXBlOiBcInRleHQvaHRtbFwifSkpXG4gKiAgIC5lbmQoY2FsbGJhY2spO1xuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGZpZWxkXG4gKiBAcGFyYW0ge0Jsb2J8RmlsZX0gZmlsZVxuICogQHBhcmFtIHtTdHJpbmd8T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fSBmb3IgY2hhaW5pbmdcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuUmVxdWVzdC5wcm90b3R5cGUuYXR0YWNoID0gZnVuY3Rpb24oZmllbGQsIGZpbGUsIG9wdGlvbnMpe1xuICBpZiAoZmlsZSkge1xuICAgIGlmICh0aGlzLl9kYXRhKSB7XG4gICAgICB0aHJvdyBFcnJvcihcInN1cGVyYWdlbnQgY2FuJ3QgbWl4IC5zZW5kKCkgYW5kIC5hdHRhY2goKVwiKTtcbiAgICB9XG5cbiAgICB0aGlzLl9nZXRGb3JtRGF0YSgpLmFwcGVuZChmaWVsZCwgZmlsZSwgb3B0aW9ucyB8fCBmaWxlLm5hbWUpO1xuICB9XG4gIHJldHVybiB0aGlzO1xufTtcblxuUmVxdWVzdC5wcm90b3R5cGUuX2dldEZvcm1EYXRhID0gZnVuY3Rpb24oKXtcbiAgaWYgKCF0aGlzLl9mb3JtRGF0YSkge1xuICAgIHRoaXMuX2Zvcm1EYXRhID0gbmV3IHJvb3QuRm9ybURhdGEoKTtcbiAgfVxuICByZXR1cm4gdGhpcy5fZm9ybURhdGE7XG59O1xuXG4vKipcbiAqIEludm9rZSB0aGUgY2FsbGJhY2sgd2l0aCBgZXJyYCBhbmQgYHJlc2BcbiAqIGFuZCBoYW5kbGUgYXJpdHkgY2hlY2suXG4gKlxuICogQHBhcmFtIHtFcnJvcn0gZXJyXG4gKiBAcGFyYW0ge1Jlc3BvbnNlfSByZXNcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblJlcXVlc3QucHJvdG90eXBlLmNhbGxiYWNrID0gZnVuY3Rpb24oZXJyLCByZXMpe1xuICBpZiAodGhpcy5fc2hvdWxkUmV0cnkoZXJyLCByZXMpKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JldHJ5KCk7XG4gIH1cblxuICB2YXIgZm4gPSB0aGlzLl9jYWxsYmFjaztcbiAgdGhpcy5jbGVhclRpbWVvdXQoKTtcblxuICBpZiAoZXJyKSB7XG4gICAgaWYgKHRoaXMuX21heFJldHJpZXMpIGVyci5yZXRyaWVzID0gdGhpcy5fcmV0cmllcyAtIDE7XG4gICAgdGhpcy5lbWl0KCdlcnJvcicsIGVycik7XG4gIH1cblxuICBmbihlcnIsIHJlcyk7XG59O1xuXG4vKipcbiAqIEludm9rZSBjYWxsYmFjayB3aXRoIHgtZG9tYWluIGVycm9yLlxuICpcbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cblJlcXVlc3QucHJvdG90eXBlLmNyb3NzRG9tYWluRXJyb3IgPSBmdW5jdGlvbigpe1xuICB2YXIgZXJyID0gbmV3IEVycm9yKCdSZXF1ZXN0IGhhcyBiZWVuIHRlcm1pbmF0ZWRcXG5Qb3NzaWJsZSBjYXVzZXM6IHRoZSBuZXR3b3JrIGlzIG9mZmxpbmUsIE9yaWdpbiBpcyBub3QgYWxsb3dlZCBieSBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4sIHRoZSBwYWdlIGlzIGJlaW5nIHVubG9hZGVkLCBldGMuJyk7XG4gIGVyci5jcm9zc0RvbWFpbiA9IHRydWU7XG5cbiAgZXJyLnN0YXR1cyA9IHRoaXMuc3RhdHVzO1xuICBlcnIubWV0aG9kID0gdGhpcy5tZXRob2Q7XG4gIGVyci51cmwgPSB0aGlzLnVybDtcblxuICB0aGlzLmNhbGxiYWNrKGVycik7XG59O1xuXG4vLyBUaGlzIG9ubHkgd2FybnMsIGJlY2F1c2UgdGhlIHJlcXVlc3QgaXMgc3RpbGwgbGlrZWx5IHRvIHdvcmtcblJlcXVlc3QucHJvdG90eXBlLmJ1ZmZlciA9IFJlcXVlc3QucHJvdG90eXBlLmNhID0gUmVxdWVzdC5wcm90b3R5cGUuYWdlbnQgPSBmdW5jdGlvbigpe1xuICBjb25zb2xlLndhcm4oXCJUaGlzIGlzIG5vdCBzdXBwb3J0ZWQgaW4gYnJvd3NlciB2ZXJzaW9uIG9mIHN1cGVyYWdlbnRcIik7XG4gIHJldHVybiB0aGlzO1xufTtcblxuLy8gVGhpcyB0aHJvd3MsIGJlY2F1c2UgaXQgY2FuJ3Qgc2VuZC9yZWNlaXZlIGRhdGEgYXMgZXhwZWN0ZWRcblJlcXVlc3QucHJvdG90eXBlLnBpcGUgPSBSZXF1ZXN0LnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uKCl7XG4gIHRocm93IEVycm9yKFwiU3RyZWFtaW5nIGlzIG5vdCBzdXBwb3J0ZWQgaW4gYnJvd3NlciB2ZXJzaW9uIG9mIHN1cGVyYWdlbnRcIik7XG59O1xuXG4vKipcbiAqIENoZWNrIGlmIGBvYmpgIGlzIGEgaG9zdCBvYmplY3QsXG4gKiB3ZSBkb24ndCB3YW50IHRvIHNlcmlhbGl6ZSB0aGVzZSA6KVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuUmVxdWVzdC5wcm90b3R5cGUuX2lzSG9zdCA9IGZ1bmN0aW9uIF9pc0hvc3Qob2JqKSB7XG4gIC8vIE5hdGl2ZSBvYmplY3RzIHN0cmluZ2lmeSB0byBbb2JqZWN0IEZpbGVdLCBbb2JqZWN0IEJsb2JdLCBbb2JqZWN0IEZvcm1EYXRhXSwgZXRjLlxuICByZXR1cm4gb2JqICYmICdvYmplY3QnID09PSB0eXBlb2Ygb2JqICYmICFBcnJheS5pc0FycmF5KG9iaikgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iaikgIT09ICdbb2JqZWN0IE9iamVjdF0nO1xufVxuXG4vKipcbiAqIEluaXRpYXRlIHJlcXVlc3QsIGludm9raW5nIGNhbGxiYWNrIGBmbihyZXMpYFxuICogd2l0aCBhbiBpbnN0YW5jZW9mIGBSZXNwb25zZWAuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cbiAqIEByZXR1cm4ge1JlcXVlc3R9IGZvciBjaGFpbmluZ1xuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5SZXF1ZXN0LnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbihmbil7XG4gIGlmICh0aGlzLl9lbmRDYWxsZWQpIHtcbiAgICBjb25zb2xlLndhcm4oXCJXYXJuaW5nOiAuZW5kKCkgd2FzIGNhbGxlZCB0d2ljZS4gVGhpcyBpcyBub3Qgc3VwcG9ydGVkIGluIHN1cGVyYWdlbnRcIik7XG4gIH1cbiAgdGhpcy5fZW5kQ2FsbGVkID0gdHJ1ZTtcblxuICAvLyBzdG9yZSBjYWxsYmFja1xuICB0aGlzLl9jYWxsYmFjayA9IGZuIHx8IG5vb3A7XG5cbiAgLy8gcXVlcnlzdHJpbmdcbiAgdGhpcy5fZmluYWxpemVRdWVyeVN0cmluZygpO1xuXG4gIHJldHVybiB0aGlzLl9lbmQoKTtcbn07XG5cblJlcXVlc3QucHJvdG90eXBlLl9lbmQgPSBmdW5jdGlvbigpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB2YXIgeGhyID0gKHRoaXMueGhyID0gcmVxdWVzdC5nZXRYSFIoKSk7XG4gIHZhciBkYXRhID0gdGhpcy5fZm9ybURhdGEgfHwgdGhpcy5fZGF0YTtcblxuICB0aGlzLl9zZXRUaW1lb3V0cygpO1xuXG4gIC8vIHN0YXRlIGNoYW5nZVxuICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgcmVhZHlTdGF0ZSA9IHhoci5yZWFkeVN0YXRlO1xuICAgIGlmIChyZWFkeVN0YXRlID49IDIgJiYgc2VsZi5fcmVzcG9uc2VUaW1lb3V0VGltZXIpIHtcbiAgICAgIGNsZWFyVGltZW91dChzZWxmLl9yZXNwb25zZVRpbWVvdXRUaW1lcik7XG4gICAgfVxuICAgIGlmICg0ICE9IHJlYWR5U3RhdGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBJbiBJRTksIHJlYWRzIHRvIGFueSBwcm9wZXJ0eSAoZS5nLiBzdGF0dXMpIG9mZiBvZiBhbiBhYm9ydGVkIFhIUiB3aWxsXG4gICAgLy8gcmVzdWx0IGluIHRoZSBlcnJvciBcIkNvdWxkIG5vdCBjb21wbGV0ZSB0aGUgb3BlcmF0aW9uIGR1ZSB0byBlcnJvciBjMDBjMDIzZlwiXG4gICAgdmFyIHN0YXR1cztcbiAgICB0cnkgeyBzdGF0dXMgPSB4aHIuc3RhdHVzIH0gY2F0Y2goZSkgeyBzdGF0dXMgPSAwOyB9XG5cbiAgICBpZiAoIXN0YXR1cykge1xuICAgICAgaWYgKHNlbGYudGltZWRvdXQgfHwgc2VsZi5fYWJvcnRlZCkgcmV0dXJuO1xuICAgICAgcmV0dXJuIHNlbGYuY3Jvc3NEb21haW5FcnJvcigpO1xuICAgIH1cbiAgICBzZWxmLmVtaXQoJ2VuZCcpO1xuICB9O1xuXG4gIC8vIHByb2dyZXNzXG4gIHZhciBoYW5kbGVQcm9ncmVzcyA9IGZ1bmN0aW9uKGRpcmVjdGlvbiwgZSkge1xuICAgIGlmIChlLnRvdGFsID4gMCkge1xuICAgICAgZS5wZXJjZW50ID0gZS5sb2FkZWQgLyBlLnRvdGFsICogMTAwO1xuICAgIH1cbiAgICBlLmRpcmVjdGlvbiA9IGRpcmVjdGlvbjtcbiAgICBzZWxmLmVtaXQoJ3Byb2dyZXNzJywgZSk7XG4gIH07XG4gIGlmICh0aGlzLmhhc0xpc3RlbmVycygncHJvZ3Jlc3MnKSkge1xuICAgIHRyeSB7XG4gICAgICB4aHIub25wcm9ncmVzcyA9IGhhbmRsZVByb2dyZXNzLmJpbmQobnVsbCwgJ2Rvd25sb2FkJyk7XG4gICAgICBpZiAoeGhyLnVwbG9hZCkge1xuICAgICAgICB4aHIudXBsb2FkLm9ucHJvZ3Jlc3MgPSBoYW5kbGVQcm9ncmVzcy5iaW5kKG51bGwsICd1cGxvYWQnKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoKGUpIHtcbiAgICAgIC8vIEFjY2Vzc2luZyB4aHIudXBsb2FkIGZhaWxzIGluIElFIGZyb20gYSB3ZWIgd29ya2VyLCBzbyBqdXN0IHByZXRlbmQgaXQgZG9lc24ndCBleGlzdC5cbiAgICAgIC8vIFJlcG9ydGVkIGhlcmU6XG4gICAgICAvLyBodHRwczovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9JRS9mZWVkYmFjay9kZXRhaWxzLzgzNzI0NS94bWxodHRwcmVxdWVzdC11cGxvYWQtdGhyb3dzLWludmFsaWQtYXJndW1lbnQtd2hlbi11c2VkLWZyb20td2ViLXdvcmtlci1jb250ZXh0XG4gICAgfVxuICB9XG5cbiAgLy8gaW5pdGlhdGUgcmVxdWVzdFxuICB0cnkge1xuICAgIGlmICh0aGlzLnVzZXJuYW1lICYmIHRoaXMucGFzc3dvcmQpIHtcbiAgICAgIHhoci5vcGVuKHRoaXMubWV0aG9kLCB0aGlzLnVybCwgdHJ1ZSwgdGhpcy51c2VybmFtZSwgdGhpcy5wYXNzd29yZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHhoci5vcGVuKHRoaXMubWV0aG9kLCB0aGlzLnVybCwgdHJ1ZSk7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBzZWUgIzExNDlcbiAgICByZXR1cm4gdGhpcy5jYWxsYmFjayhlcnIpO1xuICB9XG5cbiAgLy8gQ09SU1xuICBpZiAodGhpcy5fd2l0aENyZWRlbnRpYWxzKSB4aHIud2l0aENyZWRlbnRpYWxzID0gdHJ1ZTtcblxuICAvLyBib2R5XG4gIGlmICghdGhpcy5fZm9ybURhdGEgJiYgJ0dFVCcgIT0gdGhpcy5tZXRob2QgJiYgJ0hFQUQnICE9IHRoaXMubWV0aG9kICYmICdzdHJpbmcnICE9IHR5cGVvZiBkYXRhICYmICF0aGlzLl9pc0hvc3QoZGF0YSkpIHtcbiAgICAvLyBzZXJpYWxpemUgc3R1ZmZcbiAgICB2YXIgY29udGVudFR5cGUgPSB0aGlzLl9oZWFkZXJbJ2NvbnRlbnQtdHlwZSddO1xuICAgIHZhciBzZXJpYWxpemUgPSB0aGlzLl9zZXJpYWxpemVyIHx8IHJlcXVlc3Quc2VyaWFsaXplW2NvbnRlbnRUeXBlID8gY29udGVudFR5cGUuc3BsaXQoJzsnKVswXSA6ICcnXTtcbiAgICBpZiAoIXNlcmlhbGl6ZSAmJiBpc0pTT04oY29udGVudFR5cGUpKSB7XG4gICAgICBzZXJpYWxpemUgPSByZXF1ZXN0LnNlcmlhbGl6ZVsnYXBwbGljYXRpb24vanNvbiddO1xuICAgIH1cbiAgICBpZiAoc2VyaWFsaXplKSBkYXRhID0gc2VyaWFsaXplKGRhdGEpO1xuICB9XG5cbiAgLy8gc2V0IGhlYWRlciBmaWVsZHNcbiAgZm9yICh2YXIgZmllbGQgaW4gdGhpcy5oZWFkZXIpIHtcbiAgICBpZiAobnVsbCA9PSB0aGlzLmhlYWRlcltmaWVsZF0pIGNvbnRpbnVlO1xuXG4gICAgaWYgKHRoaXMuaGVhZGVyLmhhc093blByb3BlcnR5KGZpZWxkKSlcbiAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKGZpZWxkLCB0aGlzLmhlYWRlcltmaWVsZF0pO1xuICB9XG5cbiAgaWYgKHRoaXMuX3Jlc3BvbnNlVHlwZSkge1xuICAgIHhoci5yZXNwb25zZVR5cGUgPSB0aGlzLl9yZXNwb25zZVR5cGU7XG4gIH1cblxuICAvLyBzZW5kIHN0dWZmXG4gIHRoaXMuZW1pdCgncmVxdWVzdCcsIHRoaXMpO1xuXG4gIC8vIElFMTEgeGhyLnNlbmQodW5kZWZpbmVkKSBzZW5kcyAndW5kZWZpbmVkJyBzdHJpbmcgYXMgUE9TVCBwYXlsb2FkIChpbnN0ZWFkIG9mIG5vdGhpbmcpXG4gIC8vIFdlIG5lZWQgbnVsbCBoZXJlIGlmIGRhdGEgaXMgdW5kZWZpbmVkXG4gIHhoci5zZW5kKHR5cGVvZiBkYXRhICE9PSAndW5kZWZpbmVkJyA/IGRhdGEgOiBudWxsKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5yZXF1ZXN0LmFnZW50ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgQWdlbnQoKTtcbn07XG5cbltcIkdFVFwiLCBcIlBPU1RcIiwgXCJPUFRJT05TXCIsIFwiUEFUQ0hcIiwgXCJQVVRcIiwgXCJERUxFVEVcIl0uZm9yRWFjaChmdW5jdGlvbihtZXRob2QpIHtcbiAgQWdlbnQucHJvdG90eXBlW21ldGhvZC50b0xvd2VyQ2FzZSgpXSA9IGZ1bmN0aW9uKHVybCwgZm4pIHtcbiAgICB2YXIgcmVxID0gbmV3IHJlcXVlc3QuUmVxdWVzdChtZXRob2QsIHVybCk7XG4gICAgdGhpcy5fc2V0RGVmYXVsdHMocmVxKTtcbiAgICBpZiAoZm4pIHtcbiAgICAgIHJlcS5lbmQoZm4pO1xuICAgIH1cbiAgICByZXR1cm4gcmVxO1xuICB9O1xufSk7XG5cbkFnZW50LnByb3RvdHlwZS5kZWwgPSBBZ2VudC5wcm90b3R5cGVbJ2RlbGV0ZSddO1xuXG4vKipcbiAqIEdFVCBgdXJsYCB3aXRoIG9wdGlvbmFsIGNhbGxiYWNrIGBmbihyZXMpYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXJsXG4gKiBAcGFyYW0ge01peGVkfEZ1bmN0aW9ufSBbZGF0YV0gb3IgZm5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtmbl1cbiAqIEByZXR1cm4ge1JlcXVlc3R9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbnJlcXVlc3QuZ2V0ID0gZnVuY3Rpb24odXJsLCBkYXRhLCBmbikge1xuICB2YXIgcmVxID0gcmVxdWVzdCgnR0VUJywgdXJsKTtcbiAgaWYgKCdmdW5jdGlvbicgPT0gdHlwZW9mIGRhdGEpIChmbiA9IGRhdGEpLCAoZGF0YSA9IG51bGwpO1xuICBpZiAoZGF0YSkgcmVxLnF1ZXJ5KGRhdGEpO1xuICBpZiAoZm4pIHJlcS5lbmQoZm4pO1xuICByZXR1cm4gcmVxO1xufTtcblxuLyoqXG4gKiBIRUFEIGB1cmxgIHdpdGggb3B0aW9uYWwgY2FsbGJhY2sgYGZuKHJlcylgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmxcbiAqIEBwYXJhbSB7TWl4ZWR8RnVuY3Rpb259IFtkYXRhXSBvciBmblxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2ZuXVxuICogQHJldHVybiB7UmVxdWVzdH1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxucmVxdWVzdC5oZWFkID0gZnVuY3Rpb24odXJsLCBkYXRhLCBmbikge1xuICB2YXIgcmVxID0gcmVxdWVzdCgnSEVBRCcsIHVybCk7XG4gIGlmICgnZnVuY3Rpb24nID09IHR5cGVvZiBkYXRhKSAoZm4gPSBkYXRhKSwgKGRhdGEgPSBudWxsKTtcbiAgaWYgKGRhdGEpIHJlcS5xdWVyeShkYXRhKTtcbiAgaWYgKGZuKSByZXEuZW5kKGZuKTtcbiAgcmV0dXJuIHJlcTtcbn07XG5cbi8qKlxuICogT1BUSU9OUyBxdWVyeSB0byBgdXJsYCB3aXRoIG9wdGlvbmFsIGNhbGxiYWNrIGBmbihyZXMpYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXJsXG4gKiBAcGFyYW0ge01peGVkfEZ1bmN0aW9ufSBbZGF0YV0gb3IgZm5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtmbl1cbiAqIEByZXR1cm4ge1JlcXVlc3R9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbnJlcXVlc3Qub3B0aW9ucyA9IGZ1bmN0aW9uKHVybCwgZGF0YSwgZm4pIHtcbiAgdmFyIHJlcSA9IHJlcXVlc3QoJ09QVElPTlMnLCB1cmwpO1xuICBpZiAoJ2Z1bmN0aW9uJyA9PSB0eXBlb2YgZGF0YSkgKGZuID0gZGF0YSksIChkYXRhID0gbnVsbCk7XG4gIGlmIChkYXRhKSByZXEuc2VuZChkYXRhKTtcbiAgaWYgKGZuKSByZXEuZW5kKGZuKTtcbiAgcmV0dXJuIHJlcTtcbn07XG5cbi8qKlxuICogREVMRVRFIGB1cmxgIHdpdGggb3B0aW9uYWwgYGRhdGFgIGFuZCBjYWxsYmFjayBgZm4ocmVzKWAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHVybFxuICogQHBhcmFtIHtNaXhlZH0gW2RhdGFdXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbZm5dXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBkZWwodXJsLCBkYXRhLCBmbikge1xuICB2YXIgcmVxID0gcmVxdWVzdCgnREVMRVRFJywgdXJsKTtcbiAgaWYgKCdmdW5jdGlvbicgPT0gdHlwZW9mIGRhdGEpIChmbiA9IGRhdGEpLCAoZGF0YSA9IG51bGwpO1xuICBpZiAoZGF0YSkgcmVxLnNlbmQoZGF0YSk7XG4gIGlmIChmbikgcmVxLmVuZChmbik7XG4gIHJldHVybiByZXE7XG59XG5cbnJlcXVlc3RbJ2RlbCddID0gZGVsO1xucmVxdWVzdFsnZGVsZXRlJ10gPSBkZWw7XG5cbi8qKlxuICogUEFUQ0ggYHVybGAgd2l0aCBvcHRpb25hbCBgZGF0YWAgYW5kIGNhbGxiYWNrIGBmbihyZXMpYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXJsXG4gKiBAcGFyYW0ge01peGVkfSBbZGF0YV1cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtmbl1cbiAqIEByZXR1cm4ge1JlcXVlc3R9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbnJlcXVlc3QucGF0Y2ggPSBmdW5jdGlvbih1cmwsIGRhdGEsIGZuKSB7XG4gIHZhciByZXEgPSByZXF1ZXN0KCdQQVRDSCcsIHVybCk7XG4gIGlmICgnZnVuY3Rpb24nID09IHR5cGVvZiBkYXRhKSAoZm4gPSBkYXRhKSwgKGRhdGEgPSBudWxsKTtcbiAgaWYgKGRhdGEpIHJlcS5zZW5kKGRhdGEpO1xuICBpZiAoZm4pIHJlcS5lbmQoZm4pO1xuICByZXR1cm4gcmVxO1xufTtcblxuLyoqXG4gKiBQT1NUIGB1cmxgIHdpdGggb3B0aW9uYWwgYGRhdGFgIGFuZCBjYWxsYmFjayBgZm4ocmVzKWAuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHVybFxuICogQHBhcmFtIHtNaXhlZH0gW2RhdGFdXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbZm5dXG4gKiBAcmV0dXJuIHtSZXF1ZXN0fVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5yZXF1ZXN0LnBvc3QgPSBmdW5jdGlvbih1cmwsIGRhdGEsIGZuKSB7XG4gIHZhciByZXEgPSByZXF1ZXN0KCdQT1NUJywgdXJsKTtcbiAgaWYgKCdmdW5jdGlvbicgPT0gdHlwZW9mIGRhdGEpIChmbiA9IGRhdGEpLCAoZGF0YSA9IG51bGwpO1xuICBpZiAoZGF0YSkgcmVxLnNlbmQoZGF0YSk7XG4gIGlmIChmbikgcmVxLmVuZChmbik7XG4gIHJldHVybiByZXE7XG59O1xuXG4vKipcbiAqIFBVVCBgdXJsYCB3aXRoIG9wdGlvbmFsIGBkYXRhYCBhbmQgY2FsbGJhY2sgYGZuKHJlcylgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmxcbiAqIEBwYXJhbSB7TWl4ZWR8RnVuY3Rpb259IFtkYXRhXSBvciBmblxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2ZuXVxuICogQHJldHVybiB7UmVxdWVzdH1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxucmVxdWVzdC5wdXQgPSBmdW5jdGlvbih1cmwsIGRhdGEsIGZuKSB7XG4gIHZhciByZXEgPSByZXF1ZXN0KCdQVVQnLCB1cmwpO1xuICBpZiAoJ2Z1bmN0aW9uJyA9PSB0eXBlb2YgZGF0YSkgKGZuID0gZGF0YSksIChkYXRhID0gbnVsbCk7XG4gIGlmIChkYXRhKSByZXEuc2VuZChkYXRhKTtcbiAgaWYgKGZuKSByZXEuZW5kKGZuKTtcbiAgcmV0dXJuIHJlcTtcbn07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nXHJcbmltcG9ydCByZXEgZnJvbSAnc3VwZXJhZ2VudCdcclxuaW1wb3J0IFRlc3RWYWx1ZSBmcm9tICcuL1Rlc3RWYWx1ZSdcclxuXHJcbmNsYXNzIFRlc3REaXYgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnR7XHJcblxyXG4gICAgLy9sZXQgZWU9MFxyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKXtcclxuICAgICAgICBzdXBlcihwcm9wcylcclxuICAgICAgICB0aGlzLnN0YXRlPXtcclxuICAgICAgICAgICAgYXNzOicwJyxcclxuICAgICAgICAgICAgYnNkOicwJyxcclxuICAgICAgICAgICAgY3NkOicwJ1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcblxyXG4gICAgY29tcG9uZW50V2lsbE1vdW50KClcclxuICAgIHtcclxuICAgICAgICAvLyAkLmFqYXgoe1xyXG4gICAgICAgIC8vICAgICB1cmwgOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9odW5ncnlcIixcclxuICAgICAgICAvLyAgICAgdHlwZTogXCJwb3N0XCIsXHJcblxyXG4gICAgICAgIC8vICAgICBzdWNjZXNzIDogZnVuY3Rpb24ocmVzcG9uc2VEYXRhKXtcclxuICAgICAgICAvLyAgICAgICAgIC8vJChcIiNhamF4XCIpLnJlbW92ZSgpO1xyXG4gICAgICAgIC8vICAgICAgICAgZGF0YT1yZXNwb25zZURhdGE7XHJcbiAgICAgICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcclxuICAgICAgICAvLyAgICAgIH0sXHJcbiAgICAgICAgLy8gICAgICBlcnJvcjpmdW5jdGlvbihyZXF1ZXN0LHN0YXR1cyxlcnJvcilcclxuICAgICAgICAvLyAgICAgIHtcclxuICAgICAgICAvLyAgICAgICAgICBjb25zb2xlLmxvZyhyZXF1ZXN0KTtcclxuICAgICAgICAvLyAgICAgICAgICBjb25zb2xlLmxvZyhzdGF0dXMpO1xyXG4gICAgICAgIC8vICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgICAvLyAgICAgIH1cclxuICAgICAgICAvLyB9KTtcclxuICAgICAgICByZXEuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvaHVuZ3J5JykuZW5kKChlcnIscmVzKT0+e3RoaXMubG9hZEpTT04oZXJyLHJlcyl9KVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBsb2FkSlNPTihlcnIscmVzKVxyXG4gICAge1xyXG4gICAgICAgIGlmKGVycilcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi7Jik66WYXCIpXHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuXHJcblxyXG5cclxuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKVxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMudGV4dClcclxuICAgICAgICAgICAgY29uc29sZS5sb2coSlNPTi5wYXJzZShyZXMudGV4dCkpXHJcblxyXG4gICAgICAgICAgICBsZXQgd2V3ZT1KU09OLnBhcnNlKHJlcy50ZXh0KVxyXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKHdld2UuYXMpXHJcblxyXG4gICAgICAgICAgICAvLyB0aGlzLnNldFN0YXRlKFxyXG4gICAgICAgICAgICAvLyAgICAge2FzOkpTT04ucGFyc2UocmVzLnRleHQpLmFzcyxcclxuICAgICAgICAgICAgLy8gICAgIGJzOkpTT04ucGFyc2UocmVzLnRleHQpLmJzLFxyXG4gICAgICAgICAgICAvLyAgICAgY3M6SlNPTi5wYXJzZShyZXMudGV4dCkuY3N9XHJcbiAgICAgICAgICAgIC8vIClcclxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7YXNzOndld2VbMF0uVVNFUl9JRCxcclxuICAgICAgICAgICAgICAgIGJzZDp3ZXdlWzFdLlVTRVJfSUQsXHJcbiAgICAgICAgICAgICAgICBjc2Q6d2V3ZVsyXS5VU0VSX0lEfSlcclxuICAgICAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV3UHJvKVxyXG4gICAge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwi7JWI64WVIOuCnCDtlITroa1cIilcclxuICAgICAgICAvL3RoaXMuc2V0U3RhdGUoe3NkOm5ld1Byby52YWx1ZX0pXHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCl7XHJcblxyXG4gICAgICAgIC8vbGV0IHNkPXRoaXMuc3RhdGUuc2RcclxuICAgICAgICAvL2NvbnNvbGUubG9nKHRoaXMucHJvcHMudmFsdWUpXHJcbiAgICAgICAgY29uc3QgYXNzPXRoaXMuc3RhdGUuYXNzXHJcbiAgICAgICAgY29uc3QgYnM9dGhpcy5zdGF0ZS5ic2RcclxuICAgICAgICBjb25zdCBjcz10aGlzLnN0YXRlLmNzZFxyXG4gICAgICAgIFxyXG4gICAgICAgIHJldHVybig8ZGl2IGNsYXNzPVwicm93XCI+XHJcbiAgICAgICAgICAgIDxUZXN0VmFsdWUgdmFsdWU9e2Fzc30gY2xhc3M9J2NhcmQgdGV4dC13aGl0ZSBiZy1wcmltYXJ5IG8taGlkZGVuIGgtMTAwJyAvPlxyXG4gICAgICAgICAgICA8VGVzdFZhbHVlIHZhbHVlPXtic30gY2xhc3M9J2NhcmQgdGV4dC13aGl0ZSBiZy13YXJuaW5nIG8taGlkZGVuIGgtMTAwJyAvPlxyXG4gICAgICAgICAgICA8VGVzdFZhbHVlIHZhbHVlPXtjc30gY2xhc3M9J2NhcmQgdGV4dC13aGl0ZSBiZy1zdWNjZXNzIG8taGlkZGVuIGgtMTAwJyAvPlxyXG4gICAgICAgICAgICA8VGVzdFZhbHVlIHZhbHVlPSc5OCcgY2xhc3M9J2NhcmQgdGV4dC13aGl0ZSBiZy1kYW5nZXIgby1oaWRkZW4gaC0xMDAnIC8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIClcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgVGVzdERpdiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBAcGFyYW0ge0RPTUVsZW1lbnR9IG5vZGUgaW5wdXQvdGV4dGFyZWEgdG8gZm9jdXNcbiAqL1xuXG5mdW5jdGlvbiBmb2N1c05vZGUobm9kZSkge1xuICAvLyBJRTggY2FuIHRocm93IFwiQ2FuJ3QgbW92ZSBmb2N1cyB0byB0aGUgY29udHJvbCBiZWNhdXNlIGl0IGlzIGludmlzaWJsZSxcbiAgLy8gbm90IGVuYWJsZWQsIG9yIG9mIGEgdHlwZSB0aGF0IGRvZXMgbm90IGFjY2VwdCB0aGUgZm9jdXMuXCIgZm9yIGFsbCBraW5kcyBvZlxuICAvLyByZWFzb25zIHRoYXQgYXJlIHRvbyBleHBlbnNpdmUgYW5kIGZyYWdpbGUgdG8gdGVzdC5cbiAgdHJ5IHtcbiAgICBub2RlLmZvY3VzKCk7XG4gIH0gY2F0Y2ggKGUpIHt9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZm9jdXNOb2RlOyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHsqfSBvYmplY3QgVGhlIG9iamVjdCB0byBjaGVjay5cbiAqIEByZXR1cm4ge2Jvb2xlYW59IFdoZXRoZXIgb3Igbm90IHRoZSBvYmplY3QgaXMgYSBET00gbm9kZS5cbiAqL1xuZnVuY3Rpb24gaXNOb2RlKG9iamVjdCkge1xuICB2YXIgZG9jID0gb2JqZWN0ID8gb2JqZWN0Lm93bmVyRG9jdW1lbnQgfHwgb2JqZWN0IDogZG9jdW1lbnQ7XG4gIHZhciBkZWZhdWx0VmlldyA9IGRvYy5kZWZhdWx0VmlldyB8fCB3aW5kb3c7XG4gIHJldHVybiAhIShvYmplY3QgJiYgKHR5cGVvZiBkZWZhdWx0Vmlldy5Ob2RlID09PSAnZnVuY3Rpb24nID8gb2JqZWN0IGluc3RhbmNlb2YgZGVmYXVsdFZpZXcuTm9kZSA6IHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmIHR5cGVvZiBvYmplY3Qubm9kZVR5cGUgPT09ICdudW1iZXInICYmIHR5cGVvZiBvYmplY3Qubm9kZU5hbWUgPT09ICdzdHJpbmcnKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNOb2RlOyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbnZhciBpc05vZGUgPSByZXF1aXJlKCcuL2lzTm9kZScpO1xuXG4vKipcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2hlY2suXG4gKiBAcmV0dXJuIHtib29sZWFufSBXaGV0aGVyIG9yIG5vdCB0aGUgb2JqZWN0IGlzIGEgRE9NIHRleHQgbm9kZS5cbiAqL1xuZnVuY3Rpb24gaXNUZXh0Tm9kZShvYmplY3QpIHtcbiAgcmV0dXJuIGlzTm9kZShvYmplY3QpICYmIG9iamVjdC5ub2RlVHlwZSA9PSAzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzVGV4dE5vZGU7IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIFxuICovXG5cbnZhciBpc1RleHROb2RlID0gcmVxdWlyZSgnLi9pc1RleHROb2RlJyk7XG5cbi8qZXNsaW50LWRpc2FibGUgbm8tYml0d2lzZSAqL1xuXG4vKipcbiAqIENoZWNrcyBpZiBhIGdpdmVuIERPTSBub2RlIGNvbnRhaW5zIG9yIGlzIGFub3RoZXIgRE9NIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGNvbnRhaW5zTm9kZShvdXRlck5vZGUsIGlubmVyTm9kZSkge1xuICBpZiAoIW91dGVyTm9kZSB8fCAhaW5uZXJOb2RlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2UgaWYgKG91dGVyTm9kZSA9PT0gaW5uZXJOb2RlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAoaXNUZXh0Tm9kZShvdXRlck5vZGUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2UgaWYgKGlzVGV4dE5vZGUoaW5uZXJOb2RlKSkge1xuICAgIHJldHVybiBjb250YWluc05vZGUob3V0ZXJOb2RlLCBpbm5lck5vZGUucGFyZW50Tm9kZSk7XG4gIH0gZWxzZSBpZiAoJ2NvbnRhaW5zJyBpbiBvdXRlck5vZGUpIHtcbiAgICByZXR1cm4gb3V0ZXJOb2RlLmNvbnRhaW5zKGlubmVyTm9kZSk7XG4gIH0gZWxzZSBpZiAob3V0ZXJOb2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKSB7XG4gICAgcmV0dXJuICEhKG91dGVyTm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihpbm5lck5vZGUpICYgMTYpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRhaW5zTm9kZTsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKiBcbiAqL1xuXG4vKmVzbGludC1kaXNhYmxlIG5vLXNlbGYtY29tcGFyZSAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogaW5saW5lZCBPYmplY3QuaXMgcG9seWZpbGwgdG8gYXZvaWQgcmVxdWlyaW5nIGNvbnN1bWVycyBzaGlwIHRoZWlyIG93blxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L2lzXG4gKi9cbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgLy8gU2FtZVZhbHVlIGFsZ29yaXRobVxuICBpZiAoeCA9PT0geSkge1xuICAgIC8vIFN0ZXBzIDEtNSwgNy0xMFxuICAgIC8vIFN0ZXBzIDYuYi02LmU6ICswICE9IC0wXG4gICAgLy8gQWRkZWQgdGhlIG5vbnplcm8geSBjaGVjayB0byBtYWtlIEZsb3cgaGFwcHksIGJ1dCBpdCBpcyByZWR1bmRhbnRcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICAvLyBTdGVwIDYuYTogTmFOID09IE5hTlxuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuLyoqXG4gKiBQZXJmb3JtcyBlcXVhbGl0eSBieSBpdGVyYXRpbmcgdGhyb3VnaCBrZXlzIG9uIGFuIG9iamVjdCBhbmQgcmV0dXJuaW5nIGZhbHNlXG4gKiB3aGVuIGFueSBrZXkgaGFzIHZhbHVlcyB3aGljaCBhcmUgbm90IHN0cmljdGx5IGVxdWFsIGJldHdlZW4gdGhlIGFyZ3VtZW50cy5cbiAqIFJldHVybnMgdHJ1ZSB3aGVuIHRoZSB2YWx1ZXMgb2YgYWxsIGtleXMgYXJlIHN0cmljdGx5IGVxdWFsLlxuICovXG5mdW5jdGlvbiBzaGFsbG93RXF1YWwob2JqQSwgb2JqQikge1xuICBpZiAoaXMob2JqQSwgb2JqQikpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb2JqQSAhPT0gJ29iamVjdCcgfHwgb2JqQSA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqQiAhPT0gJ29iamVjdCcgfHwgb2JqQiA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBrZXlzQSA9IE9iamVjdC5rZXlzKG9iakEpO1xuICB2YXIga2V5c0IgPSBPYmplY3Qua2V5cyhvYmpCKTtcblxuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBUZXN0IGZvciBBJ3Mga2V5cyBkaWZmZXJlbnQgZnJvbSBCLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXNBLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iakIsIGtleXNBW2ldKSB8fCAhaXMob2JqQVtrZXlzQVtpXV0sIG9iakJba2V5c0FbaV1dKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNoYWxsb3dFcXVhbDsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBmYi13d3cvdHlwZW9mLXVuZGVmaW5lZCAqL1xuXG4vKipcbiAqIFNhbWUgYXMgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBidXQgd3JhcHMgaW4gYSB0cnktY2F0Y2ggYmxvY2suIEluIElFIGl0IGlzXG4gKiBub3Qgc2FmZSB0byBjYWxsIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgaWYgdGhlcmUgaXMgbm90aGluZyBmb2N1c2VkLlxuICpcbiAqIFRoZSBhY3RpdmVFbGVtZW50IHdpbGwgYmUgbnVsbCBvbmx5IGlmIHRoZSBkb2N1bWVudCBvciBkb2N1bWVudCBib2R5IGlzIG5vdFxuICogeWV0IGRlZmluZWQuXG4gKlxuICogQHBhcmFtIHs/RE9NRG9jdW1lbnR9IGRvYyBEZWZhdWx0cyB0byBjdXJyZW50IGRvY3VtZW50LlxuICogQHJldHVybiB7P0RPTUVsZW1lbnR9XG4gKi9cbmZ1bmN0aW9uIGdldEFjdGl2ZUVsZW1lbnQoZG9jKSAvKj9ET01FbGVtZW50Ki97XG4gIGRvYyA9IGRvYyB8fCAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDogdW5kZWZpbmVkKTtcbiAgaWYgKHR5cGVvZiBkb2MgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgdHJ5IHtcbiAgICByZXR1cm4gZG9jLmFjdGl2ZUVsZW1lbnQgfHwgZG9jLmJvZHk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZG9jLmJvZHk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRBY3RpdmVFbGVtZW50OyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbnZhciBlbXB0eUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9lbXB0eUZ1bmN0aW9uJyk7XG5cbi8qKlxuICogVXBzdHJlYW0gdmVyc2lvbiBvZiBldmVudCBsaXN0ZW5lci4gRG9lcyBub3QgdGFrZSBpbnRvIGFjY291bnQgc3BlY2lmaWNcbiAqIG5hdHVyZSBvZiBwbGF0Zm9ybS5cbiAqL1xudmFyIEV2ZW50TGlzdGVuZXIgPSB7XG4gIC8qKlxuICAgKiBMaXN0ZW4gdG8gRE9NIGV2ZW50cyBkdXJpbmcgdGhlIGJ1YmJsZSBwaGFzZS5cbiAgICpcbiAgICogQHBhcmFtIHtET01FdmVudFRhcmdldH0gdGFyZ2V0IERPTSBlbGVtZW50IHRvIHJlZ2lzdGVyIGxpc3RlbmVyIG9uLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRUeXBlIEV2ZW50IHR5cGUsIGUuZy4gJ2NsaWNrJyBvciAnbW91c2VvdmVyJy5cbiAgICogQHBhcmFtIHtmdW5jdGlvbn0gY2FsbGJhY2sgQ2FsbGJhY2sgZnVuY3Rpb24uXG4gICAqIEByZXR1cm4ge29iamVjdH0gT2JqZWN0IHdpdGggYSBgcmVtb3ZlYCBtZXRob2QuXG4gICAqL1xuICBsaXN0ZW46IGZ1bmN0aW9uIGxpc3Rlbih0YXJnZXQsIGV2ZW50VHlwZSwgY2FsbGJhY2spIHtcbiAgICBpZiAodGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgIHRhcmdldC5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgY2FsbGJhY2ssIGZhbHNlKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgY2FsbGJhY2ssIGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9IGVsc2UgaWYgKHRhcmdldC5hdHRhY2hFdmVudCkge1xuICAgICAgdGFyZ2V0LmF0dGFjaEV2ZW50KCdvbicgKyBldmVudFR5cGUsIGNhbGxiYWNrKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgICAgIHRhcmdldC5kZXRhY2hFdmVudCgnb24nICsgZXZlbnRUeXBlLCBjYWxsYmFjayk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiBMaXN0ZW4gdG8gRE9NIGV2ZW50cyBkdXJpbmcgdGhlIGNhcHR1cmUgcGhhc2UuXG4gICAqXG4gICAqIEBwYXJhbSB7RE9NRXZlbnRUYXJnZXR9IHRhcmdldCBET00gZWxlbWVudCB0byByZWdpc3RlciBsaXN0ZW5lciBvbi5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50VHlwZSBFdmVudCB0eXBlLCBlLmcuICdjbGljaycgb3IgJ21vdXNlb3ZlcicuXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrIENhbGxiYWNrIGZ1bmN0aW9uLlxuICAgKiBAcmV0dXJuIHtvYmplY3R9IE9iamVjdCB3aXRoIGEgYHJlbW92ZWAgbWV0aG9kLlxuICAgKi9cbiAgY2FwdHVyZTogZnVuY3Rpb24gY2FwdHVyZSh0YXJnZXQsIGV2ZW50VHlwZSwgY2FsbGJhY2spIHtcbiAgICBpZiAodGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgIHRhcmdldC5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgY2FsbGJhY2ssIHRydWUpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBjYWxsYmFjaywgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0F0dGVtcHRlZCB0byBsaXN0ZW4gdG8gZXZlbnRzIGR1cmluZyB0aGUgY2FwdHVyZSBwaGFzZSBvbiBhICcgKyAnYnJvd3NlciB0aGF0IGRvZXMgbm90IHN1cHBvcnQgdGhlIGNhcHR1cmUgcGhhc2UuIFlvdXIgYXBwbGljYXRpb24gJyArICd3aWxsIG5vdCByZWNlaXZlIHNvbWUgZXZlbnRzLicpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVtb3ZlOiBlbXB0eUZ1bmN0aW9uXG4gICAgICB9O1xuICAgIH1cbiAgfSxcblxuICByZWdpc3RlckRlZmF1bHQ6IGZ1bmN0aW9uIHJlZ2lzdGVyRGVmYXVsdCgpIHt9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50TGlzdGVuZXI7IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcblxuLyoqXG4gKiBTaW1wbGUsIGxpZ2h0d2VpZ2h0IG1vZHVsZSBhc3Npc3Rpbmcgd2l0aCB0aGUgZGV0ZWN0aW9uIGFuZCBjb250ZXh0IG9mXG4gKiBXb3JrZXIuIEhlbHBzIGF2b2lkIGNpcmN1bGFyIGRlcGVuZGVuY2llcyBhbmQgYWxsb3dzIGNvZGUgdG8gcmVhc29uIGFib3V0XG4gKiB3aGV0aGVyIG9yIG5vdCB0aGV5IGFyZSBpbiBhIFdvcmtlciwgZXZlbiBpZiB0aGV5IG5ldmVyIGluY2x1ZGUgdGhlIG1haW5cbiAqIGBSZWFjdFdvcmtlcmAgZGVwZW5kZW5jeS5cbiAqL1xudmFyIEV4ZWN1dGlvbkVudmlyb25tZW50ID0ge1xuXG4gIGNhblVzZURPTTogY2FuVXNlRE9NLFxuXG4gIGNhblVzZVdvcmtlcnM6IHR5cGVvZiBXb3JrZXIgIT09ICd1bmRlZmluZWQnLFxuXG4gIGNhblVzZUV2ZW50TGlzdGVuZXJzOiBjYW5Vc2VET00gJiYgISEod2luZG93LmFkZEV2ZW50TGlzdGVuZXIgfHwgd2luZG93LmF0dGFjaEV2ZW50KSxcblxuICBjYW5Vc2VWaWV3cG9ydDogY2FuVXNlRE9NICYmICEhd2luZG93LnNjcmVlbixcblxuICBpc0luV29ya2VyOiAhY2FuVXNlRE9NIC8vIEZvciBub3csIHRoaXMgaXMgdHJ1ZSAtIG1pZ2h0IGNoYW5nZSBpbiB0aGUgZnV0dXJlLlxuXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEV4ZWN1dGlvbkVudmlyb25tZW50OyIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMi4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLGw9cmVxdWlyZShcImZianMvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50XCIpLEI9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksQz1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlGdW5jdGlvblwiKSxiYT1yZXF1aXJlKFwiZmJqcy9saWIvRXZlbnRMaXN0ZW5lclwiKSxkYT1yZXF1aXJlKFwiZmJqcy9saWIvZ2V0QWN0aXZlRWxlbWVudFwiKSxlYT1yZXF1aXJlKFwiZmJqcy9saWIvc2hhbGxvd0VxdWFsXCIpLGZhPXJlcXVpcmUoXCJmYmpzL2xpYi9jb250YWluc05vZGVcIiksaWE9cmVxdWlyZShcImZianMvbGliL2ZvY3VzTm9kZVwiKSxEPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eU9iamVjdFwiKTtcbmZ1bmN0aW9uIEUoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IGh0dHA6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50XFx4M2RcIithLGQ9MDtkPGI7ZCsrKWMrPVwiXFx4MjZhcmdzW11cXHgzZFwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7Yj1FcnJvcihjK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7Yi5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwiO2IuZnJhbWVzVG9Qb3A9MTt0aHJvdyBiO31hYT92b2lkIDA6RShcIjIyN1wiKTtcbnZhciBvYT17Y2hpbGRyZW46ITAsZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6ITAsZGVmYXVsdFZhbHVlOiEwLGRlZmF1bHRDaGVja2VkOiEwLGlubmVySFRNTDohMCxzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmc6ITAsc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nOiEwLHN0eWxlOiEwfTtmdW5jdGlvbiBwYShhLGIpe3JldHVybihhJmIpPT09Yn1cbnZhciB0YT17TVVTVF9VU0VfUFJPUEVSVFk6MSxIQVNfQk9PTEVBTl9WQUxVRTo0LEhBU19OVU1FUklDX1ZBTFVFOjgsSEFTX1BPU0lUSVZFX05VTUVSSUNfVkFMVUU6MjQsSEFTX09WRVJMT0FERURfQk9PTEVBTl9WQUxVRTozMixIQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUU6NjQsaW5qZWN0RE9NUHJvcGVydHlDb25maWc6ZnVuY3Rpb24oYSl7dmFyIGI9dGEsYz1hLlByb3BlcnRpZXN8fHt9LGQ9YS5ET01BdHRyaWJ1dGVOYW1lc3BhY2VzfHx7fSxlPWEuRE9NQXR0cmlidXRlTmFtZXN8fHt9O2E9YS5ET01NdXRhdGlvbk1ldGhvZHN8fHt9O2Zvcih2YXIgZiBpbiBjKXt1YS5oYXNPd25Qcm9wZXJ0eShmKT9FKFwiNDhcIixmKTp2b2lkIDA7dmFyIGc9Zi50b0xvd2VyQ2FzZSgpLGg9Y1tmXTtnPXthdHRyaWJ1dGVOYW1lOmcsYXR0cmlidXRlTmFtZXNwYWNlOm51bGwscHJvcGVydHlOYW1lOmYsbXV0YXRpb25NZXRob2Q6bnVsbCxtdXN0VXNlUHJvcGVydHk6cGEoaCxiLk1VU1RfVVNFX1BST1BFUlRZKSxcbmhhc0Jvb2xlYW5WYWx1ZTpwYShoLGIuSEFTX0JPT0xFQU5fVkFMVUUpLGhhc051bWVyaWNWYWx1ZTpwYShoLGIuSEFTX05VTUVSSUNfVkFMVUUpLGhhc1Bvc2l0aXZlTnVtZXJpY1ZhbHVlOnBhKGgsYi5IQVNfUE9TSVRJVkVfTlVNRVJJQ19WQUxVRSksaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZTpwYShoLGIuSEFTX09WRVJMT0FERURfQk9PTEVBTl9WQUxVRSksaGFzU3RyaW5nQm9vbGVhblZhbHVlOnBhKGgsYi5IQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUUpfTsxPj1nLmhhc0Jvb2xlYW5WYWx1ZStnLmhhc051bWVyaWNWYWx1ZStnLmhhc092ZXJsb2FkZWRCb29sZWFuVmFsdWU/dm9pZCAwOkUoXCI1MFwiLGYpO2UuaGFzT3duUHJvcGVydHkoZikmJihnLmF0dHJpYnV0ZU5hbWU9ZVtmXSk7ZC5oYXNPd25Qcm9wZXJ0eShmKSYmKGcuYXR0cmlidXRlTmFtZXNwYWNlPWRbZl0pO2EuaGFzT3duUHJvcGVydHkoZikmJihnLm11dGF0aW9uTWV0aG9kPWFbZl0pO3VhW2ZdPWd9fX0sdWE9e307XG5mdW5jdGlvbiB2YShhLGIpe2lmKG9hLmhhc093blByb3BlcnR5KGEpfHwyPGEubGVuZ3RoJiYoXCJvXCI9PT1hWzBdfHxcIk9cIj09PWFbMF0pJiYoXCJuXCI9PT1hWzFdfHxcIk5cIj09PWFbMV0pKXJldHVybiExO2lmKG51bGw9PT1iKXJldHVybiEwO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImJvb2xlYW5cIjpyZXR1cm4gb2EuaGFzT3duUHJvcGVydHkoYSk/YT0hMDooYj13YShhKSk/YT1iLmhhc0Jvb2xlYW5WYWx1ZXx8Yi5oYXNTdHJpbmdCb29sZWFuVmFsdWV8fGIuaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZTooYT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KSxhPVwiZGF0YS1cIj09PWF8fFwiYXJpYS1cIj09PWEpLGE7Y2FzZSBcInVuZGVmaW5lZFwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm9iamVjdFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHdhKGEpe3JldHVybiB1YS5oYXNPd25Qcm9wZXJ0eShhKT91YVthXTpudWxsfVxudmFyIHhhPXRhLHlhPXhhLk1VU1RfVVNFX1BST1BFUlRZLEs9eGEuSEFTX0JPT0xFQU5fVkFMVUUsemE9eGEuSEFTX05VTUVSSUNfVkFMVUUsQWE9eGEuSEFTX1BPU0lUSVZFX05VTUVSSUNfVkFMVUUsQmE9eGEuSEFTX09WRVJMT0FERURfQk9PTEVBTl9WQUxVRSxDYT14YS5IQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUUsRGE9e1Byb3BlcnRpZXM6e2FsbG93RnVsbFNjcmVlbjpLLGFzeW5jOkssYXV0b0ZvY3VzOkssYXV0b1BsYXk6SyxjYXB0dXJlOkJhLGNoZWNrZWQ6eWF8Syxjb2xzOkFhLGNvbnRlbnRFZGl0YWJsZTpDYSxjb250cm9sczpLLFwiZGVmYXVsdFwiOkssZGVmZXI6SyxkaXNhYmxlZDpLLGRvd25sb2FkOkJhLGRyYWdnYWJsZTpDYSxmb3JtTm9WYWxpZGF0ZTpLLGhpZGRlbjpLLGxvb3A6SyxtdWx0aXBsZTp5YXxLLG11dGVkOnlhfEssbm9WYWxpZGF0ZTpLLG9wZW46SyxwbGF5c0lubGluZTpLLHJlYWRPbmx5OksscmVxdWlyZWQ6SyxyZXZlcnNlZDpLLHJvd3M6QWEscm93U3Bhbjp6YSxcbnNjb3BlZDpLLHNlYW1sZXNzOkssc2VsZWN0ZWQ6eWF8SyxzaXplOkFhLHN0YXJ0OnphLHNwYW46QWEsc3BlbGxDaGVjazpDYSxzdHlsZTowLHRhYkluZGV4OjAsaXRlbVNjb3BlOkssYWNjZXB0Q2hhcnNldDowLGNsYXNzTmFtZTowLGh0bWxGb3I6MCxodHRwRXF1aXY6MCx2YWx1ZTpDYX0sRE9NQXR0cmlidXRlTmFtZXM6e2FjY2VwdENoYXJzZXQ6XCJhY2NlcHQtY2hhcnNldFwiLGNsYXNzTmFtZTpcImNsYXNzXCIsaHRtbEZvcjpcImZvclwiLGh0dHBFcXVpdjpcImh0dHAtZXF1aXZcIn0sRE9NTXV0YXRpb25NZXRob2RzOnt2YWx1ZTpmdW5jdGlvbihhLGIpe2lmKG51bGw9PWIpcmV0dXJuIGEucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7XCJudW1iZXJcIiE9PWEudHlwZXx8ITE9PT1hLmhhc0F0dHJpYnV0ZShcInZhbHVlXCIpP2Euc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK2IpOmEudmFsaWRpdHkmJiFhLnZhbGlkaXR5LmJhZElucHV0JiZhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEmJlxuYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrYil9fX0sRWE9eGEuSEFTX1NUUklOR19CT09MRUFOX1ZBTFVFLE09e3hsaW5rOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLHhtbDpcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwifSxHYT17UHJvcGVydGllczp7YXV0b1JldmVyc2U6RWEsZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZDpFYSxwcmVzZXJ2ZUFscGhhOkVhfSxET01BdHRyaWJ1dGVOYW1lczp7YXV0b1JldmVyc2U6XCJhdXRvUmV2ZXJzZVwiLGV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWQ6XCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIscHJlc2VydmVBbHBoYTpcInByZXNlcnZlQWxwaGFcIn0sRE9NQXR0cmlidXRlTmFtZXNwYWNlczp7eGxpbmtBY3R1YXRlOk0ueGxpbmsseGxpbmtBcmNyb2xlOk0ueGxpbmsseGxpbmtIcmVmOk0ueGxpbmsseGxpbmtSb2xlOk0ueGxpbmsseGxpbmtTaG93Ok0ueGxpbmsseGxpbmtUaXRsZTpNLnhsaW5rLHhsaW5rVHlwZTpNLnhsaW5rLFxueG1sQmFzZTpNLnhtbCx4bWxMYW5nOk0ueG1sLHhtbFNwYWNlOk0ueG1sfX0sSGE9L1tcXC1cXDpdKFthLXpdKS9nO2Z1bmN0aW9uIElhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHgtaGVpZ2h0IHhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlIHhtbDpiYXNlIHhtbG5zOnhsaW5rIHhtbDpsYW5nIHhtbDpzcGFjZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShIYSxcbklhKTtHYS5Qcm9wZXJ0aWVzW2JdPTA7R2EuRE9NQXR0cmlidXRlTmFtZXNbYl09YX0pO3hhLmluamVjdERPTVByb3BlcnR5Q29uZmlnKERhKTt4YS5pbmplY3RET01Qcm9wZXJ0eUNvbmZpZyhHYSk7XG52YXIgUD17X2NhdWdodEVycm9yOm51bGwsX2hhc0NhdWdodEVycm9yOiExLF9yZXRocm93RXJyb3I6bnVsbCxfaGFzUmV0aHJvd0Vycm9yOiExLGluamVjdGlvbjp7aW5qZWN0RXJyb3JVdGlsczpmdW5jdGlvbihhKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYS5pbnZva2VHdWFyZGVkQ2FsbGJhY2s/RShcIjE5N1wiKTp2b2lkIDA7SmE9YS5pbnZva2VHdWFyZGVkQ2FsbGJhY2t9fSxpbnZva2VHdWFyZGVkQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGspe0phLmFwcGx5KFAsYXJndW1lbnRzKX0saW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yOmZ1bmN0aW9uKGEsYixjLGQsZSxmLGcsaCxrKXtQLmludm9rZUd1YXJkZWRDYWxsYmFjay5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoUC5oYXNDYXVnaHRFcnJvcigpKXt2YXIgcT1QLmNsZWFyQ2F1Z2h0RXJyb3IoKTtQLl9oYXNSZXRocm93RXJyb3J8fChQLl9oYXNSZXRocm93RXJyb3I9ITAsUC5fcmV0aHJvd0Vycm9yPVxucSl9fSxyZXRocm93Q2F1Z2h0RXJyb3I6ZnVuY3Rpb24oKXtyZXR1cm4gS2EuYXBwbHkoUCxhcmd1bWVudHMpfSxoYXNDYXVnaHRFcnJvcjpmdW5jdGlvbigpe3JldHVybiBQLl9oYXNDYXVnaHRFcnJvcn0sY2xlYXJDYXVnaHRFcnJvcjpmdW5jdGlvbigpe2lmKFAuX2hhc0NhdWdodEVycm9yKXt2YXIgYT1QLl9jYXVnaHRFcnJvcjtQLl9jYXVnaHRFcnJvcj1udWxsO1AuX2hhc0NhdWdodEVycm9yPSExO3JldHVybiBhfUUoXCIxOThcIil9fTtmdW5jdGlvbiBKYShhLGIsYyxkLGUsZixnLGgsayl7UC5faGFzQ2F1Z2h0RXJyb3I9ITE7UC5fY2F1Z2h0RXJyb3I9bnVsbDt2YXIgcT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxxKX1jYXRjaCh2KXtQLl9jYXVnaHRFcnJvcj12LFAuX2hhc0NhdWdodEVycm9yPSEwfX1cbmZ1bmN0aW9uIEthKCl7aWYoUC5faGFzUmV0aHJvd0Vycm9yKXt2YXIgYT1QLl9yZXRocm93RXJyb3I7UC5fcmV0aHJvd0Vycm9yPW51bGw7UC5faGFzUmV0aHJvd0Vycm9yPSExO3Rocm93IGE7fX12YXIgTGE9bnVsbCxNYT17fTtcbmZ1bmN0aW9uIE5hKCl7aWYoTGEpZm9yKHZhciBhIGluIE1hKXt2YXIgYj1NYVthXSxjPUxhLmluZGV4T2YoYSk7LTE8Yz92b2lkIDA6RShcIjk2XCIsYSk7aWYoIU9hW2NdKXtiLmV4dHJhY3RFdmVudHM/dm9pZCAwOkUoXCI5N1wiLGEpO09hW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7UGEuaGFzT3duUHJvcGVydHkoaCk/RShcIjk5XCIsaCk6dm9pZCAwO1BhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJlFhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhRYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2U/dm9pZCAwOkUoXCI5OFwiLGQsYSl9fX19XG5mdW5jdGlvbiBRYShhLGIsYyl7UmFbYV0/RShcIjEwMFwiLGEpOnZvaWQgMDtSYVthXT1iO1NhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIE9hPVtdLFBhPXt9LFJhPXt9LFNhPXt9O2Z1bmN0aW9uIFRhKGEpe0xhP0UoXCIxMDFcIik6dm9pZCAwO0xhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO05hKCl9ZnVuY3Rpb24gVWEoYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107TWEuaGFzT3duUHJvcGVydHkoYykmJk1hW2NdPT09ZHx8KE1hW2NdP0UoXCIxMDJcIixjKTp2b2lkIDAsTWFbY109ZCxiPSEwKX1iJiZOYSgpfVxudmFyIFZhPU9iamVjdC5mcmVlemUoe3BsdWdpbnM6T2EsZXZlbnROYW1lRGlzcGF0Y2hDb25maWdzOlBhLHJlZ2lzdHJhdGlvbk5hbWVNb2R1bGVzOlJhLHJlZ2lzdHJhdGlvbk5hbWVEZXBlbmRlbmNpZXM6U2EscG9zc2libGVSZWdpc3RyYXRpb25OYW1lczpudWxsLGluamVjdEV2ZW50UGx1Z2luT3JkZXI6VGEsaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOlVhfSksV2E9bnVsbCxYYT1udWxsLFlhPW51bGw7ZnVuY3Rpb24gWmEoYSxiLGMsZCl7Yj1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1ZYShkKTtQLmludm9rZUd1YXJkZWRDYWxsYmFja0FuZENhdGNoRmlyc3RFcnJvcihiLGMsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gJGEoYSxiKXtudWxsPT1iP0UoXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfWZ1bmN0aW9uIGFiKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBiYj1udWxsO1xuZnVuY3Rpb24gY2IoYSxiKXtpZihhKXt2YXIgYz1hLl9kaXNwYXRjaExpc3RlbmVycyxkPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYykpZm9yKHZhciBlPTA7ZTxjLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtlKyspWmEoYSxiLGNbZV0sZFtlXSk7ZWxzZSBjJiZaYShhLGIsYyxkKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBkYihhKXtyZXR1cm4gY2IoYSwhMCl9ZnVuY3Rpb24gZ2IoYSl7cmV0dXJuIGNiKGEsITEpfXZhciBoYj17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpUYSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6VWF9O1xuZnVuY3Rpb24gaWIoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD1XYShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz9FKFwiMjMxXCIsYix0eXBlb2YgYyk6dm9pZCAwO1xucmV0dXJuIGN9ZnVuY3Rpb24gamIoYSxiLGMsZCl7Zm9yKHZhciBlLGY9MDtmPE9hLmxlbmd0aDtmKyspe3ZhciBnPU9hW2ZdO2cmJihnPWcuZXh0cmFjdEV2ZW50cyhhLGIsYyxkKSkmJihlPSRhKGUsZykpfXJldHVybiBlfWZ1bmN0aW9uIGtiKGEpe2EmJihiYj0kYShiYixhKSl9ZnVuY3Rpb24gbGIoYSl7dmFyIGI9YmI7YmI9bnVsbDtiJiYoYT9hYihiLGRiKTphYihiLGdiKSxiYj9FKFwiOTVcIik6dm9pZCAwLFAucmV0aHJvd0NhdWdodEVycm9yKCkpfXZhciBtYj1PYmplY3QuZnJlZXplKHtpbmplY3Rpb246aGIsZ2V0TGlzdGVuZXI6aWIsZXh0cmFjdEV2ZW50czpqYixlbnF1ZXVlRXZlbnRzOmtiLHByb2Nlc3NFdmVudFF1ZXVlOmxifSksbmI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksUT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK25iLG9iPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrbmI7XG5mdW5jdGlvbiBwYihhKXtpZihhW1FdKXJldHVybiBhW1FdO2Zvcih2YXIgYj1bXTshYVtRXTspaWYoYi5wdXNoKGEpLGEucGFyZW50Tm9kZSlhPWEucGFyZW50Tm9kZTtlbHNlIHJldHVybiBudWxsO3ZhciBjPXZvaWQgMCxkPWFbUV07aWYoNT09PWQudGFnfHw2PT09ZC50YWcpcmV0dXJuIGQ7Zm9yKDthJiYoZD1hW1FdKTthPWIucG9wKCkpYz1kO3JldHVybiBjfWZ1bmN0aW9uIHFiKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTtFKFwiMzNcIil9ZnVuY3Rpb24gcmIoYSl7cmV0dXJuIGFbb2JdfHxudWxsfVxudmFyIHNiPU9iamVjdC5mcmVlemUoe3ByZWNhY2hlRmliZXJOb2RlOmZ1bmN0aW9uKGEsYil7YltRXT1hfSxnZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZTpwYixnZXRJbnN0YW5jZUZyb21Ob2RlOmZ1bmN0aW9uKGEpe2E9YVtRXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfSxnZXROb2RlRnJvbUluc3RhbmNlOnFiLGdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGU6cmIsdXBkYXRlRmliZXJQcm9wczpmdW5jdGlvbihhLGIpe2Fbb2JdPWJ9fSk7ZnVuY3Rpb24gdGIoYSl7ZG8gYT1hW1wicmV0dXJuXCJdO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIHViKGEsYixjKXtmb3IodmFyIGQ9W107YTspZC5wdXNoKGEpLGE9dGIoYSk7Zm9yKGE9ZC5sZW5ndGg7MDxhLS07KWIoZFthXSxcImNhcHR1cmVkXCIsYyk7Zm9yKGE9MDthPGQubGVuZ3RoO2ErKyliKGRbYV0sXCJidWJibGVkXCIsYyl9XG5mdW5jdGlvbiB2YihhLGIsYyl7aWYoYj1pYihhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPSRhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPSRhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfWZ1bmN0aW9uIHdiKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMmJnViKGEuX3RhcmdldEluc3QsdmIsYSl9ZnVuY3Rpb24geGIoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7dmFyIGI9YS5fdGFyZ2V0SW5zdDtiPWI/dGIoYik6bnVsbDt1YihiLHZiLGEpfX1cbmZ1bmN0aW9uIHliKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPWliKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz0kYShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz0kYShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gemIoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZ5YihhLl90YXJnZXRJbnN0LG51bGwsYSl9ZnVuY3Rpb24gQWIoYSl7YWIoYSx3Yil9XG5mdW5jdGlvbiBCYihhLGIsYyxkKXtpZihjJiZkKWE6e3ZhciBlPWM7Zm9yKHZhciBmPWQsZz0wLGg9ZTtoO2g9dGIoaCkpZysrO2g9MDtmb3IodmFyIGs9ZjtrO2s9dGIoaykpaCsrO2Zvcig7MDxnLWg7KWU9dGIoZSksZy0tO2Zvcig7MDxoLWc7KWY9dGIoZiksaC0tO2Zvcig7Zy0tOyl7aWYoZT09PWZ8fGU9PT1mLmFsdGVybmF0ZSlicmVhayBhO2U9dGIoZSk7Zj10YihmKX1lPW51bGx9ZWxzZSBlPW51bGw7Zj1lO2ZvcihlPVtdO2MmJmMhPT1mOyl7Zz1jLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PWYpYnJlYWs7ZS5wdXNoKGMpO2M9dGIoYyl9Zm9yKGM9W107ZCYmZCE9PWY7KXtnPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09ZilicmVhaztjLnB1c2goZCk7ZD10YihkKX1mb3IoZD0wO2Q8ZS5sZW5ndGg7ZCsrKXliKGVbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGE9Yy5sZW5ndGg7MDxhLS07KXliKGNbYV0sXCJjYXB0dXJlZFwiLGIpfVxudmFyIENiPU9iamVjdC5mcmVlemUoe2FjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXM6QWIsYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlc1NraXBUYXJnZXQ6ZnVuY3Rpb24oYSl7YWIoYSx4Yil9LGFjY3VtdWxhdGVFbnRlckxlYXZlRGlzcGF0Y2hlczpCYixhY2N1bXVsYXRlRGlyZWN0RGlzcGF0Y2hlczpmdW5jdGlvbihhKXthYihhLHpiKX19KSxEYj1udWxsO2Z1bmN0aW9uIEViKCl7IURiJiZsLmNhblVzZURPTSYmKERiPVwidGV4dENvbnRlbnRcImluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudD9cInRleHRDb250ZW50XCI6XCJpbm5lclRleHRcIik7cmV0dXJuIERifXZhciBTPXtfcm9vdDpudWxsLF9zdGFydFRleHQ6bnVsbCxfZmFsbGJhY2tUZXh0Om51bGx9O1xuZnVuY3Rpb24gRmIoKXtpZihTLl9mYWxsYmFja1RleHQpcmV0dXJuIFMuX2ZhbGxiYWNrVGV4dDt2YXIgYSxiPVMuX3N0YXJ0VGV4dCxjPWIubGVuZ3RoLGQsZT1HYigpLGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7Uy5fZmFsbGJhY2tUZXh0PWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCk7cmV0dXJuIFMuX2ZhbGxiYWNrVGV4dH1mdW5jdGlvbiBHYigpe3JldHVyblwidmFsdWVcImluIFMuX3Jvb3Q/Uy5fcm9vdC52YWx1ZTpTLl9yb290W0ViKCldfVxudmFyIEhiPVwiZGlzcGF0Y2hDb25maWcgX3RhcmdldEluc3QgbmF0aXZlRXZlbnQgaXNEZWZhdWx0UHJldmVudGVkIGlzUHJvcGFnYXRpb25TdG9wcGVkIF9kaXNwYXRjaExpc3RlbmVycyBfZGlzcGF0Y2hJbnN0YW5jZXNcIi5zcGxpdChcIiBcIiksSWI9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OkMudGhhdFJldHVybnNOdWxsLGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5mdW5jdGlvbiBUKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9DLnRoYXRSZXR1cm5zVHJ1ZTpDLnRoYXRSZXR1cm5zRmFsc2U7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1DLnRoYXRSZXR1cm5zRmFsc2U7cmV0dXJuIHRoaXN9XG5CKFQucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9Qy50aGF0UmV0dXJuc1RydWUpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Qy50aGF0UmV0dXJuc1RydWUpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9Qy50aGF0UmV0dXJuc1RydWV9LGlzUGVyc2lzdGVudDpDLnRoYXRSZXR1cm5zRmFsc2UsXG5kZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDtmb3IoYT0wO2E8SGIubGVuZ3RoO2ErKyl0aGlzW0hiW2FdXT1udWxsfX0pO1QuSW50ZXJmYWNlPUliO1QuYXVnbWVudENsYXNzPWZ1bmN0aW9uKGEsYil7ZnVuY3Rpb24gYygpe31jLnByb3RvdHlwZT10aGlzLnByb3RvdHlwZTt2YXIgZD1uZXcgYztCKGQsYS5wcm90b3R5cGUpO2EucHJvdG90eXBlPWQ7YS5wcm90b3R5cGUuY29uc3RydWN0b3I9YTthLkludGVyZmFjZT1CKHt9LHRoaXMuSW50ZXJmYWNlLGIpO2EuYXVnbWVudENsYXNzPXRoaXMuYXVnbWVudENsYXNzO0piKGEpfTtKYihUKTtmdW5jdGlvbiBLYihhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1cbmZ1bmN0aW9uIExiKGEpe2EgaW5zdGFuY2VvZiB0aGlzP3ZvaWQgMDpFKFwiMjIzXCIpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBKYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1LYjthLnJlbGVhc2U9TGJ9ZnVuY3Rpb24gTWIoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVQuYXVnbWVudENsYXNzKE1iLHtkYXRhOm51bGx9KTtmdW5jdGlvbiBOYihhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9VC5hdWdtZW50Q2xhc3MoTmIse2RhdGE6bnVsbH0pO3ZhciBQYj1bOSwxMywyNywzMl0sVmI9bC5jYW5Vc2VET00mJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LFdiPW51bGw7bC5jYW5Vc2VET00mJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKFdiPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7dmFyIFhiO1xuaWYoWGI9bC5jYW5Vc2VET00mJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFXYil7dmFyIFliPXdpbmRvdy5vcGVyYTtYYj0hKFwib2JqZWN0XCI9PT10eXBlb2YgWWImJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBZYi52ZXJzaW9uJiYxMj49cGFyc2VJbnQoWWIudmVyc2lvbigpLDEwKSl9XG52YXIgWmI9WGIsJGI9bC5jYW5Vc2VET00mJighVmJ8fFdiJiY4PFdiJiYxMT49V2IpLGFjPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLGJjPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1widG9wQ29tcG9zaXRpb25FbmRcIixcInRvcEtleVByZXNzXCIsXCJ0b3BUZXh0SW5wdXRcIixcInRvcFBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENvbXBvc2l0aW9uRW5kIHRvcEtleURvd24gdG9wS2V5UHJlc3MgdG9wS2V5VXAgdG9wTW91c2VEb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ29tcG9zaXRpb25TdGFydCB0b3BLZXlEb3duIHRvcEtleVByZXNzIHRvcEtleVVwIHRvcE1vdXNlRG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwidG9wQmx1ciB0b3BDb21wb3NpdGlvblVwZGF0ZSB0b3BLZXlEb3duIHRvcEtleVByZXNzIHRvcEtleVVwIHRvcE1vdXNlRG93blwiLnNwbGl0KFwiIFwiKX19LGNjPSExO1xuZnVuY3Rpb24gZGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcInRvcEtleVVwXCI6cmV0dXJuLTEhPT1QYi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcInRvcEtleURvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJ0b3BLZXlQcmVzc1wiOmNhc2UgXCJ0b3BNb3VzZURvd25cIjpjYXNlIFwidG9wQmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGVjKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGZjPSExO2Z1bmN0aW9uIGdjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BDb21wb3NpdGlvbkVuZFwiOnJldHVybiBlYyhiKTtjYXNlIFwidG9wS2V5UHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7Y2M9ITA7cmV0dXJuIGFjO2Nhc2UgXCJ0b3BUZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PWFjJiZjYz9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBoYyhhLGIpe2lmKGZjKXJldHVyblwidG9wQ29tcG9zaXRpb25FbmRcIj09PWF8fCFWYiYmZGMoYSxiKT8oYT1GYigpLFMuX3Jvb3Q9bnVsbCxTLl9zdGFydFRleHQ9bnVsbCxTLl9mYWxsYmFja1RleHQ9bnVsbCxmYz0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwidG9wUGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwidG9wS2V5UHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwidG9wQ29tcG9zaXRpb25FbmRcIjpyZXR1cm4gJGI/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgaWM9e2V2ZW50VHlwZXM6YmMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZTtpZihWYiliOntzd2l0Y2goYSl7Y2FzZSBcInRvcENvbXBvc2l0aW9uU3RhcnRcIjp2YXIgZj1iYy5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcInRvcENvbXBvc2l0aW9uRW5kXCI6Zj1iYy5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJ0b3BDb21wb3NpdGlvblVwZGF0ZVwiOmY9YmMuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1mPXZvaWQgMH1lbHNlIGZjP2RjKGEsYykmJihmPWJjLmNvbXBvc2l0aW9uRW5kKTpcInRvcEtleURvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGY9YmMuY29tcG9zaXRpb25TdGFydCk7Zj8oJGImJihmY3x8ZiE9PWJjLmNvbXBvc2l0aW9uU3RhcnQ/Zj09PWJjLmNvbXBvc2l0aW9uRW5kJiZmYyYmKGU9RmIoKSk6KFMuX3Jvb3Q9ZCxTLl9zdGFydFRleHQ9R2IoKSxmYz0hMCkpLGY9TWIuZ2V0UG9vbGVkKGYsYixjLGQpLGU/Zi5kYXRhPVxuZTooZT1lYyhjKSxudWxsIT09ZSYmKGYuZGF0YT1lKSksQWIoZiksZT1mKTplPW51bGw7KGE9WmI/Z2MoYSxjKTpoYyhhLGMpKT8oYj1OYi5nZXRQb29sZWQoYmMuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLEFiKGIpKTpiPW51bGw7cmV0dXJuW2UsYl19fSxqYz1udWxsLGtjPW51bGwsbGM9bnVsbDtmdW5jdGlvbiBtYyhhKXtpZihhPVhhKGEpKXtqYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGpjLnJlc3RvcmVDb250cm9sbGVkU3RhdGU/dm9pZCAwOkUoXCIxOTRcIik7dmFyIGI9V2EoYS5zdGF0ZU5vZGUpO2pjLnJlc3RvcmVDb250cm9sbGVkU3RhdGUoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX12YXIgbmM9e2luamVjdEZpYmVyQ29udHJvbGxlZEhvc3RDb21wb25lbnQ6ZnVuY3Rpb24oYSl7amM9YX19O2Z1bmN0aW9uIG9jKGEpe2tjP2xjP2xjLnB1c2goYSk6bGM9W2FdOmtjPWF9XG5mdW5jdGlvbiBwYygpe2lmKGtjKXt2YXIgYT1rYyxiPWxjO2xjPWtjPW51bGw7bWMoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKW1jKGJbYV0pfX12YXIgcWM9T2JqZWN0LmZyZWV6ZSh7aW5qZWN0aW9uOm5jLGVucXVldWVTdGF0ZVJlc3RvcmU6b2MscmVzdG9yZVN0YXRlSWZOZWVkZWQ6cGN9KTtmdW5jdGlvbiByYyhhLGIpe3JldHVybiBhKGIpfXZhciBzYz0hMTtmdW5jdGlvbiB0YyhhLGIpe2lmKHNjKXJldHVybiByYyhhLGIpO3NjPSEwO3RyeXtyZXR1cm4gcmMoYSxiKX1maW5hbGx5e3NjPSExLHBjKCl9fXZhciB1Yz17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtcbmZ1bmN0aW9uIHZjKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhdWNbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIHdjKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX12YXIgeGM7bC5jYW5Vc2VET00mJih4Yz1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbiYmZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uaGFzRmVhdHVyZSYmITAhPT1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlKFwiXCIsXCJcIikpO1xuZnVuY3Rpb24geWMoYSxiKXtpZighbC5jYW5Vc2VET018fGImJiEoXCJhZGRFdmVudExpc3RlbmVyXCJpbiBkb2N1bWVudCkpcmV0dXJuITE7Yj1cIm9uXCIrYTt2YXIgYz1iIGluIGRvY3VtZW50O2N8fChjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYy5zZXRBdHRyaWJ1dGUoYixcInJldHVybjtcIiksYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY1tiXSk7IWMmJnhjJiZcIndoZWVsXCI9PT1hJiYoYz1kb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlKFwiRXZlbnRzLndoZWVsXCIsXCIzLjBcIikpO3JldHVybiBjfWZ1bmN0aW9uIHpjKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBBYyhhKXt2YXIgYj16YyhhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldClyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGUsY29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBjLmdldC5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Yy5zZXQuY2FsbCh0aGlzLGEpfX0pLHtnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPW51bGw7ZGVsZXRlIGFbYl19fX1cbmZ1bmN0aW9uIEJjKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1BYyhhKSl9ZnVuY3Rpb24gQ2MoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPXpjKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9dmFyIERjPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENoYW5nZSB0b3BDbGljayB0b3BGb2N1cyB0b3BJbnB1dCB0b3BLZXlEb3duIHRvcEtleVVwIHRvcFNlbGVjdGlvbkNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O1xuZnVuY3Rpb24gRWMoYSxiLGMpe2E9VC5nZXRQb29sZWQoRGMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtvYyhjKTtBYihhKTtyZXR1cm4gYX12YXIgRmM9bnVsbCxHYz1udWxsO2Z1bmN0aW9uIEhjKGEpe2tiKGEpO2xiKCExKX1mdW5jdGlvbiBJYyhhKXt2YXIgYj1xYihhKTtpZihDYyhiKSlyZXR1cm4gYX1mdW5jdGlvbiBKYyhhLGIpe2lmKFwidG9wQ2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBLYz0hMTtsLmNhblVzZURPTSYmKEtjPXljKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO2Z1bmN0aW9uIExjKCl7RmMmJihGYy5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixNYyksR2M9RmM9bnVsbCl9ZnVuY3Rpb24gTWMoYSl7XCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJkljKEdjKSYmKGE9RWMoR2MsYSx3YyhhKSksdGMoSGMsYSkpfVxuZnVuY3Rpb24gTmMoYSxiLGMpe1widG9wRm9jdXNcIj09PWE/KExjKCksRmM9YixHYz1jLEZjLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLE1jKSk6XCJ0b3BCbHVyXCI9PT1hJiZMYygpfWZ1bmN0aW9uIE9jKGEpe2lmKFwidG9wU2VsZWN0aW9uQ2hhbmdlXCI9PT1hfHxcInRvcEtleVVwXCI9PT1hfHxcInRvcEtleURvd25cIj09PWEpcmV0dXJuIEljKEdjKX1mdW5jdGlvbiBQYyhhLGIpe2lmKFwidG9wQ2xpY2tcIj09PWEpcmV0dXJuIEljKGIpfWZ1bmN0aW9uICRjKGEsYil7aWYoXCJ0b3BJbnB1dFwiPT09YXx8XCJ0b3BDaGFuZ2VcIj09PWEpcmV0dXJuIEljKGIpfVxudmFyIGFkPXtldmVudFR5cGVzOkRjLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6S2MsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP3FiKGIpOndpbmRvdyxmPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09Znx8XCJpbnB1dFwiPT09ZiYmXCJmaWxlXCI9PT1lLnR5cGUpdmFyIGc9SmM7ZWxzZSBpZih2YyhlKSlpZihLYylnPSRjO2Vsc2V7Zz1PYzt2YXIgaD1OY31lbHNlIGY9ZS5ub2RlTmFtZSwhZnx8XCJpbnB1dFwiIT09Zi50b0xvd2VyQ2FzZSgpfHxcImNoZWNrYm94XCIhPT1lLnR5cGUmJlwicmFkaW9cIiE9PWUudHlwZXx8KGc9UGMpO2lmKGcmJihnPWcoYSxiKSkpcmV0dXJuIEVjKGcsYyxkKTtoJiZoKGEsZSxiKTtcInRvcEJsdXJcIj09PWEmJm51bGwhPWImJihhPWIuX3dyYXBwZXJTdGF0ZXx8ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiYoYT1cIlwiK2UudmFsdWUsZS5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKSE9PVxuYSYmZS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLGEpKX19O2Z1bmN0aW9uIGJkKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1ULmF1Z21lbnRDbGFzcyhiZCx7dmlldzpudWxsLGRldGFpbDpudWxsfSk7dmFyIGNkPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBkZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPWNkW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gZWQoKXtyZXR1cm4gZGR9ZnVuY3Rpb24gZmQoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVxuYmQuYXVnbWVudENsYXNzKGZkLHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmVkLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfX0pO1xudmFyIGdkPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcInRvcE1vdXNlT3V0XCIsXCJ0b3BNb3VzZU92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1widG9wTW91c2VPdXRcIixcInRvcE1vdXNlT3ZlclwiXX19LGhkPXtldmVudFR5cGVzOmdkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7aWYoXCJ0b3BNb3VzZU92ZXJcIj09PWEmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHxcInRvcE1vdXNlT3V0XCIhPT1hJiZcInRvcE1vdXNlT3ZlclwiIT09YSlyZXR1cm4gbnVsbDt2YXIgZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fGUucGFyZW50V2luZG93OndpbmRvdztcInRvcE1vdXNlT3V0XCI9PT1hPyhhPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT9wYihiKTpudWxsKTphPW51bGw7aWYoYT09PVxuYilyZXR1cm4gbnVsbDt2YXIgZj1udWxsPT1hP2U6cWIoYSk7ZT1udWxsPT1iP2U6cWIoYik7dmFyIGc9ZmQuZ2V0UG9vbGVkKGdkLm1vdXNlTGVhdmUsYSxjLGQpO2cudHlwZT1cIm1vdXNlbGVhdmVcIjtnLnRhcmdldD1mO2cucmVsYXRlZFRhcmdldD1lO2M9ZmQuZ2V0UG9vbGVkKGdkLm1vdXNlRW50ZXIsYixjLGQpO2MudHlwZT1cIm1vdXNlZW50ZXJcIjtjLnRhcmdldD1lO2MucmVsYXRlZFRhcmdldD1mO0JiKGcsYyxhLGIpO3JldHVybltnLGNdfX0saWQ9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQuUmVhY3RDdXJyZW50T3duZXI7ZnVuY3Rpb24gamQoYSl7YT1hLnR5cGU7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhP2E6XCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5kaXNwbGF5TmFtZXx8YS5uYW1lOm51bGx9XG5mdW5jdGlvbiBrZChhKXt2YXIgYj1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7YltcInJldHVyblwiXTspYj1iW1wicmV0dXJuXCJdO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2JbXCJyZXR1cm5cIl07KWlmKGI9YltcInJldHVyblwiXSwwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxfXJldHVybiAzPT09Yi50YWc/MjozfWZ1bmN0aW9uIGxkKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/Mj09PWtkKGEpOiExfWZ1bmN0aW9uIG1kKGEpezIhPT1rZChhKT9FKFwiMTg4XCIpOnZvaWQgMH1cbmZ1bmN0aW9uIG5kKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXJldHVybiBiPWtkKGEpLDM9PT1iP0UoXCIxODhcIik6dm9pZCAwLDE9PT1iP251bGw6YTtmb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Y1tcInJldHVyblwiXSxmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gbWQoZSksYTtpZihnPT09ZClyZXR1cm4gbWQoZSksYjtnPWcuc2libGluZ31FKFwiMTg4XCIpfWlmKGNbXCJyZXR1cm5cIl0hPT1kW1wicmV0dXJuXCJdKWM9ZSxkPWY7ZWxzZXtnPSExO2Zvcih2YXIgaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31nP1xudm9pZCAwOkUoXCIxODlcIil9fWMuYWx0ZXJuYXRlIT09ZD9FKFwiMTkwXCIpOnZvaWQgMH0zIT09Yy50YWc/RShcIjE4OFwiKTp2b2lkIDA7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBvZChhKXthPW5kKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZFtcInJldHVyblwiXT1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiW1wicmV0dXJuXCJdfHxiW1wicmV0dXJuXCJdPT09YSlyZXR1cm4gbnVsbDtiPWJbXCJyZXR1cm5cIl19Yi5zaWJsaW5nW1wicmV0dXJuXCJdPWJbXCJyZXR1cm5cIl07Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gcGQoYSl7YT1uZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkJiY0IT09Yi50YWcpYi5jaGlsZFtcInJldHVyblwiXT1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiW1wicmV0dXJuXCJdfHxiW1wicmV0dXJuXCJdPT09YSlyZXR1cm4gbnVsbDtiPWJbXCJyZXR1cm5cIl19Yi5zaWJsaW5nW1wicmV0dXJuXCJdPWJbXCJyZXR1cm5cIl07Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfXZhciBxZD1bXTtcbmZ1bmN0aW9uIHJkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdDtkb3tpZighYil7YS5hbmNlc3RvcnMucHVzaChiKTticmVha312YXIgYztmb3IoYz1iO2NbXCJyZXR1cm5cIl07KWM9Y1tcInJldHVyblwiXTtjPTMhPT1jLnRhZz9udWxsOmMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWMpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChiKTtiPXBiKGMpfXdoaWxlKGIpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKWI9YS5hbmNlc3RvcnNbY10sc2QoYS50b3BMZXZlbFR5cGUsYixhLm5hdGl2ZUV2ZW50LHdjKGEubmF0aXZlRXZlbnQpKX12YXIgdGQ9ITAsc2Q9dm9pZCAwO2Z1bmN0aW9uIHVkKGEpe3RkPSEhYX1mdW5jdGlvbiBVKGEsYixjKXtyZXR1cm4gYz9iYS5saXN0ZW4oYyxiLHZkLmJpbmQobnVsbCxhKSk6bnVsbH1mdW5jdGlvbiB3ZChhLGIsYyl7cmV0dXJuIGM/YmEuY2FwdHVyZShjLGIsdmQuYmluZChudWxsLGEpKTpudWxsfVxuZnVuY3Rpb24gdmQoYSxiKXtpZih0ZCl7dmFyIGM9d2MoYik7Yz1wYihjKTtudWxsPT09Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBjLnRhZ3x8Mj09PWtkKGMpfHwoYz1udWxsKTtpZihxZC5sZW5ndGgpe3ZhciBkPXFkLnBvcCgpO2QudG9wTGV2ZWxUeXBlPWE7ZC5uYXRpdmVFdmVudD1iO2QudGFyZ2V0SW5zdD1jO2E9ZH1lbHNlIGE9e3RvcExldmVsVHlwZTphLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX07dHJ5e3RjKHJkLGEpfWZpbmFsbHl7YS50b3BMZXZlbFR5cGU9bnVsbCxhLm5hdGl2ZUV2ZW50PW51bGwsYS50YXJnZXRJbnN0PW51bGwsYS5hbmNlc3RvcnMubGVuZ3RoPTAsMTA+cWQubGVuZ3RoJiZxZC5wdXNoKGEpfX19XG52YXIgeGQ9T2JqZWN0LmZyZWV6ZSh7Z2V0IF9lbmFibGVkKCl7cmV0dXJuIHRkfSxnZXQgX2hhbmRsZVRvcExldmVsKCl7cmV0dXJuIHNkfSxzZXRIYW5kbGVUb3BMZXZlbDpmdW5jdGlvbihhKXtzZD1hfSxzZXRFbmFibGVkOnVkLGlzRW5hYmxlZDpmdW5jdGlvbigpe3JldHVybiB0ZH0sdHJhcEJ1YmJsZWRFdmVudDpVLHRyYXBDYXB0dXJlZEV2ZW50OndkLGRpc3BhdGNoRXZlbnQ6dmR9KTtmdW5jdGlvbiB5ZChhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO2NbXCJtc1wiK2FdPVwiTVNcIitiO2NbXCJPXCIrYV09XCJvXCIrYi50b0xvd2VyQ2FzZSgpO3JldHVybiBjfVxudmFyIHpkPXthbmltYXRpb25lbmQ6eWQoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246eWQoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDp5ZChcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDp5ZChcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LEFkPXt9LEJkPXt9O2wuY2FuVXNlRE9NJiYoQmQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgemQuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgemQuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgemQuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgemQudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtcbmZ1bmN0aW9uIENkKGEpe2lmKEFkW2FdKXJldHVybiBBZFthXTtpZighemRbYV0pcmV0dXJuIGE7dmFyIGI9emRbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gQmQpcmV0dXJuIEFkW2FdPWJbY107cmV0dXJuXCJcIn1cbnZhciBEZD17dG9wQWJvcnQ6XCJhYm9ydFwiLHRvcEFuaW1hdGlvbkVuZDpDZChcImFuaW1hdGlvbmVuZFwiKXx8XCJhbmltYXRpb25lbmRcIix0b3BBbmltYXRpb25JdGVyYXRpb246Q2QoXCJhbmltYXRpb25pdGVyYXRpb25cIil8fFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIsdG9wQW5pbWF0aW9uU3RhcnQ6Q2QoXCJhbmltYXRpb25zdGFydFwiKXx8XCJhbmltYXRpb25zdGFydFwiLHRvcEJsdXI6XCJibHVyXCIsdG9wQ2FuY2VsOlwiY2FuY2VsXCIsdG9wQ2FuUGxheTpcImNhbnBsYXlcIix0b3BDYW5QbGF5VGhyb3VnaDpcImNhbnBsYXl0aHJvdWdoXCIsdG9wQ2hhbmdlOlwiY2hhbmdlXCIsdG9wQ2xpY2s6XCJjbGlja1wiLHRvcENsb3NlOlwiY2xvc2VcIix0b3BDb21wb3NpdGlvbkVuZDpcImNvbXBvc2l0aW9uZW5kXCIsdG9wQ29tcG9zaXRpb25TdGFydDpcImNvbXBvc2l0aW9uc3RhcnRcIix0b3BDb21wb3NpdGlvblVwZGF0ZTpcImNvbXBvc2l0aW9udXBkYXRlXCIsdG9wQ29udGV4dE1lbnU6XCJjb250ZXh0bWVudVwiLHRvcENvcHk6XCJjb3B5XCIsXG50b3BDdXQ6XCJjdXRcIix0b3BEb3VibGVDbGljazpcImRibGNsaWNrXCIsdG9wRHJhZzpcImRyYWdcIix0b3BEcmFnRW5kOlwiZHJhZ2VuZFwiLHRvcERyYWdFbnRlcjpcImRyYWdlbnRlclwiLHRvcERyYWdFeGl0OlwiZHJhZ2V4aXRcIix0b3BEcmFnTGVhdmU6XCJkcmFnbGVhdmVcIix0b3BEcmFnT3ZlcjpcImRyYWdvdmVyXCIsdG9wRHJhZ1N0YXJ0OlwiZHJhZ3N0YXJ0XCIsdG9wRHJvcDpcImRyb3BcIix0b3BEdXJhdGlvbkNoYW5nZTpcImR1cmF0aW9uY2hhbmdlXCIsdG9wRW1wdGllZDpcImVtcHRpZWRcIix0b3BFbmNyeXB0ZWQ6XCJlbmNyeXB0ZWRcIix0b3BFbmRlZDpcImVuZGVkXCIsdG9wRXJyb3I6XCJlcnJvclwiLHRvcEZvY3VzOlwiZm9jdXNcIix0b3BJbnB1dDpcImlucHV0XCIsdG9wS2V5RG93bjpcImtleWRvd25cIix0b3BLZXlQcmVzczpcImtleXByZXNzXCIsdG9wS2V5VXA6XCJrZXl1cFwiLHRvcExvYWRlZERhdGE6XCJsb2FkZWRkYXRhXCIsdG9wTG9hZDpcImxvYWRcIix0b3BMb2FkZWRNZXRhZGF0YTpcImxvYWRlZG1ldGFkYXRhXCIsdG9wTG9hZFN0YXJ0OlwibG9hZHN0YXJ0XCIsXG50b3BNb3VzZURvd246XCJtb3VzZWRvd25cIix0b3BNb3VzZU1vdmU6XCJtb3VzZW1vdmVcIix0b3BNb3VzZU91dDpcIm1vdXNlb3V0XCIsdG9wTW91c2VPdmVyOlwibW91c2VvdmVyXCIsdG9wTW91c2VVcDpcIm1vdXNldXBcIix0b3BQYXN0ZTpcInBhc3RlXCIsdG9wUGF1c2U6XCJwYXVzZVwiLHRvcFBsYXk6XCJwbGF5XCIsdG9wUGxheWluZzpcInBsYXlpbmdcIix0b3BQcm9ncmVzczpcInByb2dyZXNzXCIsdG9wUmF0ZUNoYW5nZTpcInJhdGVjaGFuZ2VcIix0b3BTY3JvbGw6XCJzY3JvbGxcIix0b3BTZWVrZWQ6XCJzZWVrZWRcIix0b3BTZWVraW5nOlwic2Vla2luZ1wiLHRvcFNlbGVjdGlvbkNoYW5nZTpcInNlbGVjdGlvbmNoYW5nZVwiLHRvcFN0YWxsZWQ6XCJzdGFsbGVkXCIsdG9wU3VzcGVuZDpcInN1c3BlbmRcIix0b3BUZXh0SW5wdXQ6XCJ0ZXh0SW5wdXRcIix0b3BUaW1lVXBkYXRlOlwidGltZXVwZGF0ZVwiLHRvcFRvZ2dsZTpcInRvZ2dsZVwiLHRvcFRvdWNoQ2FuY2VsOlwidG91Y2hjYW5jZWxcIix0b3BUb3VjaEVuZDpcInRvdWNoZW5kXCIsdG9wVG91Y2hNb3ZlOlwidG91Y2htb3ZlXCIsXG50b3BUb3VjaFN0YXJ0OlwidG91Y2hzdGFydFwiLHRvcFRyYW5zaXRpb25FbmQ6Q2QoXCJ0cmFuc2l0aW9uZW5kXCIpfHxcInRyYW5zaXRpb25lbmRcIix0b3BWb2x1bWVDaGFuZ2U6XCJ2b2x1bWVjaGFuZ2VcIix0b3BXYWl0aW5nOlwid2FpdGluZ1wiLHRvcFdoZWVsOlwid2hlZWxcIn0sRWQ9e30sRmQ9MCxHZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7ZnVuY3Rpb24gSGQoYSl7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsR2QpfHwoYVtHZF09RmQrKyxFZFthW0dkXV09e30pO3JldHVybiBFZFthW0dkXV19ZnVuY3Rpb24gSWQoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gSmQoYSxiKXt2YXIgYz1JZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1JZChjKX19ZnVuY3Rpb24gS2QoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmXCJ0ZXh0XCI9PT1hLnR5cGV8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxudmFyIExkPWwuY2FuVXNlRE9NJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsTWQ9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ29udGV4dE1lbnUgdG9wRm9jdXMgdG9wS2V5RG93biB0b3BLZXlVcCB0b3BNb3VzZURvd24gdG9wTW91c2VVcCB0b3BTZWxlY3Rpb25DaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxOZD1udWxsLE9kPW51bGwsUGQ9bnVsbCxRZD0hMTtcbmZ1bmN0aW9uIFJkKGEsYil7aWYoUWR8fG51bGw9PU5kfHxOZCE9PWRhKCkpcmV0dXJuIG51bGw7dmFyIGM9TmQ7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmS2QoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OndpbmRvdy5nZXRTZWxlY3Rpb24/KGM9d2luZG93LmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pOmM9dm9pZCAwO3JldHVybiBQZCYmZWEoUGQsYyk/bnVsbDooUGQ9YyxhPVQuZ2V0UG9vbGVkKE1kLnNlbGVjdCxPZCxhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PU5kLEFiKGEpLGEpfVxudmFyIFNkPXtldmVudFR5cGVzOk1kLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQsZjtpZighKGY9IWUpKXthOntlPUhkKGUpO2Y9U2Eub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBoPWZbZ107aWYoIWUuaGFzT3duUHJvcGVydHkoaCl8fCFlW2hdKXtlPSExO2JyZWFrIGF9fWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9xYihiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BGb2N1c1wiOmlmKHZjKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKU5kPWUsT2Q9YixQZD1udWxsO2JyZWFrO2Nhc2UgXCJ0b3BCbHVyXCI6UGQ9T2Q9TmQ9bnVsbDticmVhaztjYXNlIFwidG9wTW91c2VEb3duXCI6UWQ9ITA7YnJlYWs7Y2FzZSBcInRvcENvbnRleHRNZW51XCI6Y2FzZSBcInRvcE1vdXNlVXBcIjpyZXR1cm4gUWQ9ITEsUmQoYyxkKTtjYXNlIFwidG9wU2VsZWN0aW9uQ2hhbmdlXCI6aWYoTGQpYnJlYWs7XG5jYXNlIFwidG9wS2V5RG93blwiOmNhc2UgXCJ0b3BLZXlVcFwiOnJldHVybiBSZChjLGQpfXJldHVybiBudWxsfX07ZnVuY3Rpb24gVGQoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVQuYXVnbWVudENsYXNzKFRkLHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KTtmdW5jdGlvbiBVZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9VC5hdWdtZW50Q2xhc3MoVWQse2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KTtmdW5jdGlvbiBWZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9YmQuYXVnbWVudENsYXNzKFZkLHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtcbmZ1bmN0aW9uIFdkKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIFhkPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxZZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn07ZnVuY3Rpb24gWmQoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVxuYmQuYXVnbWVudENsYXNzKFpkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPVhkW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPVdkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9ZZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6ZWQsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP1dkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/V2QoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KTtmdW5jdGlvbiAkZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9ZmQuYXVnbWVudENsYXNzKCRkLHtkYXRhVHJhbnNmZXI6bnVsbH0pO2Z1bmN0aW9uIGFlKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1iZC5hdWdtZW50Q2xhc3MoYWUse3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTplZH0pO2Z1bmN0aW9uIGJlKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1ULmF1Z21lbnRDbGFzcyhiZSx7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KTtcbmZ1bmN0aW9uIGNlKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1mZC5hdWdtZW50Q2xhc3MoY2Use2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpbiBhPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSk7dmFyIGRlPXt9LGVlPXt9O1xuXCJhYm9ydCBhbmltYXRpb25FbmQgYW5pbWF0aW9uSXRlcmF0aW9uIGFuaW1hdGlvblN0YXJ0IGJsdXIgY2FuY2VsIGNhblBsYXkgY2FuUGxheVRocm91Z2ggY2xpY2sgY2xvc2UgY29udGV4dE1lbnUgY29weSBjdXQgZG91YmxlQ2xpY2sgZHJhZyBkcmFnRW5kIGRyYWdFbnRlciBkcmFnRXhpdCBkcmFnTGVhdmUgZHJhZ092ZXIgZHJhZ1N0YXJ0IGRyb3AgZHVyYXRpb25DaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgZm9jdXMgaW5wdXQgaW52YWxpZCBrZXlEb3duIGtleVByZXNzIGtleVVwIGxvYWQgbG9hZGVkRGF0YSBsb2FkZWRNZXRhZGF0YSBsb2FkU3RhcnQgbW91c2VEb3duIG1vdXNlTW92ZSBtb3VzZU91dCBtb3VzZU92ZXIgbW91c2VVcCBwYXN0ZSBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZUNoYW5nZSByZXNldCBzY3JvbGwgc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdWJtaXQgc3VzcGVuZCB0aW1lVXBkYXRlIHRvZ2dsZSB0b3VjaENhbmNlbCB0b3VjaEVuZCB0b3VjaE1vdmUgdG91Y2hTdGFydCB0cmFuc2l0aW9uRW5kIHZvbHVtZUNoYW5nZSB3YWl0aW5nIHdoZWVsXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXS50b1VwcGVyQ2FzZSgpK1xuYS5zbGljZSgxKSxjPVwib25cIitiO2I9XCJ0b3BcIitiO2M9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmMsY2FwdHVyZWQ6YytcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltiXX07ZGVbYV09YztlZVtiXT1jfSk7XG52YXIgZmU9e2V2ZW50VHlwZXM6ZGUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1lZVthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcInRvcEtleVByZXNzXCI6aWYoMD09PVdkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJ0b3BLZXlEb3duXCI6Y2FzZSBcInRvcEtleVVwXCI6YT1aZDticmVhaztjYXNlIFwidG9wQmx1clwiOmNhc2UgXCJ0b3BGb2N1c1wiOmE9VmQ7YnJlYWs7Y2FzZSBcInRvcENsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJ0b3BEb3VibGVDbGlja1wiOmNhc2UgXCJ0b3BNb3VzZURvd25cIjpjYXNlIFwidG9wTW91c2VNb3ZlXCI6Y2FzZSBcInRvcE1vdXNlVXBcIjpjYXNlIFwidG9wTW91c2VPdXRcIjpjYXNlIFwidG9wTW91c2VPdmVyXCI6Y2FzZSBcInRvcENvbnRleHRNZW51XCI6YT1mZDticmVhaztjYXNlIFwidG9wRHJhZ1wiOmNhc2UgXCJ0b3BEcmFnRW5kXCI6Y2FzZSBcInRvcERyYWdFbnRlclwiOmNhc2UgXCJ0b3BEcmFnRXhpdFwiOmNhc2UgXCJ0b3BEcmFnTGVhdmVcIjpjYXNlIFwidG9wRHJhZ092ZXJcIjpjYXNlIFwidG9wRHJhZ1N0YXJ0XCI6Y2FzZSBcInRvcERyb3BcIjphPVxuJGQ7YnJlYWs7Y2FzZSBcInRvcFRvdWNoQ2FuY2VsXCI6Y2FzZSBcInRvcFRvdWNoRW5kXCI6Y2FzZSBcInRvcFRvdWNoTW92ZVwiOmNhc2UgXCJ0b3BUb3VjaFN0YXJ0XCI6YT1hZTticmVhaztjYXNlIFwidG9wQW5pbWF0aW9uRW5kXCI6Y2FzZSBcInRvcEFuaW1hdGlvbkl0ZXJhdGlvblwiOmNhc2UgXCJ0b3BBbmltYXRpb25TdGFydFwiOmE9VGQ7YnJlYWs7Y2FzZSBcInRvcFRyYW5zaXRpb25FbmRcIjphPWJlO2JyZWFrO2Nhc2UgXCJ0b3BTY3JvbGxcIjphPWJkO2JyZWFrO2Nhc2UgXCJ0b3BXaGVlbFwiOmE9Y2U7YnJlYWs7Y2FzZSBcInRvcENvcHlcIjpjYXNlIFwidG9wQ3V0XCI6Y2FzZSBcInRvcFBhc3RlXCI6YT1VZDticmVhaztkZWZhdWx0OmE9VH1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO0FiKGIpO3JldHVybiBifX07c2Q9ZnVuY3Rpb24oYSxiLGMsZCl7YT1qYihhLGIsYyxkKTtrYihhKTtsYighMSl9O2hiLmluamVjdEV2ZW50UGx1Z2luT3JkZXIoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBUYXBFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7XG5XYT1zYi5nZXRGaWJlckN1cnJlbnRQcm9wc0Zyb21Ob2RlO1hhPXNiLmdldEluc3RhbmNlRnJvbU5vZGU7WWE9c2IuZ2V0Tm9kZUZyb21JbnN0YW5jZTtoYi5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOmZlLEVudGVyTGVhdmVFdmVudFBsdWdpbjpoZCxDaGFuZ2VFdmVudFBsdWdpbjphZCxTZWxlY3RFdmVudFBsdWdpbjpTZCxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOmljfSk7dmFyIGdlPVtdLGhlPS0xO2Z1bmN0aW9uIFYoYSl7MD5oZXx8KGEuY3VycmVudD1nZVtoZV0sZ2VbaGVdPW51bGwsaGUtLSl9ZnVuY3Rpb24gVyhhLGIpe2hlKys7Z2VbaGVdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn1uZXcgU2V0O3ZhciBpZT17Y3VycmVudDpEfSxYPXtjdXJyZW50OiExfSxqZT1EO2Z1bmN0aW9uIGtlKGEpe3JldHVybiBsZShhKT9qZTppZS5jdXJyZW50fVxuZnVuY3Rpb24gbWUoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBEO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIGxlKGEpe3JldHVybiAyPT09YS50YWcmJm51bGwhPWEudHlwZS5jaGlsZENvbnRleHRUeXBlc31mdW5jdGlvbiBuZShhKXtsZShhKSYmKFYoWCxhKSxWKGllLGEpKX1cbmZ1bmN0aW9uIG9lKGEsYixjKXtudWxsIT1pZS5jdXJzb3I/RShcIjE2OFwiKTp2b2lkIDA7VyhpZSxiLGEpO1coWCxjLGEpfWZ1bmN0aW9uIHBlKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGUsZD1hLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBiO2M9Yy5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gYyllIGluIGQ/dm9pZCAwOkUoXCIxMDhcIixqZChhKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIEIoe30sYixjKX1mdW5jdGlvbiBxZShhKXtpZighbGUoYSkpcmV0dXJuITE7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxEO2plPWllLmN1cnJlbnQ7VyhpZSxiLGEpO1coWCxYLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiByZShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2M/dm9pZCAwOkUoXCIxNjlcIik7aWYoYil7dmFyIGQ9cGUoYSxqZSk7Yy5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1kO1YoWCxhKTtWKGllLGEpO1coaWUsZCxhKX1lbHNlIFYoWCxhKTtXKFgsYixhKX1cbmZ1bmN0aW9uIFkoYSxiLGMpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yjt0aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9bnVsbDt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzW1wicmV0dXJuXCJdPW51bGw7dGhpcy5pbmRleD0wO3RoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz10aGlzLnBlbmRpbmdQcm9wcz10aGlzLnJlZj1udWxsO3RoaXMuaW50ZXJuYWxDb250ZXh0VGFnPWM7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1cbmZ1bmN0aW9uIHNlKGEsYixjKXt2YXIgZD1hLmFsdGVybmF0ZTtudWxsPT09ZD8oZD1uZXcgWShhLnRhZyxhLmtleSxhLmludGVybmFsQ29udGV4dFRhZyksZC50eXBlPWEudHlwZSxkLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxkLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWQpOihkLmVmZmVjdFRhZz0wLGQubmV4dEVmZmVjdD1udWxsLGQuZmlyc3RFZmZlY3Q9bnVsbCxkLmxhc3RFZmZlY3Q9bnVsbCk7ZC5leHBpcmF0aW9uVGltZT1jO2QucGVuZGluZ1Byb3BzPWI7ZC5jaGlsZD1hLmNoaWxkO2QubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7ZC5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtkLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7ZC5zaWJsaW5nPWEuc2libGluZztkLmluZGV4PWEuaW5kZXg7ZC5yZWY9YS5yZWY7cmV0dXJuIGR9XG5mdW5jdGlvbiB0ZShhLGIsYyl7dmFyIGQ9dm9pZCAwLGU9YS50eXBlLGY9YS5rZXk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/KGQ9ZS5wcm90b3R5cGUmJmUucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ/bmV3IFkoMixmLGIpOm5ldyBZKDAsZixiKSxkLnR5cGU9ZSxkLnBlbmRpbmdQcm9wcz1hLnByb3BzKTpcInN0cmluZ1wiPT09dHlwZW9mIGU/KGQ9bmV3IFkoNSxmLGIpLGQudHlwZT1lLGQucGVuZGluZ1Byb3BzPWEucHJvcHMpOlwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwibnVtYmVyXCI9PT10eXBlb2YgZS50YWc/KGQ9ZSxkLnBlbmRpbmdQcm9wcz1hLnByb3BzKTpFKFwiMTMwXCIsbnVsbD09ZT9lOnR5cGVvZiBlLFwiXCIpO2QuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gZH1mdW5jdGlvbiB1ZShhLGIsYyxkKXtiPW5ldyBZKDEwLGQsYik7Yi5wZW5kaW5nUHJvcHM9YTtiLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGJ9XG5mdW5jdGlvbiB2ZShhLGIsYyl7Yj1uZXcgWSg2LG51bGwsYik7Yi5wZW5kaW5nUHJvcHM9YTtiLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGJ9ZnVuY3Rpb24gd2UoYSxiLGMpe2I9bmV3IFkoNyxhLmtleSxiKTtiLnR5cGU9YS5oYW5kbGVyO2IucGVuZGluZ1Byb3BzPWE7Yi5leHBpcmF0aW9uVGltZT1jO3JldHVybiBifWZ1bmN0aW9uIHhlKGEsYixjKXthPW5ldyBZKDksbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24geWUoYSxiLGMpe2I9bmV3IFkoNCxhLmtleSxiKTtiLnBlbmRpbmdQcm9wcz1hLmNoaWxkcmVufHxbXTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifXZhciB6ZT1udWxsLEFlPW51bGw7XG5mdW5jdGlvbiBCZShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dHJ5e3JldHVybiBhKGIpfWNhdGNoKGMpe319fWZ1bmN0aW9uIENlKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO3plPUJlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtBZT1CZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfWZ1bmN0aW9uIERlKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZSYmemUoYSl9ZnVuY3Rpb24gRWUoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIEFlJiZBZShhKX1cbmZ1bmN0aW9uIEZlKGEpe3JldHVybntiYXNlU3RhdGU6YSxleHBpcmF0aW9uVGltZTowLGZpcnN0Om51bGwsbGFzdDpudWxsLGNhbGxiYWNrTGlzdDpudWxsLGhhc0ZvcmNlVXBkYXRlOiExLGlzSW5pdGlhbGl6ZWQ6ITF9fWZ1bmN0aW9uIEdlKGEsYil7bnVsbD09PWEubGFzdD9hLmZpcnN0PWEubGFzdD1iOihhLmxhc3QubmV4dD1iLGEubGFzdD1iKTtpZigwPT09YS5leHBpcmF0aW9uVGltZXx8YS5leHBpcmF0aW9uVGltZT5iLmV4cGlyYXRpb25UaW1lKWEuZXhwaXJhdGlvblRpbWU9Yi5leHBpcmF0aW9uVGltZX1cbmZ1bmN0aW9uIEhlKGEsYil7dmFyIGM9YS5hbHRlcm5hdGUsZD1hLnVwZGF0ZVF1ZXVlO251bGw9PT1kJiYoZD1hLnVwZGF0ZVF1ZXVlPUZlKG51bGwpKTtudWxsIT09Yz8oYT1jLnVwZGF0ZVF1ZXVlLG51bGw9PT1hJiYoYT1jLnVwZGF0ZVF1ZXVlPUZlKG51bGwpKSk6YT1udWxsO2E9YSE9PWQ/YTpudWxsO251bGw9PT1hP0dlKGQsYik6bnVsbD09PWQubGFzdHx8bnVsbD09PWEubGFzdD8oR2UoZCxiKSxHZShhLGIpKTooR2UoZCxiKSxhLmxhc3Q9Yil9ZnVuY3Rpb24gSWUoYSxiLGMsZCl7YT1hLnBhcnRpYWxTdGF0ZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoYixjLGQpOmF9XG5mdW5jdGlvbiBKZShhLGIsYyxkLGUsZil7bnVsbCE9PWEmJmEudXBkYXRlUXVldWU9PT1jJiYoYz1iLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6Yy5iYXNlU3RhdGUsZXhwaXJhdGlvblRpbWU6Yy5leHBpcmF0aW9uVGltZSxmaXJzdDpjLmZpcnN0LGxhc3Q6Yy5sYXN0LGlzSW5pdGlhbGl6ZWQ6Yy5pc0luaXRpYWxpemVkLGNhbGxiYWNrTGlzdDpudWxsLGhhc0ZvcmNlVXBkYXRlOiExfSk7Yy5leHBpcmF0aW9uVGltZT0wO2MuaXNJbml0aWFsaXplZD9hPWMuYmFzZVN0YXRlOihhPWMuYmFzZVN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxjLmlzSW5pdGlhbGl6ZWQ9ITApO2Zvcih2YXIgZz0hMCxoPWMuZmlyc3Qsaz0hMTtudWxsIT09aDspe3ZhciBxPWguZXhwaXJhdGlvblRpbWU7aWYocT5mKXt2YXIgdj1jLmV4cGlyYXRpb25UaW1lO2lmKDA9PT12fHx2PnEpYy5leHBpcmF0aW9uVGltZT1xO2t8fChrPSEwLGMuYmFzZVN0YXRlPWEpfWVsc2V7a3x8KGMuZmlyc3Q9aC5uZXh0LG51bGw9PT1cbmMuZmlyc3QmJihjLmxhc3Q9bnVsbCkpO2lmKGguaXNSZXBsYWNlKWE9SWUoaCxkLGEsZSksZz0hMDtlbHNlIGlmKHE9SWUoaCxkLGEsZSkpYT1nP0Ioe30sYSxxKTpCKGEscSksZz0hMTtoLmlzRm9yY2VkJiYoYy5oYXNGb3JjZVVwZGF0ZT0hMCk7bnVsbCE9PWguY2FsbGJhY2smJihxPWMuY2FsbGJhY2tMaXN0LG51bGw9PT1xJiYocT1jLmNhbGxiYWNrTGlzdD1bXSkscS5wdXNoKGgpKX1oPWgubmV4dH1udWxsIT09Yy5jYWxsYmFja0xpc3Q/Yi5lZmZlY3RUYWd8PTMyOm51bGwhPT1jLmZpcnN0fHxjLmhhc0ZvcmNlVXBkYXRlfHwoYi51cGRhdGVRdWV1ZT1udWxsKTtrfHwoYy5iYXNlU3RhdGU9YSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBLZShhLGIpe3ZhciBjPWEuY2FsbGJhY2tMaXN0O2lmKG51bGwhPT1jKWZvcihhLmNhbGxiYWNrTGlzdD1udWxsLGE9MDthPGMubGVuZ3RoO2ErKyl7dmFyIGQ9Y1thXSxlPWQuY2FsbGJhY2s7ZC5jYWxsYmFjaz1udWxsO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBlP0UoXCIxOTFcIixlKTp2b2lkIDA7ZS5jYWxsKGIpfX1cbmZ1bmN0aW9uIExlKGEsYixjLGQpe2Z1bmN0aW9uIGUoYSxiKXtiLnVwZGF0ZXI9ZjthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hfXZhciBmPXtpc01vdW50ZWQ6bGQsZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGMsZCxlKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtlPXZvaWQgMD09PWU/bnVsbDplO3ZhciBnPWIoYyk7SGUoYyx7ZXhwaXJhdGlvblRpbWU6ZyxwYXJ0aWFsU3RhdGU6ZCxjYWxsYmFjazplLGlzUmVwbGFjZTohMSxpc0ZvcmNlZDohMSxuZXh0Q2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9KTthKGMsZyl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYyxkLGUpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2U9dm9pZCAwPT09ZT9udWxsOmU7dmFyIGc9YihjKTtIZShjLHtleHBpcmF0aW9uVGltZTpnLHBhcnRpYWxTdGF0ZTpkLGNhbGxiYWNrOmUsaXNSZXBsYWNlOiEwLGlzRm9yY2VkOiExLG5leHRDYWxsYmFjazpudWxsLG5leHQ6bnVsbH0pO1xuYShjLGcpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYyxkKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBlPWIoYyk7SGUoYyx7ZXhwaXJhdGlvblRpbWU6ZSxwYXJ0aWFsU3RhdGU6bnVsbCxjYWxsYmFjazpkLGlzUmVwbGFjZTohMSxpc0ZvcmNlZDohMCxuZXh0Q2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9KTthKGMsZSl9fTtyZXR1cm57YWRvcHRDbGFzc0luc3RhbmNlOmUsY29uc3RydWN0Q2xhc3NJbnN0YW5jZTpmdW5jdGlvbihhLGIpe3ZhciBjPWEudHlwZSxkPWtlKGEpLGY9Mj09PWEudGFnJiZudWxsIT1hLnR5cGUuY29udGV4dFR5cGVzLGc9Zj9tZShhLGQpOkQ7Yj1uZXcgYyhiLGcpO2UoYSxiKTtmJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZCxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWcpO3JldHVybiBifSxtb3VudENsYXNzSW5zdGFuY2U6ZnVuY3Rpb24oYSxcbmIpe3ZhciBjPWEuYWx0ZXJuYXRlLGQ9YS5zdGF0ZU5vZGUsZT1kLnN0YXRlfHxudWxsLGc9YS5wZW5kaW5nUHJvcHM7Zz92b2lkIDA6RShcIjE1OFwiKTt2YXIgaD1rZShhKTtkLnByb3BzPWc7ZC5zdGF0ZT1hLm1lbW9pemVkU3RhdGU9ZTtkLnJlZnM9RDtkLmNvbnRleHQ9bWUoYSxoKTtudWxsIT1hLnR5cGUmJm51bGwhPWEudHlwZS5wcm90b3R5cGUmJiEwPT09YS50eXBlLnByb3RvdHlwZS51bnN0YWJsZV9pc0FzeW5jUmVhY3RDb21wb25lbnQmJihhLmludGVybmFsQ29udGV4dFRhZ3w9MSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50V2lsbE1vdW50JiYoZT1kLnN0YXRlLGQuY29tcG9uZW50V2lsbE1vdW50KCksZSE9PWQuc3RhdGUmJmYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShkLGQuc3RhdGUsbnVsbCksZT1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1lJiYoZC5zdGF0ZT1KZShjLGEsZSxkLGcsYikpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD1cbjQpfSx1cGRhdGVDbGFzc0luc3RhbmNlOmZ1bmN0aW9uKGEsYixlKXt2YXIgZz1iLnN0YXRlTm9kZTtnLnByb3BzPWIubWVtb2l6ZWRQcm9wcztnLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZTt2YXIgaD1iLm1lbW9pemVkUHJvcHMsaz1iLnBlbmRpbmdQcm9wcztrfHwoaz1oLG51bGw9PWs/RShcIjE1OVwiKTp2b2lkIDApO3ZhciB1PWcuY29udGV4dCx6PWtlKGIpO3o9bWUoYix6KTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHxoPT09ayYmdT09PXp8fCh1PWcuc3RhdGUsZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGsseiksZy5zdGF0ZSE9PXUmJmYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShnLGcuc3RhdGUsbnVsbCkpO3U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWIudXBkYXRlUXVldWU/SmUoYSxiLGIudXBkYXRlUXVldWUsZyxrLGUpOnU7aWYoIShoIT09a3x8dSE9PWV8fFguY3VycmVudHx8bnVsbCE9PWIudXBkYXRlUXVldWUmJmIudXBkYXRlUXVldWUuaGFzRm9yY2VVcGRhdGUpKXJldHVyblwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZ1PT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLCExO3ZhciBHPWs7aWYobnVsbD09PWh8fG51bGwhPT1iLnVwZGF0ZVF1ZXVlJiZiLnVwZGF0ZVF1ZXVlLmhhc0ZvcmNlVXBkYXRlKUc9ITA7ZWxzZXt2YXIgST1iLnN0YXRlTm9kZSxMPWIudHlwZTtHPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBJLnNob3VsZENvbXBvbmVudFVwZGF0ZT9JLnNob3VsZENvbXBvbmVudFVwZGF0ZShHLGUseik6TC5wcm90b3R5cGUmJkwucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFlYShoLEcpfHwhZWEodSxlKTohMH1HPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoayxlLHopLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8XG5oPT09YS5tZW1vaXplZFByb3BzJiZ1PT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLGMoYixrKSxkKGIsZSkpO2cucHJvcHM9aztnLnN0YXRlPWU7Zy5jb250ZXh0PXo7cmV0dXJuIEd9fX12YXIgUWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sW1wiZm9yXCJdLFJlPVFlP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsU2U9UWU/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuY2FsbFwiKTo2MDEwNCxUZT1RZT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5yZXR1cm5cIik6NjAxMDUsVWU9UWU/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LFZlPVFlP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LFdlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtcbmZ1bmN0aW9uIFhlKGEpe2lmKG51bGw9PT1hfHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1XZSYmYVtXZV18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH12YXIgWWU9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFplKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbCE9PWMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjKXtpZihiLl9vd25lcil7Yj1iLl9vd25lcjt2YXIgZD12b2lkIDA7YiYmKDIhPT1iLnRhZz9FKFwiMTEwXCIpOnZvaWQgMCxkPWIuc3RhdGVOb2RlKTtkP3ZvaWQgMDpFKFwiMTQ3XCIsYyk7dmFyIGU9XCJcIitjO2lmKG51bGwhPT1hJiZudWxsIT09YS5yZWYmJmEucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBhLnJlZjthPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcz09PUQ/ZC5yZWZzPXt9OmQucmVmcztudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2EuX3N0cmluZ1JlZj1lO3JldHVybiBhfVwic3RyaW5nXCIhPT10eXBlb2YgYz9FKFwiMTQ4XCIpOnZvaWQgMDtiLl9vd25lcj92b2lkIDA6RShcIjE0OVwiLGMpfXJldHVybiBjfVxuZnVuY3Rpb24gJGUoYSxiKXtcInRleHRhcmVhXCIhPT1hLnR5cGUmJkUoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKX1cbmZ1bmN0aW9uIGFmKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9c2UoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj12ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpLGJbXCJyZXR1cm5cIl09YSxiO2I9ZShiLGMsZCk7YltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIudHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyxkKSxkLnJlZj1aZShiLGMpLGRbXCJyZXR1cm5cIl09YSxkO2Q9dGUoYyxhLmludGVybmFsQ29udGV4dFRhZyxkKTtkLnJlZj1aZShiLGMpO2RbXCJyZXR1cm5cIl09YTtyZXR1cm4gZH1mdW5jdGlvbiBxKGEsYixjLGQpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9d2UoYyxhLmludGVybmFsQ29udGV4dFRhZyxkKSxiW1wicmV0dXJuXCJdPWEsYjtiPWUoYixjLGQpO1xuYltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIHYoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDkhPT1iLnRhZylyZXR1cm4gYj14ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpLGIudHlwZT1jLnZhbHVlLGJbXCJyZXR1cm5cIl09YSxiO2I9ZShiLG51bGwsZCk7Yi50eXBlPWMudmFsdWU7YltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIHkoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPXllKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsZCksYltcInJldHVyblwiXT1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10sZCk7YltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIHUoYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8MTAhPT1iLnRhZylyZXR1cm4gYj11ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLFxuZCxmKSxiW1wicmV0dXJuXCJdPWEsYjtiPWUoYixjLGQpO2JbXCJyZXR1cm5cIl09YTtyZXR1cm4gYn1mdW5jdGlvbiB6KGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj12ZShcIlwiK2IsYS5pbnRlcm5hbENvbnRleHRUYWcsYyksYltcInJldHVyblwiXT1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgUmU6aWYoYi50eXBlPT09VmUpcmV0dXJuIGI9dWUoYi5wcm9wcy5jaGlsZHJlbixhLmludGVybmFsQ29udGV4dFRhZyxjLGIua2V5KSxiW1wicmV0dXJuXCJdPWEsYjtjPXRlKGIsYS5pbnRlcm5hbENvbnRleHRUYWcsYyk7Yy5yZWY9WmUobnVsbCxiKTtjW1wicmV0dXJuXCJdPWE7cmV0dXJuIGM7Y2FzZSBTZTpyZXR1cm4gYj13ZShiLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMpLGJbXCJyZXR1cm5cIl09YSxiO2Nhc2UgVGU6cmV0dXJuIGM9eGUoYixhLmludGVybmFsQ29udGV4dFRhZyxcbmMpLGMudHlwZT1iLnZhbHVlLGNbXCJyZXR1cm5cIl09YSxjO2Nhc2UgVWU6cmV0dXJuIGI9eWUoYixhLmludGVybmFsQ29udGV4dFRhZyxjKSxiW1wicmV0dXJuXCJdPWEsYn1pZihZZShiKXx8WGUoYikpcmV0dXJuIGI9dWUoYixhLmludGVybmFsQ29udGV4dFRhZyxjLG51bGwpLGJbXCJyZXR1cm5cIl09YSxiOyRlKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gRyhhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBSZTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PVZlP3UoYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSBTZTpyZXR1cm4gYy5rZXk9PT1lP3EoYSxiLGMsZCk6bnVsbDtjYXNlIFRlOnJldHVybiBudWxsPT09XG5lP3YoYSxiLGMsZCk6bnVsbDtjYXNlIFVlOnJldHVybiBjLmtleT09PWU/eShhLGIsYyxkKTpudWxsfWlmKFllKGMpfHxYZShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDp1KGEsYixjLGQsbnVsbCk7JGUoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBJKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFJlOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1WZT91KGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSBTZTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwscShiLGEsZCxlKTtjYXNlIFRlOnJldHVybiBhPWEuZ2V0KGMpfHxudWxsLHYoYixhLGQsZSk7Y2FzZSBVZTpyZXR1cm4gYT1cbmEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCx5KGIsYSxkLGUpfWlmKFllKGQpfHxYZShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCx1KGIsYSxkLGUsbnVsbCk7JGUoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBMKGUsZyxtLEEpe2Zvcih2YXIgaD1udWxsLHI9bnVsbCxuPWcsdz1nPTAsaz1udWxsO251bGwhPT1uJiZ3PG0ubGVuZ3RoO3crKyl7bi5pbmRleD53PyhrPW4sbj1udWxsKTprPW4uc2libGluZzt2YXIgeD1HKGUsbixtW3ddLEEpO2lmKG51bGw9PT14KXtudWxsPT09biYmKG49ayk7YnJlYWt9YSYmbiYmbnVsbD09PXguYWx0ZXJuYXRlJiZiKGUsbik7Zz1mKHgsZyx3KTtudWxsPT09cj9oPXg6ci5zaWJsaW5nPXg7cj14O249a31pZih3PT09bS5sZW5ndGgpcmV0dXJuIGMoZSxuKSxoO2lmKG51bGw9PT1uKXtmb3IoO3c8bS5sZW5ndGg7dysrKWlmKG49eihlLG1bd10sQSkpZz1mKG4sZyx3KSxudWxsPT09cj9oPW46ci5zaWJsaW5nPW4scj1uO3JldHVybiBofWZvcihuPVxuZChlLG4pO3c8bS5sZW5ndGg7dysrKWlmKGs9SShuLGUsdyxtW3ddLEEpKXtpZihhJiZudWxsIT09ay5hbHRlcm5hdGUpbltcImRlbGV0ZVwiXShudWxsPT09ay5rZXk/dzprLmtleSk7Zz1mKGssZyx3KTtudWxsPT09cj9oPWs6ci5zaWJsaW5nPWs7cj1rfWEmJm4uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGh9ZnVuY3Rpb24gTihlLGcsbSxBKXt2YXIgaD1YZShtKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgaD9FKFwiMTUwXCIpOnZvaWQgMDttPWguY2FsbChtKTtudWxsPT1tP0UoXCIxNTFcIik6dm9pZCAwO2Zvcih2YXIgcj1oPW51bGwsbj1nLHc9Zz0wLGs9bnVsbCx4PW0ubmV4dCgpO251bGwhPT1uJiYheC5kb25lO3crKyx4PW0ubmV4dCgpKXtuLmluZGV4Pnc/KGs9bixuPW51bGwpOms9bi5zaWJsaW5nO3ZhciBKPUcoZSxuLHgudmFsdWUsQSk7aWYobnVsbD09PUope258fChuPWspO2JyZWFrfWEmJm4mJm51bGw9PT1KLmFsdGVybmF0ZSYmYihlLG4pO2c9ZihKLFxuZyx3KTtudWxsPT09cj9oPUo6ci5zaWJsaW5nPUo7cj1KO249a31pZih4LmRvbmUpcmV0dXJuIGMoZSxuKSxoO2lmKG51bGw9PT1uKXtmb3IoOyF4LmRvbmU7dysrLHg9bS5uZXh0KCkpeD16KGUseC52YWx1ZSxBKSxudWxsIT09eCYmKGc9Zih4LGcsdyksbnVsbD09PXI/aD14OnIuc2libGluZz14LHI9eCk7cmV0dXJuIGh9Zm9yKG49ZChlLG4pOyF4LmRvbmU7dysrLHg9bS5uZXh0KCkpaWYoeD1JKG4sZSx3LHgudmFsdWUsQSksbnVsbCE9PXgpe2lmKGEmJm51bGwhPT14LmFsdGVybmF0ZSluW1wiZGVsZXRlXCJdKG51bGw9PT14LmtleT93Ongua2V5KTtnPWYoeCxnLHcpO251bGw9PT1yP2g9eDpyLnNpYmxpbmc9eDtyPXh9YSYmbi5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gaH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09VmUmJm51bGw9PT1mLmtleSYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7XG52YXIgbT1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKG0pc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgUmU6YTp7dmFyIHI9Zi5rZXk7Zm9yKG09ZDtudWxsIT09bTspe2lmKG0ua2V5PT09cilpZigxMD09PW0udGFnP2YudHlwZT09PVZlOm0udHlwZT09PWYudHlwZSl7YyhhLG0uc2libGluZyk7ZD1lKG0sZi50eXBlPT09VmU/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPVplKG0sZik7ZFtcInJldHVyblwiXT1hO2E9ZDticmVhayBhfWVsc2V7YyhhLG0pO2JyZWFrfWVsc2UgYihhLG0pO209bS5zaWJsaW5nfWYudHlwZT09PVZlPyhkPXVlKGYucHJvcHMuY2hpbGRyZW4sYS5pbnRlcm5hbENvbnRleHRUYWcsaCxmLmtleSksZFtcInJldHVyblwiXT1hLGE9ZCk6KGg9dGUoZixhLmludGVybmFsQ29udGV4dFRhZyxoKSxoLnJlZj1aZShkLGYpLGhbXCJyZXR1cm5cIl09YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgU2U6YTp7Zm9yKG09Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PVxubSlpZig3PT09ZC50YWcpe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYsaCk7ZFtcInJldHVyblwiXT1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9d2UoZixhLmludGVybmFsQ29udGV4dFRhZyxoKTtkW1wicmV0dXJuXCJdPWE7YT1kfXJldHVybiBnKGEpO2Nhc2UgVGU6YTp7aWYobnVsbCE9PWQpaWYoOT09PWQudGFnKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxudWxsLGgpO2QudHlwZT1mLnZhbHVlO2RbXCJyZXR1cm5cIl09YTthPWQ7YnJlYWsgYX1lbHNlIGMoYSxkKTtkPXhlKGYsYS5pbnRlcm5hbENvbnRleHRUYWcsaCk7ZC50eXBlPWYudmFsdWU7ZFtcInJldHVyblwiXT1hO2E9ZH1yZXR1cm4gZyhhKTtjYXNlIFVlOmE6e2ZvcihtPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1tKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1cbmYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2RbXCJyZXR1cm5cIl09YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPXllKGYsYS5pbnRlcm5hbENvbnRleHRUYWcsaCk7ZFtcInJldHVyblwiXT1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSk6KGMoYSxkKSxkPXZlKGYsYS5pbnRlcm5hbENvbnRleHRUYWcsaCkpLGRbXCJyZXR1cm5cIl09YSxhPWQsZyhhKTtpZihZZShmKSlyZXR1cm4gTChhLGQsZixoKTtpZihYZShmKSlyZXR1cm4gTihhLGQsZixoKTttJiYkZShhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZilzd2l0Y2goYS50YWcpe2Nhc2UgMjpjYXNlIDE6aD1hLnR5cGUsRShcIjE1MlwiLGguZGlzcGxheU5hbWV8fFxuaC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgYmY9YWYoITApLGNmPWFmKCExKTtcbmZ1bmN0aW9uIGRmKGEsYixjLGQsZSl7ZnVuY3Rpb24gZihhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtiLmNoaWxkPW51bGw9PT1hP2NmKGIsbnVsbCxjLGQpOmJmKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIGcoYSxiKXt2YXIgYz1iLnJlZjtudWxsPT09Y3x8YSYmYS5yZWY9PT1jfHwoYi5lZmZlY3RUYWd8PTEyOCl9ZnVuY3Rpb24gaChhLGIsYyxkKXtnKGEsYik7aWYoIWMpcmV0dXJuIGQmJnJlKGIsITEpLHEoYSxiKTtjPWIuc3RhdGVOb2RlO2lkLmN1cnJlbnQ9Yjt2YXIgZT1jLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO2YoYSxiLGUpO2IubWVtb2l6ZWRTdGF0ZT1jLnN0YXRlO2IubWVtb2l6ZWRQcm9wcz1jLnByb3BzO2QmJnJlKGIsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGsoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9vZShhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZvZShhLFxuYi5jb250ZXh0LCExKTtJKGEsYi5jb250YWluZXJJbmZvKX1mdW5jdGlvbiBxKGEsYil7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP0UoXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7dmFyIGM9c2UoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKTtiLmNoaWxkPWM7Zm9yKGNbXCJyZXR1cm5cIl09YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1zZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGNbXCJyZXR1cm5cIl09YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiB2KGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDM6ayhiKTticmVhaztjYXNlIDI6cWUoYik7YnJlYWs7Y2FzZSA0OkkoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKX1yZXR1cm4gbnVsbH12YXIgeT1hLnNob3VsZFNldFRleHRDb250ZW50LHU9YS51c2VTeW5jU2NoZWR1bGluZyx6PWEuc2hvdWxkRGVwcmlvcml0aXplU3VidHJlZSxcbkc9Yi5wdXNoSG9zdENvbnRleHQsST1iLnB1c2hIb3N0Q29udGFpbmVyLEw9Yy5lbnRlckh5ZHJhdGlvblN0YXRlLE49Yy5yZXNldEh5ZHJhdGlvblN0YXRlLEo9Yy50cnlUb0NsYWltTmV4dEh5ZHJhdGFibGVJbnN0YW5jZTthPUxlKGQsZSxmdW5jdGlvbihhLGIpe2EubWVtb2l6ZWRQcm9wcz1ifSxmdW5jdGlvbihhLGIpe2EubWVtb2l6ZWRTdGF0ZT1ifSk7dmFyIHc9YS5hZG9wdENsYXNzSW5zdGFuY2UsbT1hLmNvbnN0cnVjdENsYXNzSW5zdGFuY2UsQT1hLm1vdW50Q2xhc3NJbnN0YW5jZSxPYj1hLnVwZGF0ZUNsYXNzSW5zdGFuY2U7cmV0dXJue2JlZ2luV29yazpmdW5jdGlvbihhLGIsYyl7aWYoMD09PWIuZXhwaXJhdGlvblRpbWV8fGIuZXhwaXJhdGlvblRpbWU+YylyZXR1cm4gdihhLGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAwOm51bGwhPT1hP0UoXCIxNTVcIik6dm9pZCAwO3ZhciBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLHI9a2UoYik7cj1tZShiLHIpO2Q9ZChlLHIpO2IuZWZmZWN0VGFnfD1cbjE7XCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQucmVuZGVyPyhiLnRhZz0yLGU9cWUoYiksdyhiLGQpLEEoYixjKSxiPWgoYSxiLCEwLGUpKTooYi50YWc9MSxmKGEsYixkKSxiLm1lbW9pemVkUHJvcHM9ZSxiPWIuY2hpbGQpO3JldHVybiBiO2Nhc2UgMTphOntlPWIudHlwZTtjPWIucGVuZGluZ1Byb3BzO2Q9Yi5tZW1vaXplZFByb3BzO2lmKFguY3VycmVudCludWxsPT09YyYmKGM9ZCk7ZWxzZSBpZihudWxsPT09Y3x8ZD09PWMpe2I9cShhLGIpO2JyZWFrIGF9ZD1rZShiKTtkPW1lKGIsZCk7ZT1lKGMsZCk7Yi5lZmZlY3RUYWd8PTE7ZihhLGIsZSk7Yi5tZW1vaXplZFByb3BzPWM7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgMjpyZXR1cm4gZT1xZShiKSxkPXZvaWQgMCxudWxsPT09YT9iLnN0YXRlTm9kZT9FKFwiMTUzXCIpOihtKGIsYi5wZW5kaW5nUHJvcHMpLEEoYixjKSxkPSEwKTpkPU9iKGEsYixjKSxoKGEsYixkLGUpO2Nhc2UgMzpyZXR1cm4gayhiKSxcbmU9Yi51cGRhdGVRdWV1ZSxudWxsIT09ZT8oZD1iLm1lbW9pemVkU3RhdGUsZT1KZShhLGIsZSxudWxsLG51bGwsYyksZD09PWU/KE4oKSxiPXEoYSxiKSk6KGQ9ZS5lbGVtZW50LHI9Yi5zdGF0ZU5vZGUsKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJnIuaHlkcmF0ZSYmTChiKT8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD1jZihiLG51bGwsZCxjKSk6KE4oKSxmKGEsYixkKSksYi5tZW1vaXplZFN0YXRlPWUsYj1iLmNoaWxkKSk6KE4oKSxiPXEoYSxiKSksYjtjYXNlIDU6RyhiKTtudWxsPT09YSYmSihiKTtlPWIudHlwZTt2YXIgbj1iLm1lbW9pemVkUHJvcHM7ZD1iLnBlbmRpbmdQcm9wcztudWxsPT09ZCYmKGQ9bixudWxsPT09ZD9FKFwiMTU0XCIpOnZvaWQgMCk7cj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbDtYLmN1cnJlbnR8fG51bGwhPT1kJiZuIT09ZD8obj1kLmNoaWxkcmVuLHkoZSxkKT9uPW51bGw6ciYmeShlLHIpJiYoYi5lZmZlY3RUYWd8PTE2KSxnKGEsYiksXG4yMTQ3NDgzNjQ3IT09YyYmIXUmJnooZSxkKT8oYi5leHBpcmF0aW9uVGltZT0yMTQ3NDgzNjQ3LGI9bnVsbCk6KGYoYSxiLG4pLGIubWVtb2l6ZWRQcm9wcz1kLGI9Yi5jaGlsZCkpOmI9cShhLGIpO3JldHVybiBiO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJkooYiksYT1iLnBlbmRpbmdQcm9wcyxudWxsPT09YSYmKGE9Yi5tZW1vaXplZFByb3BzKSxiLm1lbW9pemVkUHJvcHM9YSxudWxsO2Nhc2UgODpiLnRhZz03O2Nhc2UgNzplPWIucGVuZGluZ1Byb3BzO2lmKFguY3VycmVudCludWxsPT09ZSYmKGU9YSYmYS5tZW1vaXplZFByb3BzLG51bGw9PT1lP0UoXCIxNTRcIik6dm9pZCAwKTtlbHNlIGlmKG51bGw9PT1lfHxiLm1lbW9pemVkUHJvcHM9PT1lKWU9Yi5tZW1vaXplZFByb3BzO2Q9ZS5jaGlsZHJlbjtiLnN0YXRlTm9kZT1udWxsPT09YT9jZihiLGIuc3RhdGVOb2RlLGQsYyk6YmYoYixiLnN0YXRlTm9kZSxkLGMpO2IubWVtb2l6ZWRQcm9wcz1lO3JldHVybiBiLnN0YXRlTm9kZTtcbmNhc2UgOTpyZXR1cm4gbnVsbDtjYXNlIDQ6YTp7SShiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2U9Yi5wZW5kaW5nUHJvcHM7aWYoWC5jdXJyZW50KW51bGw9PT1lJiYoZT1hJiZhLm1lbW9pemVkUHJvcHMsbnVsbD09ZT9FKFwiMTU0XCIpOnZvaWQgMCk7ZWxzZSBpZihudWxsPT09ZXx8Yi5tZW1vaXplZFByb3BzPT09ZSl7Yj1xKGEsYik7YnJlYWsgYX1udWxsPT09YT9iLmNoaWxkPWJmKGIsbnVsbCxlLGMpOmYoYSxiLGUpO2IubWVtb2l6ZWRQcm9wcz1lO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDEwOmE6e2M9Yi5wZW5kaW5nUHJvcHM7aWYoWC5jdXJyZW50KW51bGw9PT1jJiYoYz1iLm1lbW9pemVkUHJvcHMpO2Vsc2UgaWYobnVsbD09PWN8fGIubWVtb2l6ZWRQcm9wcz09PWMpe2I9cShhLGIpO2JyZWFrIGF9ZihhLGIsYyk7Yi5tZW1vaXplZFByb3BzPWM7Yj1iLmNoaWxkfXJldHVybiBiO2RlZmF1bHQ6RShcIjE1NlwiKX19LGJlZ2luRmFpbGVkV29yazpmdW5jdGlvbihhLGIsXG5jKXtzd2l0Y2goYi50YWcpe2Nhc2UgMjpxZShiKTticmVhaztjYXNlIDM6ayhiKTticmVhaztkZWZhdWx0OkUoXCIxNTdcIil9Yi5lZmZlY3RUYWd8PTY0O251bGw9PT1hP2IuY2hpbGQ9bnVsbDpiLmNoaWxkIT09YS5jaGlsZCYmKGIuY2hpbGQ9YS5jaGlsZCk7aWYoMD09PWIuZXhwaXJhdGlvblRpbWV8fGIuZXhwaXJhdGlvblRpbWU+YylyZXR1cm4gdihhLGIpO2IuZmlyc3RFZmZlY3Q9bnVsbDtiLmxhc3RFZmZlY3Q9bnVsbDtiLmNoaWxkPW51bGw9PT1hP2NmKGIsbnVsbCxudWxsLGMpOmJmKGIsYS5jaGlsZCxudWxsLGMpOzI9PT1iLnRhZyYmKGE9Yi5zdGF0ZU5vZGUsYi5tZW1vaXplZFByb3BzPWEucHJvcHMsYi5tZW1vaXplZFN0YXRlPWEuc3RhdGUpO3JldHVybiBiLmNoaWxkfX19XG5mdW5jdGlvbiBlZihhLGIsYyl7ZnVuY3Rpb24gZChhKXthLmVmZmVjdFRhZ3w9NH12YXIgZT1hLmNyZWF0ZUluc3RhbmNlLGY9YS5jcmVhdGVUZXh0SW5zdGFuY2UsZz1hLmFwcGVuZEluaXRpYWxDaGlsZCxoPWEuZmluYWxpemVJbml0aWFsQ2hpbGRyZW4saz1hLnByZXBhcmVVcGRhdGUscT1hLnBlcnNpc3RlbmNlLHY9Yi5nZXRSb290SG9zdENvbnRhaW5lcix5PWIucG9wSG9zdENvbnRleHQsdT1iLmdldEhvc3RDb250ZXh0LHo9Yi5wb3BIb3N0Q29udGFpbmVyLEc9Yy5wcmVwYXJlVG9IeWRyYXRlSG9zdEluc3RhbmNlLEk9Yy5wcmVwYXJlVG9IeWRyYXRlSG9zdFRleHRJbnN0YW5jZSxMPWMucG9wSHlkcmF0aW9uU3RhdGUsTj12b2lkIDAsSj12b2lkIDAsdz12b2lkIDA7YS5tdXRhdGlvbj8oTj1mdW5jdGlvbigpe30sSj1mdW5jdGlvbihhLGIsYyl7KGIudXBkYXRlUXVldWU9YykmJmQoYil9LHc9ZnVuY3Rpb24oYSxiLGMsZSl7YyE9PWUmJmQoYil9KTpxP0UoXCIyMzVcIik6RShcIjIzNlwiKTtcbnJldHVybntjb21wbGV0ZVdvcms6ZnVuY3Rpb24oYSxiLGMpe3ZhciBtPWIucGVuZGluZ1Byb3BzO2lmKG51bGw9PT1tKW09Yi5tZW1vaXplZFByb3BzO2Vsc2UgaWYoMjE0NzQ4MzY0NyE9PWIuZXhwaXJhdGlvblRpbWV8fDIxNDc0ODM2NDc9PT1jKWIucGVuZGluZ1Byb3BzPW51bGw7c3dpdGNoKGIudGFnKXtjYXNlIDE6cmV0dXJuIG51bGw7Y2FzZSAyOnJldHVybiBuZShiKSxudWxsO2Nhc2UgMzp6KGIpO1YoWCxiKTtWKGllLGIpO209Yi5zdGF0ZU5vZGU7bS5wZW5kaW5nQ29udGV4dCYmKG0uY29udGV4dD1tLnBlbmRpbmdDb250ZXh0LG0ucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKUwoYiksYi5lZmZlY3RUYWcmPS0zO04oYik7cmV0dXJuIG51bGw7Y2FzZSA1OnkoYik7Yz12KCk7dmFyIEE9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSl7dmFyIHA9YS5tZW1vaXplZFByb3BzLHE9Yi5zdGF0ZU5vZGUseD11KCk7cT1cbmsocSxBLHAsbSxjLHgpO0ooYSxiLHEsQSxwLG0sYyk7YS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfWVsc2V7aWYoIW0pcmV0dXJuIG51bGw9PT1iLnN0YXRlTm9kZT9FKFwiMTY2XCIpOnZvaWQgMCxudWxsO2E9dSgpO2lmKEwoYikpRyhiLGMsYSkmJmQoYik7ZWxzZXthPWUoQSxtLGMsYSxiKTthOmZvcihwPWIuY2hpbGQ7bnVsbCE9PXA7KXtpZig1PT09cC50YWd8fDY9PT1wLnRhZylnKGEscC5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PXAudGFnJiZudWxsIT09cC5jaGlsZCl7cC5jaGlsZFtcInJldHVyblwiXT1wO3A9cC5jaGlsZDtjb250aW51ZX1pZihwPT09YilicmVhaztmb3IoO251bGw9PT1wLnNpYmxpbmc7KXtpZihudWxsPT09cFtcInJldHVyblwiXXx8cFtcInJldHVyblwiXT09PWIpYnJlYWsgYTtwPXBbXCJyZXR1cm5cIl19cC5zaWJsaW5nW1wicmV0dXJuXCJdPXBbXCJyZXR1cm5cIl07cD1wLnNpYmxpbmd9aChhLEEsbSxjKSYmZChiKTtiLnN0YXRlTm9kZT1hfW51bGwhPT1iLnJlZiYmXG4oYi5lZmZlY3RUYWd8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKXcoYSxiLGEubWVtb2l6ZWRQcm9wcyxtKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgbSlyZXR1cm4gbnVsbD09PWIuc3RhdGVOb2RlP0UoXCIxNjZcIik6dm9pZCAwLG51bGw7YT12KCk7Yz11KCk7TChiKT9JKGIpJiZkKGIpOmIuc3RhdGVOb2RlPWYobSxhLGMsYil9cmV0dXJuIG51bGw7Y2FzZSA3OihtPWIubWVtb2l6ZWRQcm9wcyk/dm9pZCAwOkUoXCIxNjVcIik7Yi50YWc9ODtBPVtdO2E6Zm9yKChwPWIuc3RhdGVOb2RlKSYmKHBbXCJyZXR1cm5cIl09Yik7bnVsbCE9PXA7KXtpZig1PT09cC50YWd8fDY9PT1wLnRhZ3x8ND09PXAudGFnKUUoXCIyNDdcIik7ZWxzZSBpZig5PT09cC50YWcpQS5wdXNoKHAudHlwZSk7ZWxzZSBpZihudWxsIT09cC5jaGlsZCl7cC5jaGlsZFtcInJldHVyblwiXT1wO3A9cC5jaGlsZDtjb250aW51ZX1mb3IoO251bGw9PT1wLnNpYmxpbmc7KXtpZihudWxsPT09XG5wW1wicmV0dXJuXCJdfHxwW1wicmV0dXJuXCJdPT09YilicmVhayBhO3A9cFtcInJldHVyblwiXX1wLnNpYmxpbmdbXCJyZXR1cm5cIl09cFtcInJldHVyblwiXTtwPXAuc2libGluZ31wPW0uaGFuZGxlcjttPXAobS5wcm9wcyxBKTtiLmNoaWxkPWJmKGIsbnVsbCE9PWE/YS5jaGlsZDpudWxsLG0sYyk7cmV0dXJuIGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBiLnRhZz03LG51bGw7Y2FzZSA5OnJldHVybiBudWxsO2Nhc2UgMTA6cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiB6KGIpLE4oYiksbnVsbDtjYXNlIDA6RShcIjE2N1wiKTtkZWZhdWx0OkUoXCIxNTZcIil9fX19XG5mdW5jdGlvbiBmZihhLGIpe2Z1bmN0aW9uIGMoYSl7dmFyIGM9YS5yZWY7aWYobnVsbCE9PWMpdHJ5e2MobnVsbCl9Y2F0Y2goQSl7YihhLEEpfX1mdW5jdGlvbiBkKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBFZSYmRWUoYSk7c3dpdGNoKGEudGFnKXtjYXNlIDI6YyhhKTt2YXIgZD1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7ZC5wcm9wcz1hLm1lbW9pemVkUHJvcHMsZC5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsZC5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKEEpe2IoYSxBKX1icmVhaztjYXNlIDU6YyhhKTticmVhaztjYXNlIDc6ZShhLnN0YXRlTm9kZSk7YnJlYWs7Y2FzZSA0OmsmJmcoYSl9fWZ1bmN0aW9uIGUoYSl7Zm9yKHZhciBiPWE7OylpZihkKGIpLG51bGw9PT1iLmNoaWxkfHxrJiY0PT09Yi50YWcpe2lmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iW1wicmV0dXJuXCJdfHxcbmJbXCJyZXR1cm5cIl09PT1hKXJldHVybjtiPWJbXCJyZXR1cm5cIl19Yi5zaWJsaW5nW1wicmV0dXJuXCJdPWJbXCJyZXR1cm5cIl07Yj1iLnNpYmxpbmd9ZWxzZSBiLmNoaWxkW1wicmV0dXJuXCJdPWIsYj1iLmNoaWxkfWZ1bmN0aW9uIGYoYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9ZnVuY3Rpb24gZyhhKXtmb3IodmFyIGI9YSxjPSExLGY9dm9pZCAwLGc9dm9pZCAwOzspe2lmKCFjKXtjPWJbXCJyZXR1cm5cIl07YTpmb3IoOzspe251bGw9PT1jP0UoXCIxNjBcIik6dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmY9Yy5zdGF0ZU5vZGU7Zz0hMTticmVhayBhO2Nhc2UgMzpmPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhO2Nhc2UgNDpmPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhfWM9Y1tcInJldHVyblwiXX1jPSEwfWlmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKWUoYiksZz9KKGYsYi5zdGF0ZU5vZGUpOk4oZixiLnN0YXRlTm9kZSk7XG5lbHNlIGlmKDQ9PT1iLnRhZz9mPWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86ZChiKSxudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZFtcInJldHVyblwiXT1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09YltcInJldHVyblwiXXx8YltcInJldHVyblwiXT09PWEpcmV0dXJuO2I9YltcInJldHVyblwiXTs0PT09Yi50YWcmJihjPSExKX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ319dmFyIGg9YS5nZXRQdWJsaWNJbnN0YW5jZSxrPWEubXV0YXRpb247YT1hLnBlcnNpc3RlbmNlO2t8fChhP0UoXCIyMzVcIik6RShcIjIzNlwiKSk7dmFyIHE9ay5jb21taXRNb3VudCx2PWsuY29tbWl0VXBkYXRlLHk9ay5yZXNldFRleHRDb250ZW50LHU9ay5jb21taXRUZXh0VXBkYXRlLHo9ay5hcHBlbmRDaGlsZCxHPWsuYXBwZW5kQ2hpbGRUb0NvbnRhaW5lcixJPWsuaW5zZXJ0QmVmb3JlLEw9ay5pbnNlcnRJbkNvbnRhaW5lckJlZm9yZSxcbk49ay5yZW1vdmVDaGlsZCxKPWsucmVtb3ZlQ2hpbGRGcm9tQ29udGFpbmVyO3JldHVybntjb21taXRSZXNldFRleHRDb250ZW50OmZ1bmN0aW9uKGEpe3koYS5zdGF0ZU5vZGUpfSxjb21taXRQbGFjZW1lbnQ6ZnVuY3Rpb24oYSl7YTp7Zm9yKHZhciBiPWFbXCJyZXR1cm5cIl07bnVsbCE9PWI7KXtpZihmKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iW1wicmV0dXJuXCJdfUUoXCIxNjBcIik7Yz12b2lkIDB9dmFyIGQ9Yj12b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6Yj1jLnN0YXRlTm9kZTtkPSExO2JyZWFrO2Nhc2UgMzpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDpFKFwiMTYxXCIpfWMuZWZmZWN0VGFnJjE2JiYoeShiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Y1tcInJldHVyblwiXXx8ZihjW1wicmV0dXJuXCJdKSl7Yz1cbm51bGw7YnJlYWsgYX1jPWNbXCJyZXR1cm5cIl19Yy5zaWJsaW5nW1wicmV0dXJuXCJdPWNbXCJyZXR1cm5cIl07Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO2lmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGRbXCJyZXR1cm5cIl09YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXtpZig1PT09ZS50YWd8fDY9PT1lLnRhZyljP2Q/TChiLGUuc3RhdGVOb2RlLGMpOkkoYixlLnN0YXRlTm9kZSxjKTpkP0coYixlLnN0YXRlTm9kZSk6eihiLGUuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGRbXCJyZXR1cm5cIl09ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWVbXCJyZXR1cm5cIl18fGVbXCJyZXR1cm5cIl09PT1cbmEpcmV0dXJuO2U9ZVtcInJldHVyblwiXX1lLnNpYmxpbmdbXCJyZXR1cm5cIl09ZVtcInJldHVyblwiXTtlPWUuc2libGluZ319LGNvbW1pdERlbGV0aW9uOmZ1bmN0aW9uKGEpe2coYSk7YVtcInJldHVyblwiXT1udWxsO2EuY2hpbGQ9bnVsbDthLmFsdGVybmF0ZSYmKGEuYWx0ZXJuYXRlLmNoaWxkPW51bGwsYS5hbHRlcm5hdGVbXCJyZXR1cm5cIl09bnVsbCl9LGNvbW1pdFdvcms6ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMjpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzO2E9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7dmFyIGU9Yi50eXBlLGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7bnVsbCE9PWYmJnYoYyxmLGUsYSxkLGIpfWJyZWFrO2Nhc2UgNjpudWxsPT09Yi5zdGF0ZU5vZGU/RShcIjE2MlwiKTp2b2lkIDA7Yz1iLm1lbW9pemVkUHJvcHM7dShiLnN0YXRlTm9kZSxudWxsIT09YT9hLm1lbW9pemVkUHJvcHM6XG5jLGMpO2JyZWFrO2Nhc2UgMzpicmVhaztkZWZhdWx0OkUoXCIxNjNcIil9fSxjb21taXRMaWZlQ3ljbGVzOmZ1bmN0aW9uKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDI6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYoYi5lZmZlY3RUYWcmNClpZihudWxsPT09YSljLnByb3BzPWIubWVtb2l6ZWRQcm9wcyxjLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxjLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgZD1hLm1lbW9pemVkUHJvcHM7YT1hLm1lbW9pemVkU3RhdGU7Yy5wcm9wcz1iLm1lbW9pemVkUHJvcHM7Yy5zdGF0ZT1iLm1lbW9pemVkU3RhdGU7Yy5jb21wb25lbnREaWRVcGRhdGUoZCxhKX1iPWIudXBkYXRlUXVldWU7bnVsbCE9PWImJktlKGIsYyk7YnJlYWs7Y2FzZSAzOmM9Yi51cGRhdGVRdWV1ZTtudWxsIT09YyYmS2UoYyxudWxsIT09Yi5jaGlsZD9iLmNoaWxkLnN0YXRlTm9kZTpudWxsKTticmVhaztjYXNlIDU6Yz1iLnN0YXRlTm9kZTtudWxsPT09YSYmYi5lZmZlY3RUYWcmNCYmcShjLFxuYi50eXBlLGIubWVtb2l6ZWRQcm9wcyxiKTticmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2RlZmF1bHQ6RShcIjE2M1wiKX19LGNvbW1pdEF0dGFjaFJlZjpmdW5jdGlvbihhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09Yil7dmFyIGM9YS5zdGF0ZU5vZGU7c3dpdGNoKGEudGFnKXtjYXNlIDU6YihoKGMpKTticmVhaztkZWZhdWx0OmIoYyl9fX0sY29tbWl0RGV0YWNoUmVmOmZ1bmN0aW9uKGEpe2E9YS5yZWY7bnVsbCE9PWEmJmEobnVsbCl9fX12YXIgZ2Y9e307XG5mdW5jdGlvbiBoZihhKXtmdW5jdGlvbiBiKGEpe2E9PT1nZj9FKFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX12YXIgYz1hLmdldENoaWxkSG9zdENvbnRleHQsZD1hLmdldFJvb3RIb3N0Q29udGV4dCxlPXtjdXJyZW50OmdmfSxmPXtjdXJyZW50OmdmfSxnPXtjdXJyZW50OmdmfTtyZXR1cm57Z2V0SG9zdENvbnRleHQ6ZnVuY3Rpb24oKXtyZXR1cm4gYihlLmN1cnJlbnQpfSxnZXRSb290SG9zdENvbnRhaW5lcjpmdW5jdGlvbigpe3JldHVybiBiKGcuY3VycmVudCl9LHBvcEhvc3RDb250YWluZXI6ZnVuY3Rpb24oYSl7VihlLGEpO1YoZixhKTtWKGcsYSl9LHBvcEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEpe2YuY3VycmVudD09PWEmJihWKGUsYSksVihmLGEpKX0scHVzaEhvc3RDb250YWluZXI6ZnVuY3Rpb24oYSxiKXtXKGcsYixhKTtiPWQoYik7VyhmLGEsYSk7VyhlLGIsYSl9LHB1c2hIb3N0Q29udGV4dDpmdW5jdGlvbihhKXt2YXIgZD1iKGcuY3VycmVudCksaD1iKGUuY3VycmVudCk7XG5kPWMoaCxhLnR5cGUsZCk7aCE9PWQmJihXKGYsYSxhKSxXKGUsZCxhKSl9LHJlc2V0SG9zdENvbnRhaW5lcjpmdW5jdGlvbigpe2UuY3VycmVudD1nZjtnLmN1cnJlbnQ9Z2Z9fX1cbmZ1bmN0aW9uIGpmKGEpe2Z1bmN0aW9uIGIoYSxiKXt2YXIgYz1uZXcgWSg1LG51bGwsMCk7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Y1tcInJldHVyblwiXT1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBjKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIGI9ZihiLGEudHlwZSxhLnBlbmRpbmdQcm9wcyksbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1nKGIsYS5wZW5kaW5nUHJvcHMpLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBkKGEpe2ZvcihhPWFbXCJyZXR1cm5cIl07bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnOylhPWFbXCJyZXR1cm5cIl07eT1hfXZhciBlPWEuc2hvdWxkU2V0VGV4dENvbnRlbnQ7XG5hPWEuaHlkcmF0aW9uO2lmKCFhKXJldHVybntlbnRlckh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuITF9LHJlc2V0SHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oKXt9LHRyeVRvQ2xhaW1OZXh0SHlkcmF0YWJsZUluc3RhbmNlOmZ1bmN0aW9uKCl7fSxwcmVwYXJlVG9IeWRyYXRlSG9zdEluc3RhbmNlOmZ1bmN0aW9uKCl7RShcIjE3NVwiKX0scHJlcGFyZVRvSHlkcmF0ZUhvc3RUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oKXtFKFwiMTc2XCIpfSxwb3BIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbigpe3JldHVybiExfX07dmFyIGY9YS5jYW5IeWRyYXRlSW5zdGFuY2UsZz1hLmNhbkh5ZHJhdGVUZXh0SW5zdGFuY2UsaD1hLmdldE5leHRIeWRyYXRhYmxlU2libGluZyxrPWEuZ2V0Rmlyc3RIeWRyYXRhYmxlQ2hpbGQscT1hLmh5ZHJhdGVJbnN0YW5jZSx2PWEuaHlkcmF0ZVRleHRJbnN0YW5jZSx5PW51bGwsdT1udWxsLHo9ITE7cmV0dXJue2VudGVySHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oYSl7dT1cbmsoYS5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7eT1hO3JldHVybiB6PSEwfSxyZXNldEh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKCl7dT15PW51bGw7ej0hMX0sdHJ5VG9DbGFpbU5leHRIeWRyYXRhYmxlSW5zdGFuY2U6ZnVuY3Rpb24oYSl7aWYoeil7dmFyIGQ9dTtpZihkKXtpZighYyhhLGQpKXtkPWgoZCk7aWYoIWR8fCFjKGEsZCkpe2EuZWZmZWN0VGFnfD0yO3o9ITE7eT1hO3JldHVybn1iKHksdSl9eT1hO3U9ayhkKX1lbHNlIGEuZWZmZWN0VGFnfD0yLHo9ITEseT1hfX0scHJlcGFyZVRvSHlkcmF0ZUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyl7Yj1xKGEuc3RhdGVOb2RlLGEudHlwZSxhLm1lbW9pemVkUHJvcHMsYixjLGEpO2EudXBkYXRlUXVldWU9YjtyZXR1cm4gbnVsbCE9PWI/ITA6ITF9LHByZXBhcmVUb0h5ZHJhdGVIb3N0VGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiB2KGEuc3RhdGVOb2RlLGEubWVtb2l6ZWRQcm9wcyxhKX0scG9wSHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oYSl7aWYoYSE9PVxueSlyZXR1cm4hMTtpZigheilyZXR1cm4gZChhKSx6PSEwLCExO3ZhciBjPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YyYmXCJib2R5XCIhPT1jJiYhZShjLGEubWVtb2l6ZWRQcm9wcykpZm9yKGM9dTtjOyliKGEsYyksYz1oKGMpO2QoYSk7dT15P2goYS5zdGF0ZU5vZGUpOm51bGw7cmV0dXJuITB9fX1cbmZ1bmN0aW9uIGtmKGEpe2Z1bmN0aW9uIGIoYSl7UWI9amE9ITA7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5jdXJyZW50PT09YT9FKFwiMTc3XCIpOnZvaWQgMDtiLmlzUmVhZHlGb3JDb21taXQ9ITE7aWQuY3VycmVudD1udWxsO2lmKDE8YS5lZmZlY3RUYWcpaWYobnVsbCE9PWEubGFzdEVmZmVjdCl7YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTt2YXIgYz1hLmZpcnN0RWZmZWN0fWVsc2UgYz1hO2Vsc2UgYz1hLmZpcnN0RWZmZWN0O3lnKCk7Zm9yKHQ9YztudWxsIT09dDspe3ZhciBkPSExLGU9dm9pZCAwO3RyeXtmb3IoO251bGwhPT10Oyl7dmFyIGY9dC5lZmZlY3RUYWc7ZiYxNiYmemcodCk7aWYoZiYxMjgpe3ZhciBnPXQuYWx0ZXJuYXRlO251bGwhPT1nJiZBZyhnKX1zd2l0Y2goZiYtMjQyKXtjYXNlIDI6TmUodCk7dC5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpOZSh0KTt0LmVmZmVjdFRhZyY9LTM7T2UodC5hbHRlcm5hdGUsdCk7YnJlYWs7Y2FzZSA0Ok9lKHQuYWx0ZXJuYXRlLFxudCk7YnJlYWs7Y2FzZSA4OlNjPSEwLEJnKHQpLFNjPSExfXQ9dC5uZXh0RWZmZWN0fX1jYXRjaChUYyl7ZD0hMCxlPVRjfWQmJihudWxsPT09dD9FKFwiMTc4XCIpOnZvaWQgMCxoKHQsZSksbnVsbCE9PXQmJih0PXQubmV4dEVmZmVjdCkpfUNnKCk7Yi5jdXJyZW50PWE7Zm9yKHQ9YztudWxsIT09dDspe2M9ITE7ZD12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PXQ7KXt2YXIgaz10LmVmZmVjdFRhZztrJjM2JiZEZyh0LmFsdGVybmF0ZSx0KTtrJjEyOCYmRWcodCk7aWYoayY2NClzd2l0Y2goZT10LGY9dm9pZCAwLG51bGwhPT1SJiYoZj1SLmdldChlKSxSW1wiZGVsZXRlXCJdKGUpLG51bGw9PWYmJm51bGwhPT1lLmFsdGVybmF0ZSYmKGU9ZS5hbHRlcm5hdGUsZj1SLmdldChlKSxSW1wiZGVsZXRlXCJdKGUpKSksbnVsbD09Zj9FKFwiMTg0XCIpOnZvaWQgMCxlLnRhZyl7Y2FzZSAyOmUuc3RhdGVOb2RlLmNvbXBvbmVudERpZENhdGNoKGYuZXJyb3Ise2NvbXBvbmVudFN0YWNrOmYuY29tcG9uZW50U3RhY2t9KTtcbmJyZWFrO2Nhc2UgMzpudWxsPT09Y2EmJihjYT1mLmVycm9yKTticmVhaztkZWZhdWx0OkUoXCIxNTdcIil9dmFyIFFjPXQubmV4dEVmZmVjdDt0Lm5leHRFZmZlY3Q9bnVsbDt0PVFjfX1jYXRjaChUYyl7Yz0hMCxkPVRjfWMmJihudWxsPT09dD9FKFwiMTc4XCIpOnZvaWQgMCxoKHQsZCksbnVsbCE9PXQmJih0PXQubmV4dEVmZmVjdCkpfWphPVFiPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBEZSYmRGUoYS5zdGF0ZU5vZGUpO2hhJiYoaGEuZm9yRWFjaChHKSxoYT1udWxsKTtudWxsIT09Y2EmJihhPWNhLGNhPW51bGwsT2IoYSkpO2I9Yi5jdXJyZW50LmV4cGlyYXRpb25UaW1lOzA9PT1iJiYocWE9Uj1udWxsKTtyZXR1cm4gYn1mdW5jdGlvbiBjKGEpe2Zvcig7Oyl7dmFyIGI9RmcoYS5hbHRlcm5hdGUsYSxIKSxjPWFbXCJyZXR1cm5cIl0sZD1hLnNpYmxpbmc7dmFyIGU9YTtpZigyMTQ3NDgzNjQ3PT09SHx8MjE0NzQ4MzY0NyE9PWUuZXhwaXJhdGlvblRpbWUpe2lmKDIhPT1lLnRhZyYmMyE9PVxuZS50YWcpdmFyIGY9MDtlbHNlIGY9ZS51cGRhdGVRdWV1ZSxmPW51bGw9PT1mPzA6Zi5leHBpcmF0aW9uVGltZTtmb3IodmFyIGc9ZS5jaGlsZDtudWxsIT09ZzspMCE9PWcuZXhwaXJhdGlvblRpbWUmJigwPT09Znx8Zj5nLmV4cGlyYXRpb25UaW1lKSYmKGY9Zy5leHBpcmF0aW9uVGltZSksZz1nLnNpYmxpbmc7ZS5leHBpcmF0aW9uVGltZT1mfWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1jJiYobnVsbD09PWMuZmlyc3RFZmZlY3QmJihjLmZpcnN0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLG51bGwhPT1hLmxhc3RFZmZlY3QmJihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksMTxhLmVmZmVjdFRhZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKTtpZihudWxsIT09ZClyZXR1cm4gZDtcbmlmKG51bGwhPT1jKWE9YztlbHNle2Euc3RhdGVOb2RlLmlzUmVhZHlGb3JDb21taXQ9ITA7YnJlYWt9fXJldHVybiBudWxsfWZ1bmN0aW9uIGQoYSl7dmFyIGI9cmcoYS5hbHRlcm5hdGUsYSxIKTtudWxsPT09YiYmKGI9YyhhKSk7aWQuY3VycmVudD1udWxsO3JldHVybiBifWZ1bmN0aW9uIGUoYSl7dmFyIGI9R2coYS5hbHRlcm5hdGUsYSxIKTtudWxsPT09YiYmKGI9YyhhKSk7aWQuY3VycmVudD1udWxsO3JldHVybiBifWZ1bmN0aW9uIGYoYSl7aWYobnVsbCE9PVIpe2lmKCEoMD09PUh8fEg+YSkpaWYoSDw9VWMpZm9yKDtudWxsIT09RjspRj1rKEYpP2UoRik6ZChGKTtlbHNlIGZvcig7bnVsbCE9PUYmJiFBKCk7KUY9ayhGKT9lKEYpOmQoRil9ZWxzZSBpZighKDA9PT1IfHxIPmEpKWlmKEg8PVVjKWZvcig7bnVsbCE9PUY7KUY9ZChGKTtlbHNlIGZvcig7bnVsbCE9PUYmJiFBKCk7KUY9ZChGKX1mdW5jdGlvbiBnKGEsYil7amE/RShcIjI0M1wiKTp2b2lkIDA7amE9ITA7YS5pc1JlYWR5Rm9yQ29tbWl0PVxuITE7aWYoYSE9PXJhfHxiIT09SHx8bnVsbD09PUYpe2Zvcig7LTE8aGU7KWdlW2hlXT1udWxsLGhlLS07amU9RDtpZS5jdXJyZW50PUQ7WC5jdXJyZW50PSExO3goKTtyYT1hO0g9YjtGPXNlKHJhLmN1cnJlbnQsbnVsbCxiKX12YXIgYz0hMSxkPW51bGw7dHJ5e2YoYil9Y2F0Y2goUmMpe2M9ITAsZD1SY31mb3IoO2M7KXtpZihlYil7Y2E9ZDticmVha312YXIgZz1GO2lmKG51bGw9PT1nKWViPSEwO2Vsc2V7dmFyIGs9aChnLGQpO251bGw9PT1rP0UoXCIxODNcIik6dm9pZCAwO2lmKCFlYil7dHJ5e2M9aztkPWI7Zm9yKGs9YztudWxsIT09Zzspe3N3aXRjaChnLnRhZyl7Y2FzZSAyOm5lKGcpO2JyZWFrO2Nhc2UgNTpxZyhnKTticmVhaztjYXNlIDM6cChnKTticmVhaztjYXNlIDQ6cChnKX1pZihnPT09a3x8Zy5hbHRlcm5hdGU9PT1rKWJyZWFrO2c9Z1tcInJldHVyblwiXX1GPWUoYyk7ZihkKX1jYXRjaChSYyl7Yz0hMDtkPVJjO2NvbnRpbnVlfWJyZWFrfX19Yj1jYTtlYj1qYT0hMTtjYT1cbm51bGw7bnVsbCE9PWImJk9iKGIpO3JldHVybiBhLmlzUmVhZHlGb3JDb21taXQ/YS5jdXJyZW50LmFsdGVybmF0ZTpudWxsfWZ1bmN0aW9uIGgoYSxiKXt2YXIgYz1pZC5jdXJyZW50PW51bGwsZD0hMSxlPSExLGY9bnVsbDtpZigzPT09YS50YWcpYz1hLHEoYSkmJihlYj0hMCk7ZWxzZSBmb3IodmFyIGc9YVtcInJldHVyblwiXTtudWxsIT09ZyYmbnVsbD09PWM7KXsyPT09Zy50YWc/XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuc3RhdGVOb2RlLmNvbXBvbmVudERpZENhdGNoJiYoZD0hMCxmPWpkKGcpLGM9ZyxlPSEwKTozPT09Zy50YWcmJihjPWcpO2lmKHEoZykpe2lmKFNjfHxudWxsIT09aGEmJihoYS5oYXMoZyl8fG51bGwhPT1nLmFsdGVybmF0ZSYmaGEuaGFzKGcuYWx0ZXJuYXRlKSkpcmV0dXJuIG51bGw7Yz1udWxsO2U9ITF9Zz1nW1wicmV0dXJuXCJdfWlmKG51bGwhPT1jKXtudWxsPT09cWEmJihxYT1uZXcgU2V0KTtxYS5hZGQoYyk7dmFyIGg9XCJcIjtnPWE7ZG97YTpzd2l0Y2goZy50YWcpe2Nhc2UgMDpjYXNlIDE6Y2FzZSAyOmNhc2UgNTp2YXIgaz1cbmcuX2RlYnVnT3duZXIsUWM9Zy5fZGVidWdTb3VyY2U7dmFyIG09amQoZyk7dmFyIG49bnVsbDtrJiYobj1qZChrKSk7az1RYzttPVwiXFxuICAgIGluIFwiKyhtfHxcIlVua25vd25cIikrKGs/XCIgKGF0IFwiK2suZmlsZU5hbWUucmVwbGFjZSgvXi4qW1xcXFxcXC9dLyxcIlwiKStcIjpcIitrLmxpbmVOdW1iZXIrXCIpXCI6bj9cIiAoY3JlYXRlZCBieSBcIituK1wiKVwiOlwiXCIpO2JyZWFrIGE7ZGVmYXVsdDptPVwiXCJ9aCs9bTtnPWdbXCJyZXR1cm5cIl19d2hpbGUoZyk7Zz1oO2E9amQoYSk7bnVsbD09PVImJihSPW5ldyBNYXApO2I9e2NvbXBvbmVudE5hbWU6YSxjb21wb25lbnRTdGFjazpnLGVycm9yOmIsZXJyb3JCb3VuZGFyeTpkP2Muc3RhdGVOb2RlOm51bGwsZXJyb3JCb3VuZGFyeUZvdW5kOmQsZXJyb3JCb3VuZGFyeU5hbWU6Zix3aWxsUmV0cnk6ZX07Ui5zZXQoYyxiKTt0cnl7dmFyIHA9Yi5lcnJvcjtwJiZwLnN1cHByZXNzUmVhY3RFcnJvckxvZ2dpbmd8fGNvbnNvbGUuZXJyb3IocCl9Y2F0Y2goVmMpe1ZjJiZcblZjLnN1cHByZXNzUmVhY3RFcnJvckxvZ2dpbmd8fGNvbnNvbGUuZXJyb3IoVmMpfVFiPyhudWxsPT09aGEmJihoYT1uZXcgU2V0KSxoYS5hZGQoYykpOkcoYyk7cmV0dXJuIGN9bnVsbD09PWNhJiYoY2E9Yik7cmV0dXJuIG51bGx9ZnVuY3Rpb24gayhhKXtyZXR1cm4gbnVsbCE9PVImJihSLmhhcyhhKXx8bnVsbCE9PWEuYWx0ZXJuYXRlJiZSLmhhcyhhLmFsdGVybmF0ZSkpfWZ1bmN0aW9uIHEoYSl7cmV0dXJuIG51bGwhPT1xYSYmKHFhLmhhcyhhKXx8bnVsbCE9PWEuYWx0ZXJuYXRlJiZxYS5oYXMoYS5hbHRlcm5hdGUpKX1mdW5jdGlvbiB2KCl7cmV0dXJuIDIwKigoKEkoKSsxMDApLzIwfDApKzEpfWZ1bmN0aW9uIHkoYSl7cmV0dXJuIDAhPT1rYT9rYTpqYT9RYj8xOkg6IUhnfHxhLmludGVybmFsQ29udGV4dFRhZyYxP3YoKToxfWZ1bmN0aW9uIHUoYSxiKXtyZXR1cm4geihhLGIsITEpfWZ1bmN0aW9uIHooYSxiKXtmb3IoO251bGwhPT1hOyl7aWYoMD09PWEuZXhwaXJhdGlvblRpbWV8fFxuYS5leHBpcmF0aW9uVGltZT5iKWEuZXhwaXJhdGlvblRpbWU9YjtudWxsIT09YS5hbHRlcm5hdGUmJigwPT09YS5hbHRlcm5hdGUuZXhwaXJhdGlvblRpbWV8fGEuYWx0ZXJuYXRlLmV4cGlyYXRpb25UaW1lPmIpJiYoYS5hbHRlcm5hdGUuZXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWFbXCJyZXR1cm5cIl0paWYoMz09PWEudGFnKXt2YXIgYz1hLnN0YXRlTm9kZTshamEmJmM9PT1yYSYmYjxIJiYoRj1yYT1udWxsLEg9MCk7dmFyIGQ9YyxlPWI7UmI+SWcmJkUoXCIxODVcIik7aWYobnVsbD09PWQubmV4dFNjaGVkdWxlZFJvb3QpZC5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT1lLG51bGw9PT1PPyhzYT1PPWQsZC5uZXh0U2NoZWR1bGVkUm9vdD1kKTooTz1PLm5leHRTY2hlZHVsZWRSb290PWQsTy5uZXh0U2NoZWR1bGVkUm9vdD1zYSk7ZWxzZXt2YXIgZj1kLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lO2lmKDA9PT1mfHxlPGYpZC5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT1lfUZhfHwobGE/XG5TYiYmKG1hPWQsbmE9MSxtKG1hLG5hKSk6MT09PWU/dygxLG51bGwpOkwoZSkpOyFqYSYmYz09PXJhJiZiPEgmJihGPXJhPW51bGwsSD0wKX1lbHNlIGJyZWFrO2E9YVtcInJldHVyblwiXX19ZnVuY3Rpb24gRyhhKXt6KGEsMSwhMCl9ZnVuY3Rpb24gSSgpe3JldHVybiBVYz0oKFdjKCktUGUpLzEwfDApKzJ9ZnVuY3Rpb24gTChhKXtpZigwIT09VGIpe2lmKGE+VGIpcmV0dXJuO0pnKFhjKX12YXIgYj1XYygpLVBlO1RiPWE7WGM9S2coSix7dGltZW91dDoxMCooYS0yKS1ifSl9ZnVuY3Rpb24gTigpe3ZhciBhPTAsYj1udWxsO2lmKG51bGwhPT1PKWZvcih2YXIgYz1PLGQ9c2E7bnVsbCE9PWQ7KXt2YXIgZT1kLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lO2lmKDA9PT1lKXtudWxsPT09Y3x8bnVsbD09PU8/RShcIjI0NFwiKTp2b2lkIDA7aWYoZD09PWQubmV4dFNjaGVkdWxlZFJvb3Qpe3NhPU89ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgaWYoZD09PXNhKXNhPWU9ZC5uZXh0U2NoZWR1bGVkUm9vdCxcbk8ubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09Tyl7Tz1jO08ubmV4dFNjaGVkdWxlZFJvb3Q9c2E7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtpZigwPT09YXx8ZTxhKWE9ZSxiPWQ7aWYoZD09PU8pYnJlYWs7Yz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19Yz1tYTtudWxsIT09YyYmYz09PWI/UmIrKzpSYj0wO21hPWI7bmE9YX1mdW5jdGlvbiBKKGEpe3coMCxhKX1mdW5jdGlvbiB3KGEsYil7ZmI9Yjtmb3IoTigpO251bGwhPT1tYSYmMCE9PW5hJiYoMD09PWF8fG5hPD1hKSYmIVljOyltKG1hLG5hKSxOKCk7bnVsbCE9PWZiJiYoVGI9MCxYYz0tMSk7MCE9PW5hJiZMKG5hKTtmYj1udWxsO1ljPSExO1JiPTA7aWYoVWIpdGhyb3cgYT1aYyxaYz1cbm51bGwsVWI9ITEsYTt9ZnVuY3Rpb24gbShhLGMpe0ZhP0UoXCIyNDVcIik6dm9pZCAwO0ZhPSEwO2lmKGM8PUkoKSl7dmFyIGQ9YS5maW5pc2hlZFdvcms7bnVsbCE9PWQ/KGEuZmluaXNoZWRXb3JrPW51bGwsYS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT1iKGQpKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWcoYSxjKSxudWxsIT09ZCYmKGEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9YihkKSkpfWVsc2UgZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZD8oYS5maW5pc2hlZFdvcms9bnVsbCxhLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWIoZCkpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9ZyhhLGMpLG51bGwhPT1kJiYoQSgpP2EuZmluaXNoZWRXb3JrPWQ6YS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT1iKGQpKSk7RmE9ITF9ZnVuY3Rpb24gQSgpe3JldHVybiBudWxsPT09ZmJ8fGZiLnRpbWVSZW1haW5pbmcoKT5MZz8hMTpZYz0hMH1mdW5jdGlvbiBPYihhKXtudWxsPT09bWE/RShcIjI0NlwiKTpcbnZvaWQgMDttYS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT0wO1VifHwoVWI9ITAsWmM9YSl9dmFyIHI9aGYoYSksbj1qZihhKSxwPXIucG9wSG9zdENvbnRhaW5lcixxZz1yLnBvcEhvc3RDb250ZXh0LHg9ci5yZXNldEhvc3RDb250YWluZXIsTWU9ZGYoYSxyLG4sdSx5KSxyZz1NZS5iZWdpbldvcmssR2c9TWUuYmVnaW5GYWlsZWRXb3JrLEZnPWVmKGEscixuKS5jb21wbGV0ZVdvcms7cj1mZihhLGgpO3ZhciB6Zz1yLmNvbW1pdFJlc2V0VGV4dENvbnRlbnQsTmU9ci5jb21taXRQbGFjZW1lbnQsQmc9ci5jb21taXREZWxldGlvbixPZT1yLmNvbW1pdFdvcmssRGc9ci5jb21taXRMaWZlQ3ljbGVzLEVnPXIuY29tbWl0QXR0YWNoUmVmLEFnPXIuY29tbWl0RGV0YWNoUmVmLFdjPWEubm93LEtnPWEuc2NoZWR1bGVEZWZlcnJlZENhbGxiYWNrLEpnPWEuY2FuY2VsRGVmZXJyZWRDYWxsYmFjayxIZz1hLnVzZVN5bmNTY2hlZHVsaW5nLHlnPWEucHJlcGFyZUZvckNvbW1pdCxDZz1hLnJlc2V0QWZ0ZXJDb21taXQsXG5QZT1XYygpLFVjPTIsa2E9MCxqYT0hMSxGPW51bGwscmE9bnVsbCxIPTAsdD1udWxsLFI9bnVsbCxxYT1udWxsLGhhPW51bGwsY2E9bnVsbCxlYj0hMSxRYj0hMSxTYz0hMSxzYT1udWxsLE89bnVsbCxUYj0wLFhjPS0xLEZhPSExLG1hPW51bGwsbmE9MCxZYz0hMSxVYj0hMSxaYz1udWxsLGZiPW51bGwsbGE9ITEsU2I9ITEsSWc9MUUzLFJiPTAsTGc9MTtyZXR1cm57Y29tcHV0ZUFzeW5jRXhwaXJhdGlvbjp2LGNvbXB1dGVFeHBpcmF0aW9uRm9yRmliZXI6eSxzY2hlZHVsZVdvcms6dSxiYXRjaGVkVXBkYXRlczpmdW5jdGlvbihhLGIpe3ZhciBjPWxhO2xhPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5eyhsYT1jKXx8RmF8fHcoMSxudWxsKX19LHVuYmF0Y2hlZFVwZGF0ZXM6ZnVuY3Rpb24oYSl7aWYobGEmJiFTYil7U2I9ITA7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtTYj0hMX19cmV0dXJuIGEoKX0sZmx1c2hTeW5jOmZ1bmN0aW9uKGEpe3ZhciBiPWxhO2xhPSEwO3RyeXthOnt2YXIgYz1cbmthO2thPTE7dHJ5e3ZhciBkPWEoKTticmVhayBhfWZpbmFsbHl7a2E9Y31kPXZvaWQgMH1yZXR1cm4gZH1maW5hbGx5e2xhPWIsRmE/RShcIjE4N1wiKTp2b2lkIDAsdygxLG51bGwpfX0sZGVmZXJyZWRVcGRhdGVzOmZ1bmN0aW9uKGEpe3ZhciBiPWthO2thPXYoKTt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e2thPWJ9fX19XG5mdW5jdGlvbiBsZihhKXtmdW5jdGlvbiBiKGEpe2E9b2QoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9dmFyIGM9YS5nZXRQdWJsaWNJbnN0YW5jZTthPWtmKGEpO3ZhciBkPWEuY29tcHV0ZUFzeW5jRXhwaXJhdGlvbixlPWEuY29tcHV0ZUV4cGlyYXRpb25Gb3JGaWJlcixmPWEuc2NoZWR1bGVXb3JrO3JldHVybntjcmVhdGVDb250YWluZXI6ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZXcgWSgzLG51bGwsMCk7YT17Y3VycmVudDpjLGNvbnRhaW5lckluZm86YSxwZW5kaW5nQ2hpbGRyZW46bnVsbCxyZW1haW5pbmdFeHBpcmF0aW9uVGltZTowLGlzUmVhZHlGb3JDb21taXQ6ITEsZmluaXNoZWRXb3JrOm51bGwsY29udGV4dDpudWxsLHBlbmRpbmdDb250ZXh0Om51bGwsaHlkcmF0ZTpiLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3JldHVybiBjLnN0YXRlTm9kZT1hfSx1cGRhdGVDb250YWluZXI6ZnVuY3Rpb24oYSxiLGMscSl7dmFyIGc9Yi5jdXJyZW50O2lmKGMpe2M9XG5jLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGg7Yjp7Mj09PWtkKGMpJiYyPT09Yy50YWc/dm9pZCAwOkUoXCIxNzBcIik7Zm9yKGg9YzszIT09aC50YWc7KXtpZihsZShoKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifShoPWhbXCJyZXR1cm5cIl0pP3ZvaWQgMDpFKFwiMTcxXCIpfWg9aC5zdGF0ZU5vZGUuY29udGV4dH1jPWxlKGMpP3BlKGMsaCk6aH1lbHNlIGM9RDtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXE7Yj12b2lkIDA9PT1iP251bGw6YjtxPW51bGwhPWEmJm51bGwhPWEudHlwZSYmbnVsbCE9YS50eXBlLnByb3RvdHlwZSYmITA9PT1hLnR5cGUucHJvdG90eXBlLnVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudD9kKCk6ZShnKTtIZShnLHtleHBpcmF0aW9uVGltZTpxLHBhcnRpYWxTdGF0ZTp7ZWxlbWVudDphfSxjYWxsYmFjazpiLGlzUmVwbGFjZTohMSxpc0ZvcmNlZDohMSxcbm5leHRDYWxsYmFjazpudWxsLG5leHQ6bnVsbH0pO2YoZyxxKX0sYmF0Y2hlZFVwZGF0ZXM6YS5iYXRjaGVkVXBkYXRlcyx1bmJhdGNoZWRVcGRhdGVzOmEudW5iYXRjaGVkVXBkYXRlcyxkZWZlcnJlZFVwZGF0ZXM6YS5kZWZlcnJlZFVwZGF0ZXMsZmx1c2hTeW5jOmEuZmx1c2hTeW5jLGdldFB1YmxpY1Jvb3RJbnN0YW5jZTpmdW5jdGlvbihhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYyhhLmNoaWxkLnN0YXRlTm9kZSk7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fSxmaW5kSG9zdEluc3RhbmNlOmIsZmluZEhvc3RJbnN0YW5jZVdpdGhOb1BvcnRhbHM6ZnVuY3Rpb24oYSl7YT1wZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0saW5qZWN0SW50b0RldlRvb2xzOmZ1bmN0aW9uKGEpe3ZhciBjPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIENlKEIoe30sXG5hLHtmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXtyZXR1cm4gYihhKX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGM/YyhhKTpudWxsfX0pKX19fXZhciBtZj1PYmplY3QuZnJlZXplKHtkZWZhdWx0OmxmfSksbmY9bWYmJmxmfHxtZixvZj1uZltcImRlZmF1bHRcIl0/bmZbXCJkZWZhdWx0XCJdOm5mO2Z1bmN0aW9uIHBmKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6VWUsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319dmFyIHFmPVwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cscmY9dm9pZCAwO3JmPXFmP2Z1bmN0aW9uKCl7cmV0dXJuIHBlcmZvcm1hbmNlLm5vdygpfTpmdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpfTtcbnZhciBzZj12b2lkIDAsdGY9dm9pZCAwO1xuaWYobC5jYW5Vc2VET00paWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHJlcXVlc3RJZGxlQ2FsbGJhY2t8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjYW5jZWxJZGxlQ2FsbGJhY2spe3ZhciB1Zj1udWxsLHZmPSExLHdmPS0xLHhmPSExLHlmPTAsemY9MzMsQWY9MzMsQmY7QmY9cWY/e2RpZFRpbWVvdXQ6ITEsdGltZVJlbWFpbmluZzpmdW5jdGlvbigpe3ZhciBhPXlmLXBlcmZvcm1hbmNlLm5vdygpO3JldHVybiAwPGE/YTowfX06e2RpZFRpbWVvdXQ6ITEsdGltZVJlbWFpbmluZzpmdW5jdGlvbigpe3ZhciBhPXlmLURhdGUubm93KCk7cmV0dXJuIDA8YT9hOjB9fTt2YXIgQ2Y9XCJfX3JlYWN0SWRsZUNhbGxiYWNrJFwiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLGZ1bmN0aW9uKGEpe2lmKGEuc291cmNlPT09d2luZG93JiZhLmRhdGE9PT1DZil7dmY9ITE7YT1yZigpO2lmKDA+PXlmLWEpaWYoLTEhPT13ZiYmd2Y8PVxuYSlCZi5kaWRUaW1lb3V0PSEwO2Vsc2V7eGZ8fCh4Zj0hMCxyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoRGYpKTtyZXR1cm59ZWxzZSBCZi5kaWRUaW1lb3V0PSExO3dmPS0xO2E9dWY7dWY9bnVsbDtudWxsIT09YSYmYShCZil9fSwhMSk7dmFyIERmPWZ1bmN0aW9uKGEpe3hmPSExO3ZhciBiPWEteWYrQWY7YjxBZiYmemY8QWY/KDg+YiYmKGI9OCksQWY9Yjx6Zj96ZjpiKTp6Zj1iO3lmPWErQWY7dmZ8fCh2Zj0hMCx3aW5kb3cucG9zdE1lc3NhZ2UoQ2YsXCIqXCIpKX07c2Y9ZnVuY3Rpb24oYSxiKXt1Zj1hO251bGwhPWImJlwibnVtYmVyXCI9PT10eXBlb2YgYi50aW1lb3V0JiYod2Y9cmYoKStiLnRpbWVvdXQpO3hmfHwoeGY9ITAscmVxdWVzdEFuaW1hdGlvbkZyYW1lKERmKSk7cmV0dXJuIDB9O3RmPWZ1bmN0aW9uKCl7dWY9bnVsbDt2Zj0hMTt3Zj0tMX19ZWxzZSBzZj13aW5kb3cucmVxdWVzdElkbGVDYWxsYmFjayx0Zj13aW5kb3cuY2FuY2VsSWRsZUNhbGxiYWNrO2Vsc2Ugc2Y9ZnVuY3Rpb24oYSl7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXthKHt0aW1lUmVtYWluaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIEluZmluaXR5fX0pfSl9LFxudGY9ZnVuY3Rpb24oYSl7Y2xlYXJUaW1lb3V0KGEpfTt2YXIgRWY9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLEZmPXt9LEdmPXt9O1xuZnVuY3Rpb24gSGYoYSl7aWYoR2YuaGFzT3duUHJvcGVydHkoYSkpcmV0dXJuITA7aWYoRmYuaGFzT3duUHJvcGVydHkoYSkpcmV0dXJuITE7aWYoRWYudGVzdChhKSlyZXR1cm4gR2ZbYV09ITA7RmZbYV09ITA7cmV0dXJuITF9XG5mdW5jdGlvbiBJZihhLGIsYyl7dmFyIGQ9d2EoYik7aWYoZCYmdmEoYixjKSl7dmFyIGU9ZC5tdXRhdGlvbk1ldGhvZDtlP2UoYSxjKTpudWxsPT1jfHxkLmhhc0Jvb2xlYW5WYWx1ZSYmIWN8fGQuaGFzTnVtZXJpY1ZhbHVlJiZpc05hTihjKXx8ZC5oYXNQb3NpdGl2ZU51bWVyaWNWYWx1ZSYmMT5jfHxkLmhhc092ZXJsb2FkZWRCb29sZWFuVmFsdWUmJiExPT09Yz9KZihhLGIpOmQubXVzdFVzZVByb3BlcnR5P2FbZC5wcm9wZXJ0eU5hbWVdPWM6KGI9ZC5hdHRyaWJ1dGVOYW1lLChlPWQuYXR0cmlidXRlTmFtZXNwYWNlKT9hLnNldEF0dHJpYnV0ZU5TKGUsYixcIlwiK2MpOmQuaGFzQm9vbGVhblZhbHVlfHxkLmhhc092ZXJsb2FkZWRCb29sZWFuVmFsdWUmJiEwPT09Yz9hLnNldEF0dHJpYnV0ZShiLFwiXCIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSl9ZWxzZSBLZihhLGIsdmEoYixjKT9jOm51bGwpfVxuZnVuY3Rpb24gS2YoYSxiLGMpe0hmKGIpJiYobnVsbD09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpfWZ1bmN0aW9uIEpmKGEsYil7dmFyIGM9d2EoYik7Yz8oYj1jLm11dGF0aW9uTWV0aG9kKT9iKGEsdm9pZCAwKTpjLm11c3RVc2VQcm9wZXJ0eT9hW2MucHJvcGVydHlOYW1lXT1jLmhhc0Jvb2xlYW5WYWx1ZT8hMTpcIlwiOmEucmVtb3ZlQXR0cmlidXRlKGMuYXR0cmlidXRlTmFtZSk6YS5yZW1vdmVBdHRyaWJ1dGUoYil9XG5mdW5jdGlvbiBMZihhLGIpe3ZhciBjPWIudmFsdWUsZD1iLmNoZWNrZWQ7cmV0dXJuIEIoe3R5cGU6dm9pZCAwLHN0ZXA6dm9pZCAwLG1pbjp2b2lkIDAsbWF4OnZvaWQgMH0sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUsY2hlY2tlZDpudWxsIT1kP2Q6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gTWYoYSxiKXt2YXIgYz1iLmRlZmF1bHRWYWx1ZTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOm51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZCxpbml0aWFsVmFsdWU6bnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19XG5mdW5jdGlvbiBOZihhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJklmKGEsXCJjaGVja2VkXCIsYil9ZnVuY3Rpb24gT2YoYSxiKXtOZihhLGIpO3ZhciBjPWIudmFsdWU7aWYobnVsbCE9YylpZigwPT09YyYmXCJcIj09PWEudmFsdWUpYS52YWx1ZT1cIjBcIjtlbHNlIGlmKFwibnVtYmVyXCI9PT1iLnR5cGUpe2lmKGI9cGFyc2VGbG9hdChhLnZhbHVlKXx8MCxjIT1ifHxjPT1iJiZhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIG51bGw9PWIudmFsdWUmJm51bGwhPWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYi5kZWZhdWx0VmFsdWUmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2IuZGVmYXVsdFZhbHVlKSxudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBQZihhLGIpe3N3aXRjaChiLnR5cGUpe2Nhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztjYXNlIFwiY29sb3JcIjpjYXNlIFwiZGF0ZVwiOmNhc2UgXCJkYXRldGltZVwiOmNhc2UgXCJkYXRldGltZS1sb2NhbFwiOmNhc2UgXCJtb250aFwiOmNhc2UgXCJ0aW1lXCI6Y2FzZSBcIndlZWtcIjphLnZhbHVlPVwiXCI7YS52YWx1ZT1hLmRlZmF1bHRWYWx1ZTticmVhaztkZWZhdWx0OmEudmFsdWU9YS52YWx1ZX1iPWEubmFtZTtcIlwiIT09YiYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7XCJcIiE9PWImJihhLm5hbWU9Yil9ZnVuY3Rpb24gUWYoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbD09YXx8XCJzdHJpbmdcIiE9PXR5cGVvZiBhJiZcIm51bWJlclwiIT09dHlwZW9mIGF8fChiKz1hKX0pO3JldHVybiBifVxuZnVuY3Rpb24gUmYoYSxiKXthPUIoe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1RZihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9ZnVuY3Rpb24gU2YoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK2M7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIFRmKGEsYil7dmFyIGM9Yi52YWx1ZTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpudWxsIT1jP2M6Yi5kZWZhdWx0VmFsdWUsd2FzTXVsdGlwbGU6ISFiLm11bHRpcGxlfX1mdW5jdGlvbiBVZihhLGIpe251bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/RShcIjkxXCIpOnZvaWQgMDtyZXR1cm4gQih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBWZihhLGIpe3ZhciBjPWIudmFsdWU7bnVsbD09YyYmKGM9Yi5kZWZhdWx0VmFsdWUsYj1iLmNoaWxkcmVuLG51bGwhPWImJihudWxsIT1jP0UoXCI5MlwiKTp2b2lkIDAsQXJyYXkuaXNBcnJheShiKSYmKDE+PWIubGVuZ3RoP3ZvaWQgMDpFKFwiOTNcIiksYj1iWzBdKSxjPVwiXCIrYiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOlwiXCIrY319XG5mdW5jdGlvbiBXZihhLGIpe3ZhciBjPWIudmFsdWU7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1iLmRlZmF1bHRWYWx1ZSYmKGEuZGVmYXVsdFZhbHVlPWIuZGVmYXVsdFZhbHVlKX1mdW5jdGlvbiBYZihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiYoYS52YWx1ZT1iKX12YXIgWWY9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gWmYoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiAkZihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/WmYoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgYWc9dm9pZCAwLGJnPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PVlmLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle2FnPWFnfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2FnLmlubmVySFRNTD1cIlxceDNjc3ZnXFx4M2VcIitiK1wiXFx4M2Mvc3ZnXFx4M2VcIjtmb3IoYj1hZy5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBjZyhhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIGRnPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxmbG9vZE9wYWNpdHk6ITAsXG5zdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LGVnPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhkZykuZm9yRWFjaChmdW5jdGlvbihhKXtlZy5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO2RnW2JdPWRnW2FdfSl9KTtcbmZ1bmN0aW9uIGZnKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKTt2YXIgZT1jO3ZhciBmPWJbY107ZT1udWxsPT1mfHxcImJvb2xlYW5cIj09PXR5cGVvZiBmfHxcIlwiPT09Zj9cIlwiOmR8fFwibnVtYmVyXCIhPT10eXBlb2YgZnx8MD09PWZ8fGRnLmhhc093blByb3BlcnR5KGUpJiZkZ1tlXT8oXCJcIitmKS50cmltKCk6ZitcInB4XCI7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBnZz1CKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gaGcoYSxiLGMpe2ImJihnZ1thXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/RShcIjEzN1wiLGEsYygpKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP0UoXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6RShcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/RShcIjYyXCIsYygpKTp2b2lkIDApfVxuZnVuY3Rpb24gaWcoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciBqZz1ZZi5odG1sLGtnPUMudGhhdFJldHVybnMoXCJcIik7XG5mdW5jdGlvbiBsZyhhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1IZChhKTtiPVNhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXt2YXIgZT1iW2RdO2MuaGFzT3duUHJvcGVydHkoZSkmJmNbZV18fChcInRvcFNjcm9sbFwiPT09ZT93ZChcInRvcFNjcm9sbFwiLFwic2Nyb2xsXCIsYSk6XCJ0b3BGb2N1c1wiPT09ZXx8XCJ0b3BCbHVyXCI9PT1lPyh3ZChcInRvcEZvY3VzXCIsXCJmb2N1c1wiLGEpLHdkKFwidG9wQmx1clwiLFwiYmx1clwiLGEpLGMudG9wQmx1cj0hMCxjLnRvcEZvY3VzPSEwKTpcInRvcENhbmNlbFwiPT09ZT8oeWMoXCJjYW5jZWxcIiwhMCkmJndkKFwidG9wQ2FuY2VsXCIsXCJjYW5jZWxcIixhKSxjLnRvcENhbmNlbD0hMCk6XCJ0b3BDbG9zZVwiPT09ZT8oeWMoXCJjbG9zZVwiLCEwKSYmd2QoXCJ0b3BDbG9zZVwiLFwiY2xvc2VcIixhKSxjLnRvcENsb3NlPSEwKTpEZC5oYXNPd25Qcm9wZXJ0eShlKSYmVShlLERkW2VdLGEpLGNbZV09ITApfX1cbnZhciBtZz17dG9wQWJvcnQ6XCJhYm9ydFwiLHRvcENhblBsYXk6XCJjYW5wbGF5XCIsdG9wQ2FuUGxheVRocm91Z2g6XCJjYW5wbGF5dGhyb3VnaFwiLHRvcER1cmF0aW9uQ2hhbmdlOlwiZHVyYXRpb25jaGFuZ2VcIix0b3BFbXB0aWVkOlwiZW1wdGllZFwiLHRvcEVuY3J5cHRlZDpcImVuY3J5cHRlZFwiLHRvcEVuZGVkOlwiZW5kZWRcIix0b3BFcnJvcjpcImVycm9yXCIsdG9wTG9hZGVkRGF0YTpcImxvYWRlZGRhdGFcIix0b3BMb2FkZWRNZXRhZGF0YTpcImxvYWRlZG1ldGFkYXRhXCIsdG9wTG9hZFN0YXJ0OlwibG9hZHN0YXJ0XCIsdG9wUGF1c2U6XCJwYXVzZVwiLHRvcFBsYXk6XCJwbGF5XCIsdG9wUGxheWluZzpcInBsYXlpbmdcIix0b3BQcm9ncmVzczpcInByb2dyZXNzXCIsdG9wUmF0ZUNoYW5nZTpcInJhdGVjaGFuZ2VcIix0b3BTZWVrZWQ6XCJzZWVrZWRcIix0b3BTZWVraW5nOlwic2Vla2luZ1wiLHRvcFN0YWxsZWQ6XCJzdGFsbGVkXCIsdG9wU3VzcGVuZDpcInN1c3BlbmRcIix0b3BUaW1lVXBkYXRlOlwidGltZXVwZGF0ZVwiLHRvcFZvbHVtZUNoYW5nZTpcInZvbHVtZWNoYW5nZVwiLFxudG9wV2FpdGluZzpcIndhaXRpbmdcIn07ZnVuY3Rpb24gbmcoYSxiLGMsZCl7Yz05PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtkPT09amcmJihkPVpmKGEpKTtkPT09amc/XCJzY3JpcHRcIj09PWE/KGE9Yy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiXFx4M2NzY3JpcHRcXHgzZVxceDNjL3NjcmlwdFxceDNlXCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOmE9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzP2MuY3JlYXRlRWxlbWVudChhLHtpczpiLmlzfSk6Yy5jcmVhdGVFbGVtZW50KGEpOmE9Yy5jcmVhdGVFbGVtZW50TlMoZCxhKTtyZXR1cm4gYX1mdW5jdGlvbiBvZyhhLGIpe3JldHVybig5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoYSl9XG5mdW5jdGlvbiBwZyhhLGIsYyxkKXt2YXIgZT1pZyhiLGMpO3N3aXRjaChiKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOlUoXCJ0b3BMb2FkXCIsXCJsb2FkXCIsYSk7dmFyIGY9YzticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZiBpbiBtZyltZy5oYXNPd25Qcm9wZXJ0eShmKSYmVShmLG1nW2ZdLGEpO2Y9YzticmVhaztjYXNlIFwic291cmNlXCI6VShcInRvcEVycm9yXCIsXCJlcnJvclwiLGEpO2Y9YzticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6VShcInRvcEVycm9yXCIsXCJlcnJvclwiLGEpO1UoXCJ0b3BMb2FkXCIsXCJsb2FkXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJmb3JtXCI6VShcInRvcFJlc2V0XCIsXCJyZXNldFwiLGEpO1UoXCJ0b3BTdWJtaXRcIixcInN1Ym1pdFwiLGEpO2Y9YzticmVhaztjYXNlIFwiZGV0YWlsc1wiOlUoXCJ0b3BUb2dnbGVcIixcInRvZ2dsZVwiLGEpO2Y9YzticmVhaztjYXNlIFwiaW5wdXRcIjpNZihhLGMpO2Y9TGYoYSxjKTtVKFwidG9wSW52YWxpZFwiLFwiaW52YWxpZFwiLGEpO1xubGcoZCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPVJmKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOlRmKGEsYyk7Zj1CKHt9LGMse3ZhbHVlOnZvaWQgMH0pO1UoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7bGcoZCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZmKGEsYyk7Zj1VZihhLGMpO1UoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7bGcoZCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6Zj1jfWhnKGIsZixrZyk7dmFyIGc9ZixoO2ZvcihoIGluIGcpaWYoZy5oYXNPd25Qcm9wZXJ0eShoKSl7dmFyIGs9Z1toXTtcInN0eWxlXCI9PT1oP2ZnKGEsayxrZyk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZiZyhhLGspKTpcImNoaWxkcmVuXCI9PT1oP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09Ynx8XCJcIiE9PWspJiZjZyhhLGspOlwibnVtYmVyXCI9PT10eXBlb2YgayYmY2coYSxcblwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiZcImF1dG9Gb2N1c1wiIT09aCYmKFJhLmhhc093blByb3BlcnR5KGgpP251bGwhPWsmJmxnKGQsaCk6ZT9LZihhLGgsayk6bnVsbCE9ayYmSWYoYSxoLGspKX1zd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6QmMoYSk7UGYoYSxjKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpCYyhhKTtYZihhLGMpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1jLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsYy52YWx1ZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFjLm11bHRpcGxlO2I9Yy52YWx1ZTtudWxsIT1iP1NmKGEsISFjLm11bHRpcGxlLGIsITEpOm51bGwhPWMuZGVmYXVsdFZhbHVlJiZTZihhLCEhYy5tdWx0aXBsZSxjLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoYS5vbmNsaWNrPVxuQyl9fVxuZnVuY3Rpb24gc2coYSxiLGMsZCxlKXt2YXIgZj1udWxsO3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpjPUxmKGEsYyk7ZD1MZihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmM9UmYoYSxjKTtkPVJmKGEsZCk7Zj1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Yz1CKHt9LGMse3ZhbHVlOnZvaWQgMH0pO2Q9Qih7fSxkLHt2YWx1ZTp2b2lkIDB9KTtmPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmM9VWYoYSxjKTtkPVVmKGEsZCk7Zj1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihhLm9uY2xpY2s9Qyl9aGcoYixkLGtnKTt2YXIgZyxoO2E9bnVsbDtmb3IoZyBpbiBjKWlmKCFkLmhhc093blByb3BlcnR5KGcpJiZjLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1jW2ddKWlmKFwic3R5bGVcIj09PWcpZm9yKGggaW4gYj1jW2ddLGIpYi5oYXNPd25Qcm9wZXJ0eShoKSYmKGF8fChhPXt9KSxhW2hdPVxuXCJcIik7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWcmJlwiY2hpbGRyZW5cIiE9PWcmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1nJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZyYmXCJhdXRvRm9jdXNcIiE9PWcmJihSYS5oYXNPd25Qcm9wZXJ0eShnKT9mfHwoZj1bXSk6KGY9Znx8W10pLnB1c2goZyxudWxsKSk7Zm9yKGcgaW4gZCl7dmFyIGs9ZFtnXTtiPW51bGwhPWM/Y1tnXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShnKSYmayE9PWImJihudWxsIT1rfHxudWxsIT1iKSlpZihcInN0eWxlXCI9PT1nKWlmKGIpe2ZvcihoIGluIGIpIWIuaGFzT3duUHJvcGVydHkoaCl8fGsmJmsuaGFzT3duUHJvcGVydHkoaCl8fChhfHwoYT17fSksYVtoXT1cIlwiKTtmb3IoaCBpbiBrKWsuaGFzT3duUHJvcGVydHkoaCkmJmJbaF0hPT1rW2hdJiYoYXx8KGE9e30pLGFbaF09a1toXSl9ZWxzZSBhfHwoZnx8KGY9W10pLGYucHVzaChnLGEpKSxhPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PVxuZz8oaz1rP2suX19odG1sOnZvaWQgMCxiPWI/Yi5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmIhPT1rJiYoZj1mfHxbXSkucHVzaChnLFwiXCIraykpOlwiY2hpbGRyZW5cIj09PWc/Yj09PWt8fFwic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoZj1mfHxbXSkucHVzaChnLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWcmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1nJiYoUmEuaGFzT3duUHJvcGVydHkoZyk/KG51bGwhPWsmJmxnKGUsZyksZnx8Yj09PWt8fChmPVtdKSk6KGY9Znx8W10pLnB1c2goZyxrKSl9YSYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLGEpO3JldHVybiBmfVxuZnVuY3Rpb24gdGcoYSxiLGMsZCxlKXtcImlucHV0XCI9PT1jJiZcInJhZGlvXCI9PT1lLnR5cGUmJm51bGwhPWUubmFtZSYmTmYoYSxlKTtpZyhjLGQpO2Q9aWcoYyxlKTtmb3IodmFyIGY9MDtmPGIubGVuZ3RoO2YrPTIpe3ZhciBnPWJbZl0saD1iW2YrMV07XCJzdHlsZVwiPT09Zz9mZyhhLGgsa2cpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/YmcoYSxoKTpcImNoaWxkcmVuXCI9PT1nP2NnKGEsaCk6ZD9udWxsIT1oP0tmKGEsZyxoKTphLnJlbW92ZUF0dHJpYnV0ZShnKTpudWxsIT1oP0lmKGEsZyxoKTpKZihhLGcpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpPZihhLGUpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOldmKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU9dm9pZCAwLGI9YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWUubXVsdGlwbGUsYz1lLnZhbHVlLG51bGwhPWM/U2YoYSxcbiEhZS5tdWx0aXBsZSxjLCExKTpiIT09ISFlLm11bHRpcGxlJiYobnVsbCE9ZS5kZWZhdWx0VmFsdWU/U2YoYSwhIWUubXVsdGlwbGUsZS5kZWZhdWx0VmFsdWUsITApOlNmKGEsISFlLm11bHRpcGxlLGUubXVsdGlwbGU/W106XCJcIiwhMSkpfX1cbmZ1bmN0aW9uIHVnKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6VShcInRvcExvYWRcIixcImxvYWRcIixhKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IodmFyIGYgaW4gbWcpbWcuaGFzT3duUHJvcGVydHkoZikmJlUoZixtZ1tmXSxhKTticmVhaztjYXNlIFwic291cmNlXCI6VShcInRvcEVycm9yXCIsXCJlcnJvclwiLGEpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpVKFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7VShcInRvcExvYWRcIixcImxvYWRcIixhKTticmVhaztjYXNlIFwiZm9ybVwiOlUoXCJ0b3BSZXNldFwiLFwicmVzZXRcIixhKTtVKFwidG9wU3VibWl0XCIsXCJzdWJtaXRcIixhKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOlUoXCJ0b3BUb2dnbGVcIixcInRvZ2dsZVwiLGEpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOk1mKGEsYyk7VShcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTtsZyhlLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOlRmKGEsYyk7XG5VKFwidG9wSW52YWxpZFwiLFwiaW52YWxpZFwiLGEpO2xnKGUsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWZihhLGMpLFUoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSksbGcoZSxcIm9uQ2hhbmdlXCIpfWhnKGIsYyxrZyk7ZD1udWxsO2Zvcih2YXIgZyBpbiBjKWMuaGFzT3duUHJvcGVydHkoZykmJihmPWNbZ10sXCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGY/YS50ZXh0Q29udGVudCE9PWYmJihkPVtcImNoaWxkcmVuXCIsZl0pOlwibnVtYmVyXCI9PT10eXBlb2YgZiYmYS50ZXh0Q29udGVudCE9PVwiXCIrZiYmKGQ9W1wiY2hpbGRyZW5cIixcIlwiK2ZdKTpSYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9ZiYmbGcoZSxnKSk7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkJjKGEpO1BmKGEsYyk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6QmMoYSk7WGYoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGMub25DbGljayYmXG4oYS5vbmNsaWNrPUMpfXJldHVybiBkfWZ1bmN0aW9uIHZnKGEsYil7cmV0dXJuIGEubm9kZVZhbHVlIT09Yn1cbnZhciB3Zz1PYmplY3QuZnJlZXplKHtjcmVhdGVFbGVtZW50Om5nLGNyZWF0ZVRleHROb2RlOm9nLHNldEluaXRpYWxQcm9wZXJ0aWVzOnBnLGRpZmZQcm9wZXJ0aWVzOnNnLHVwZGF0ZVByb3BlcnRpZXM6dGcsZGlmZkh5ZHJhdGVkUHJvcGVydGllczp1ZyxkaWZmSHlkcmF0ZWRUZXh0OnZnLHdhcm5Gb3JVbm1hdGNoZWRUZXh0OmZ1bmN0aW9uKCl7fSx3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVFbGVtZW50OmZ1bmN0aW9uKCl7fSx3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVUZXh0OmZ1bmN0aW9uKCl7fSx3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZEVsZW1lbnQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkVGV4dDpmdW5jdGlvbigpe30scmVzdG9yZUNvbnRyb2xsZWRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOk9mKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1cbmMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWVcXHgzZFwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZVxceDNkXCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9cmIoZCk7ZT92b2lkIDA6RShcIjkwXCIpO0NjKGQpO09mKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpXZihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmU2YoYSwhIWMubXVsdGlwbGUsYiwhMSl9fX0pO25jLmluamVjdEZpYmVyQ29udHJvbGxlZEhvc3RDb21wb25lbnQod2cpO3ZhciB4Zz1udWxsLE1nPW51bGw7ZnVuY3Rpb24gTmcoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfVxuZnVuY3Rpb24gT2coYSl7YT1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsO3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlfHwhYS5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSl9XG52YXIgWj1vZih7Z2V0Um9vdEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEpe3ZhciBiPWEubm9kZVR5cGU7c3dpdGNoKGIpe2Nhc2UgOTpjYXNlIDExOmE9KGE9YS5kb2N1bWVudEVsZW1lbnQpP2EubmFtZXNwYWNlVVJJOiRmKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpiPTg9PT1iP2EucGFyZW50Tm9kZTphLGE9Yi5uYW1lc3BhY2VVUkl8fG51bGwsYj1iLnRhZ05hbWUsYT0kZihhLGIpfXJldHVybiBhfSxnZXRDaGlsZEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuICRmKGEsYil9LGdldFB1YmxpY0luc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBhfSxwcmVwYXJlRm9yQ29tbWl0OmZ1bmN0aW9uKCl7eGc9dGQ7dmFyIGE9ZGEoKTtpZihLZChhKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gYSl2YXIgYj17c3RhcnQ6YS5zZWxlY3Rpb25TdGFydCxlbmQ6YS5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7dmFyIGM9d2luZG93LmdldFNlbGVjdGlvbiYmd2luZG93LmdldFNlbGVjdGlvbigpO1xuaWYoYyYmMCE9PWMucmFuZ2VDb3VudCl7Yj1jLmFuY2hvck5vZGU7dmFyIGQ9Yy5hbmNob3JPZmZzZXQsZT1jLmZvY3VzTm9kZTtjPWMuZm9jdXNPZmZzZXQ7dHJ5e2Iubm9kZVR5cGUsZS5ub2RlVHlwZX1jYXRjaCh6KXtiPW51bGw7YnJlYWsgYX12YXIgZj0wLGc9LTEsaD0tMSxrPTAscT0wLHY9YSx5PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdTs7KXt2IT09Ynx8MCE9PWQmJjMhPT12Lm5vZGVUeXBlfHwoZz1mK2QpO3YhPT1lfHwwIT09YyYmMyE9PXYubm9kZVR5cGV8fChoPWYrYyk7Mz09PXYubm9kZVR5cGUmJihmKz12Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0odT12LmZpcnN0Q2hpbGQpKWJyZWFrO3k9djt2PXV9Zm9yKDs7KXtpZih2PT09YSlicmVhayBiO3k9PT1iJiYrK2s9PT1kJiYoZz1mKTt5PT09ZSYmKytxPT09YyYmKGg9Zik7aWYobnVsbCE9PSh1PXYubmV4dFNpYmxpbmcpKWJyZWFrO3Y9eTt5PXYucGFyZW50Tm9kZX12PXV9Yj0tMT09PWd8fC0xPT09aD9udWxsOlxue3N0YXJ0OmcsZW5kOmh9fWVsc2UgYj1udWxsfWI9Ynx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgYj1udWxsO01nPXtmb2N1c2VkRWxlbTphLHNlbGVjdGlvblJhbmdlOmJ9O3VkKCExKX0scmVzZXRBZnRlckNvbW1pdDpmdW5jdGlvbigpe3ZhciBhPU1nLGI9ZGEoKSxjPWEuZm9jdXNlZEVsZW0sZD1hLnNlbGVjdGlvblJhbmdlO2lmKGIhPT1jJiZmYShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYykpe2lmKEtkKGMpKWlmKGI9ZC5zdGFydCxhPWQuZW5kLHZvaWQgMD09PWEmJihhPWIpLFwic2VsZWN0aW9uU3RhcnRcImluIGMpYy5zZWxlY3Rpb25TdGFydD1iLGMuc2VsZWN0aW9uRW5kPU1hdGgubWluKGEsYy52YWx1ZS5sZW5ndGgpO2Vsc2UgaWYod2luZG93LmdldFNlbGVjdGlvbil7Yj13aW5kb3cuZ2V0U2VsZWN0aW9uKCk7dmFyIGU9Y1tFYigpXS5sZW5ndGg7YT1NYXRoLm1pbihkLnN0YXJ0LGUpO2Q9dm9pZCAwPT09ZC5lbmQ/YTpNYXRoLm1pbihkLmVuZCxlKTshYi5leHRlbmQmJmE+XG5kJiYoZT1kLGQ9YSxhPWUpO2U9SmQoYyxhKTt2YXIgZj1KZChjLGQpO2lmKGUmJmYmJigxIT09Yi5yYW5nZUNvdW50fHxiLmFuY2hvck5vZGUhPT1lLm5vZGV8fGIuYW5jaG9yT2Zmc2V0IT09ZS5vZmZzZXR8fGIuZm9jdXNOb2RlIT09Zi5ub2RlfHxiLmZvY3VzT2Zmc2V0IT09Zi5vZmZzZXQpKXt2YXIgZz1kb2N1bWVudC5jcmVhdGVSYW5nZSgpO2cuc2V0U3RhcnQoZS5ub2RlLGUub2Zmc2V0KTtiLnJlbW92ZUFsbFJhbmdlcygpO2E+ZD8oYi5hZGRSYW5nZShnKSxiLmV4dGVuZChmLm5vZGUsZi5vZmZzZXQpKTooZy5zZXRFbmQoZi5ub2RlLGYub2Zmc2V0KSxiLmFkZFJhbmdlKGcpKX19Yj1bXTtmb3IoYT1jO2E9YS5wYXJlbnROb2RlOykxPT09YS5ub2RlVHlwZSYmYi5wdXNoKHtlbGVtZW50OmEsbGVmdDphLnNjcm9sbExlZnQsdG9wOmEuc2Nyb2xsVG9wfSk7aWEoYyk7Zm9yKGM9MDtjPGIubGVuZ3RoO2MrKylhPWJbY10sYS5lbGVtZW50LnNjcm9sbExlZnQ9YS5sZWZ0LGEuZWxlbWVudC5zY3JvbGxUb3A9XG5hLnRvcH1NZz1udWxsO3VkKHhnKTt4Zz1udWxsfSxjcmVhdGVJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyxkLGUpe2E9bmcoYSxiLGMsZCk7YVtRXT1lO2Fbb2JdPWI7cmV0dXJuIGF9LGFwcGVuZEluaXRpYWxDaGlsZDpmdW5jdGlvbihhLGIpe2EuYXBwZW5kQ2hpbGQoYil9LGZpbmFsaXplSW5pdGlhbENoaWxkcmVuOmZ1bmN0aW9uKGEsYixjLGQpe3BnKGEsYixjLGQpO2E6e3N3aXRjaChiKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOmE9ISFjLmF1dG9Gb2N1czticmVhayBhfWE9ITF9cmV0dXJuIGF9LHByZXBhcmVVcGRhdGU6ZnVuY3Rpb24oYSxiLGMsZCxlKXtyZXR1cm4gc2coYSxiLGMsZCxlKX0sc2hvdWxkU2V0VGV4dENvbnRlbnQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PVxudHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcInN0cmluZ1wiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfSxzaG91bGREZXByaW9yaXRpemVTdWJ0cmVlOmZ1bmN0aW9uKGEsYil7cmV0dXJuISFiLmhpZGRlbn0sY3JlYXRlVGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEsYixjLGQpe2E9b2coYSxiKTthW1FdPWQ7cmV0dXJuIGF9LG5vdzpyZixtdXRhdGlvbjp7Y29tbWl0TW91bnQ6ZnVuY3Rpb24oYSl7YS5mb2N1cygpfSxjb21taXRVcGRhdGU6ZnVuY3Rpb24oYSxiLGMsZCxlKXthW29iXT1lO3RnKGEsYixjLGQsZSl9LHJlc2V0VGV4dENvbnRlbnQ6ZnVuY3Rpb24oYSl7YS50ZXh0Q29udGVudD1cIlwifSxjb21taXRUZXh0VXBkYXRlOmZ1bmN0aW9uKGEsYixjKXthLm5vZGVWYWx1ZT1jfSxhcHBlbmRDaGlsZDpmdW5jdGlvbihhLGIpe2EuYXBwZW5kQ2hpbGQoYil9LGFwcGVuZENoaWxkVG9Db250YWluZXI6ZnVuY3Rpb24oYSxcbmIpezg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYixhKTphLmFwcGVuZENoaWxkKGIpfSxpbnNlcnRCZWZvcmU6ZnVuY3Rpb24oYSxiLGMpe2EuaW5zZXJ0QmVmb3JlKGIsYyl9LGluc2VydEluQ29udGFpbmVyQmVmb3JlOmZ1bmN0aW9uKGEsYixjKXs4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGIsYyk6YS5pbnNlcnRCZWZvcmUoYixjKX0scmVtb3ZlQ2hpbGQ6ZnVuY3Rpb24oYSxiKXthLnJlbW92ZUNoaWxkKGIpfSxyZW1vdmVDaGlsZEZyb21Db250YWluZXI6ZnVuY3Rpb24oYSxiKXs4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYik6YS5yZW1vdmVDaGlsZChiKX19LGh5ZHJhdGlvbjp7Y2FuSHlkcmF0ZUluc3RhbmNlOmZ1bmN0aW9uKGEsYil7cmV0dXJuIDEhPT1hLm5vZGVUeXBlfHxiLnRvTG93ZXJDYXNlKCkhPT1hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDphfSxjYW5IeWRyYXRlVGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEsXG5iKXtyZXR1cm5cIlwiPT09Ynx8MyE9PWEubm9kZVR5cGU/bnVsbDphfSxnZXROZXh0SHlkcmF0YWJsZVNpYmxpbmc6ZnVuY3Rpb24oYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX0sZ2V0Rmlyc3RIeWRyYXRhYmxlQ2hpbGQ6ZnVuY3Rpb24oYSl7Zm9yKGE9YS5maXJzdENoaWxkO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfSxoeWRyYXRlSW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2FbUV09ZjthW29iXT1jO3JldHVybiB1ZyhhLGIsYyxlLGQpfSxoeWRyYXRlVGV4dEluc3RhbmNlOmZ1bmN0aW9uKGEsYixjKXthW1FdPWM7cmV0dXJuIHZnKGEsYil9LGRpZE5vdE1hdGNoSHlkcmF0ZWRDb250YWluZXJUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdE1hdGNoSHlkcmF0ZWRUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oKXt9LFxuZGlkTm90SHlkcmF0ZUNvbnRhaW5lckluc3RhbmNlOmZ1bmN0aW9uKCl7fSxkaWROb3RIeWRyYXRlSW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdEZpbmRIeWRyYXRhYmxlQ29udGFpbmVySW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdEZpbmRIeWRyYXRhYmxlQ29udGFpbmVyVGV4dEluc3RhbmNlOmZ1bmN0aW9uKCl7fSxkaWROb3RGaW5kSHlkcmF0YWJsZUluc3RhbmNlOmZ1bmN0aW9uKCl7fSxkaWROb3RGaW5kSHlkcmF0YWJsZVRleHRJbnN0YW5jZTpmdW5jdGlvbigpe319LHNjaGVkdWxlRGVmZXJyZWRDYWxsYmFjazpzZixjYW5jZWxEZWZlcnJlZENhbGxiYWNrOnRmLHVzZVN5bmNTY2hlZHVsaW5nOiEwfSk7cmM9Wi5iYXRjaGVkVXBkYXRlcztcbmZ1bmN0aW9uIFBnKGEsYixjLGQsZSl7TmcoYyk/dm9pZCAwOkUoXCIyMDBcIik7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpWi51cGRhdGVDb250YWluZXIoYixmLGEsZSk7ZWxzZXtkPWR8fE9nKGMpO2lmKCFkKWZvcihmPXZvaWQgMDtmPWMubGFzdENoaWxkOyljLnJlbW92ZUNoaWxkKGYpO3ZhciBnPVouY3JlYXRlQ29udGFpbmVyKGMsZCk7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9ZztaLnVuYmF0Y2hlZFVwZGF0ZXMoZnVuY3Rpb24oKXtaLnVwZGF0ZUNvbnRhaW5lcihiLGcsYSxlKX0pfXJldHVybiBaLmdldFB1YmxpY1Jvb3RJbnN0YW5jZShmKX1mdW5jdGlvbiBRZyhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO05nKGIpP3ZvaWQgMDpFKFwiMjAwXCIpO3JldHVybiBwZihhLGIsbnVsbCxjKX1cbmZ1bmN0aW9uIFJnKGEsYil7dGhpcy5fcmVhY3RSb290Q29udGFpbmVyPVouY3JlYXRlQ29udGFpbmVyKGEsYil9UmcucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe1oudXBkYXRlQ29udGFpbmVyKGEsdGhpcy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwsYil9O1JnLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKGEpe1oudXBkYXRlQ29udGFpbmVyKG51bGwsdGhpcy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwsYSl9O1xudmFyIFNnPXtjcmVhdGVQb3J0YWw6UWcsZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYoYilyZXR1cm4gWi5maW5kSG9zdEluc3RhbmNlKGIpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj9FKFwiMTg4XCIpOkUoXCIyMTNcIixPYmplY3Qua2V5cyhhKSl9LGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBQZyhudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUGcobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe251bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcj9FKFwiMzhcIik6dm9pZCAwO3JldHVybiBQZyhhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXtOZyhhKT92b2lkIDA6XG5FKFwiNDBcIik7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oWi51bmJhdGNoZWRVcGRhdGVzKGZ1bmN0aW9uKCl7UGcobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6UWcsdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM6dGMsdW5zdGFibGVfZGVmZXJyZWRVcGRhdGVzOlouZGVmZXJyZWRVcGRhdGVzLGZsdXNoU3luYzpaLmZsdXNoU3luYyxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRQbHVnaW5IdWI6bWIsRXZlbnRQbHVnaW5SZWdpc3RyeTpWYSxFdmVudFByb3BhZ2F0b3JzOkNiLFJlYWN0Q29udHJvbGxlZENvbXBvbmVudDpxYyxSZWFjdERPTUNvbXBvbmVudFRyZWU6c2IsUmVhY3RET01FdmVudExpc3RlbmVyOnhkfX07XG5aLmluamVjdEludG9EZXZUb29scyh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6cGIsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4yLjBcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgVGc9T2JqZWN0LmZyZWV6ZSh7ZGVmYXVsdDpTZ30pLFVnPVRnJiZTZ3x8VGc7bW9kdWxlLmV4cG9ydHM9VWdbXCJkZWZhdWx0XCJdP1VnW1wiZGVmYXVsdFwiXTpVZztcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMi4wXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgbT1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eU9iamVjdFwiKSxwPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eUZ1bmN0aW9uXCIpLHE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sW1wiZm9yXCJdLHI9cT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLHQ9cT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5jYWxsXCIpOjYwMTA0LHU9cT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5yZXR1cm5cIik6NjAxMDUsdj1xP1N5bWJvbFtcImZvclwiXShcInJlYWN0LnBvcnRhbFwiKTo2MDEwNix3PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcseD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7XG5mdW5jdGlvbiB5KGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZT1cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0L2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudFxceDNkXCIrYSxjPTA7YzxiO2MrKyllKz1cIlxceDI2YXJnc1tdXFx4M2RcIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2I9RXJyb3IoZStcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2IubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIjtiLmZyYW1lc1RvUG9wPTE7dGhyb3cgYjt9XG52YXIgej17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX07ZnVuY3Rpb24gQShhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1uO3RoaXMudXBkYXRlcj1lfHx6fUEucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307QS5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hP3koXCI4NVwiKTp2b2lkIDA7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtBLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEIoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9bjt0aGlzLnVwZGF0ZXI9ZXx8en1mdW5jdGlvbiBDKCl7fUMucHJvdG90eXBlPUEucHJvdG90eXBlO3ZhciBEPUIucHJvdG90eXBlPW5ldyBDO0QuY29uc3RydWN0b3I9QjttKEQsQS5wcm90b3R5cGUpO0QuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7ZnVuY3Rpb24gRShhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1uO3RoaXMudXBkYXRlcj1lfHx6fXZhciBGPUUucHJvdG90eXBlPW5ldyBDO0YuY29uc3RydWN0b3I9RTttKEYsQS5wcm90b3R5cGUpO0YudW5zdGFibGVfaXNBc3luY1JlYWN0Q29tcG9uZW50PSEwO0YucmVuZGVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW59O3ZhciBHPXtjdXJyZW50Om51bGx9LEg9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxJPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBKKGEsYixlKXt2YXIgYyxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoYyBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUguY2FsbChiLGMpJiYhSS5oYXNPd25Qcm9wZXJ0eShjKSYmKGRbY109YltjXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLGw9MDtsPGY7bCsrKWhbbF09YXJndW1lbnRzW2wrMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihjIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2NdJiYoZFtjXT1mW2NdKTtyZXR1cm57JCR0eXBlb2Y6cix0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Ry5jdXJyZW50fX1mdW5jdGlvbiBLKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1yfVxuZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIlxceDNkXCI6XCJcXHgzZDBcIixcIjpcIjpcIlxceDNkMlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTD0vXFwvKy9nLE09W107ZnVuY3Rpb24gTihhLGIsZSxjKXtpZihNLmxlbmd0aCl7dmFyIGQ9TS5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWU7ZC5jb250ZXh0PWM7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmUsY29udGV4dDpjLGNvdW50OjB9fWZ1bmN0aW9uIE8oYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5NLmxlbmd0aCYmTS5wdXNoKGEpfVxuZnVuY3Rpb24gUChhLGIsZSxjKXt2YXIgZD10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZHx8XCJib29sZWFuXCI9PT1kKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcjpjYXNlIHQ6Y2FzZSB1OmNhc2UgdjpnPSEwfX1pZihnKXJldHVybiBlKGMsYSxcIlwiPT09Yj9cIi5cIitRKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1EoZCxrKTtnKz1QKGQsZixlLGMpfWVsc2UgaWYobnVsbD09PWF8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYT9mPW51bGw6KGY9eCYmYVt4XXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPVxuZi5jYWxsKGEpLGs9MDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrUShkLGsrKyksZys9UChkLGYsZSxjKTtlbHNlXCJvYmplY3RcIj09PWQmJihlPVwiXCIrYSx5KFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09ZT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjplLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBRKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBSKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIFMoYSxiLGUpe3ZhciBjPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/VChhLGMsZSxwLnRoYXRSZXR1cm5zQXJndW1lbnQpOm51bGwhPWEmJihLKGEpJiYoYj1kKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShMLFwiJFxceDI2L1wiKStcIi9cIikrZSxhPXskJHR5cGVvZjpyLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn0pLGMucHVzaChhKSl9ZnVuY3Rpb24gVChhLGIsZSxjLGQpe3ZhciBnPVwiXCI7bnVsbCE9ZSYmKGc9KFwiXCIrZSkucmVwbGFjZShMLFwiJFxceDI2L1wiKStcIi9cIik7Yj1OKGIsZyxjLGQpO251bGw9PWF8fFAoYSxcIlwiLFMsYik7TyhiKX1cbnZhciBVPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1QoYSxjLG51bGwsYixlKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTtiPU4obnVsbCxudWxsLGIsZSk7bnVsbD09YXx8UChhLFwiXCIsUixiKTtPKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gbnVsbD09YT8wOlAoYSxcIlwiLHAudGhhdFJldHVybnNOdWxsLG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1QoYSxiLG51bGwscC50aGF0UmV0dXJuc0FyZ3VtZW50KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtLKGEpP3ZvaWQgMDp5KFwiMTQzXCIpO3JldHVybiBhfX0sQ29tcG9uZW50OkEsUHVyZUNvbXBvbmVudDpCLHVuc3RhYmxlX0FzeW5jQ29tcG9uZW50OkUsRnJhZ21lbnQ6dyxjcmVhdGVFbGVtZW50OkosY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixlKXt2YXIgYz1tKHt9LGEucHJvcHMpLFxuZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Ry5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilILmNhbGwoYixoKSYmIUkuaGFzT3duUHJvcGVydHkoaCkmJihjW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpYy5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbD0wO2w8aDtsKyspZltsXT1hcmd1bWVudHNbbCsyXTtjLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnIsdHlwZTphLnR5cGUsa2V5OmQscmVmOmcscHJvcHM6Yyxfb3duZXI6a319LGNyZWF0ZUZhY3Rvcnk6ZnVuY3Rpb24oYSl7dmFyIGI9Si5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9LFxuaXNWYWxpZEVsZW1lbnQ6Syx2ZXJzaW9uOlwiMTYuMi4wXCIsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudE93bmVyOkcsYXNzaWduOm19fSxWPU9iamVjdC5mcmVlemUoe2RlZmF1bHQ6VX0pLFc9ViYmVXx8Vjttb2R1bGUuZXhwb3J0cz1XW1wiZGVmYXVsdFwiXT9XW1wiZGVmYXVsdFwiXTpXO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSdcbmltcG9ydCBUZXN0RGl2IGZyb20gJy4vY2gzL1Rlc3REaXYnXG5cblxuUmVhY3RET00ucmVuZGVyKFxuICA8VGVzdERpdiAvPixcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rlc3Rtc2cxJylcbik7XG4iXSwic291cmNlUm9vdCI6IiJ9